// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     /*OCCURENCES*/<|[|{| contextId: 0 |}constructor|]();|>
//     <|[|{| contextId: 1 |}constructor|](x: number);|>
//     <|[|{| contextId: 2 |}constructor|](y: string);|>
//     <|[|{| contextId: 3 |}constructor|](a?: any) {
//     }|>
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }

[
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 24,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 24,
      "length": 14
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 43,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 43,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 71,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 71,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 99,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 99,
      "length": 28
    }
  }
]

// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     <|[|{| contextId: 0 |}constructor|]();|>
//     /*OCCURENCES*/<|[|{| contextId: 1 |}constructor|](x: number);|>
//     <|[|{| contextId: 2 |}constructor|](y: string);|>
//     <|[|{| contextId: 3 |}constructor|](a?: any) {
//     }|>
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }

[
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 24,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 24,
      "length": 14
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 43,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 43,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 71,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 71,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 99,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 99,
      "length": 28
    }
  }
]

// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     <|[|{| contextId: 0 |}constructor|]();|>
//     <|[|{| contextId: 1 |}constructor|](x: number);|>
//     /*OCCURENCES*/<|[|{| contextId: 2 |}constructor|](y: string);|>
//     <|[|{| contextId: 3 |}constructor|](a?: any) {
//     }|>
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }

[
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 24,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 24,
      "length": 14
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 43,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 43,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 71,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 71,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 99,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 99,
      "length": 28
    }
  }
]

// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     <|[|{| contextId: 0 |}constructor|]();|>
//     <|[|{| contextId: 1 |}constructor|](x: number);|>
//     <|[|{| contextId: 2 |}constructor|](y: string);|>
//     /*OCCURENCES*/<|[|{| contextId: 3 |}constructor|](a?: any) {
//     }|>
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }

[
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 24,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 24,
      "length": 14
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 43,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 43,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 71,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 71,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 99,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 99,
      "length": 28
    }
  }
]