// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isDefinition: true |}propx|]: number|>
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt <|[|{| contextId: 1, defId: 0, isWriteAccess: true |}propx|]={100}|> propString />;
// let opt2 = <Opt <|[|{| contextId: 2, defId: 0, isWriteAccess: true |}propx|]={100}|> optional/>;
// let opt3 = <Opt wrong />;

// === Definitions ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}propx|]: number|>
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) OptionPropBag.propx: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "OptionPropBag",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "propx",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]