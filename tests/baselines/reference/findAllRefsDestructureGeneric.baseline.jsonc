// === /tests/cases/fourslash/findAllRefsDestructureGeneric.ts ===
// interface I<T> {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isDefinition: true |}x|]: boolean;|>
// }
// declare const i: I<number>;
// <|const { [|{| contextId: 1, defId: 0, isWriteAccess: true |}x|] } = i;|>

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsDestructureGeneric.ts ===
// interface I<T> {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, kind: "property", name: "(property) I<T>.x: boolean", displayParts: [{"text":"(","kind":"punctuation"},{"text":"property","kind":"text"},{"text":")","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"I","kind":"interfaceName"},{"text":"<","kind":"punctuation"},{"text":"T","kind":"typeParameterName"},{"text":">","kind":"punctuation"},{"text":".","kind":"punctuation"},{"text":"x","kind":"propertyName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"boolean","kind":"keyword"}] |}x|]: boolean;|>
// }
// declare const i: I<number>;
// const { x } = i;

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/findAllRefsDestructureGeneric.ts",
      "kind": "property",
      "name": "(property) I<T>.x: boolean",
      "textSpan": {
        "start": 21,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "I",
          "kind": "interfaceName"
        },
        {
          "text": "<",
          "kind": "punctuation"
        },
        {
          "text": "T",
          "kind": "typeParameterName"
        },
        {
          "text": ">",
          "kind": "punctuation"
        },
        {
          "text": ".",
          "kind": "punctuation"
        },
        {
          "text": "x",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "boolean",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 21,
        "length": 11
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 21,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsDestructureGeneric.ts",
        "contextSpan": {
          "start": 21,
          "length": 11
        },
        "isWriteAccess": false,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 71,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsDestructureGeneric.ts",
        "contextSpan": {
          "start": 63,
          "length": 16
        },
        "isWriteAccess": true,
        "isDefinition": false
      }
    ]
  }
]

// === /tests/cases/fourslash/findAllRefsDestructureGeneric.ts ===
// interface I<T> {
//     <|[|{| contextId: 0, defId: 0 |}x|]: boolean;|>
// }
// declare const i: I<number>;
// <|const { /*FIND ALL REFS*/[|{| contextId: 1, defId: 1, isWriteAccess: true, isDefinition: true |}x|] } = i;|>

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsDestructureGeneric.ts ===
// interface I<T> {
//     <|[|{| contextId: 0, defId: 0, kind: "property", name: "(property) I<T>.x: boolean", displayParts: [{"text":"(","kind":"punctuation"},{"text":"property","kind":"text"},{"text":")","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"I","kind":"interfaceName"},{"text":"<","kind":"punctuation"},{"text":"T","kind":"typeParameterName"},{"text":">","kind":"punctuation"},{"text":".","kind":"punctuation"},{"text":"x","kind":"propertyName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"boolean","kind":"keyword"}] |}x|]: boolean;|>
// }
// declare const i: I<number>;
// <|const { /*FIND ALL REFS*/[|{| contextId: 1, defId: 1, kind: "const", name: "const x: boolean", displayParts: [{"text":"const","kind":"keyword"},{"text":" ","kind":"space"},{"text":"x","kind":"localName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"boolean","kind":"keyword"}] |}x|] } = i;|>

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/findAllRefsDestructureGeneric.ts",
      "kind": "property",
      "name": "(property) I<T>.x: boolean",
      "textSpan": {
        "start": 21,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "I",
          "kind": "interfaceName"
        },
        {
          "text": "<",
          "kind": "punctuation"
        },
        {
          "text": "T",
          "kind": "typeParameterName"
        },
        {
          "text": ">",
          "kind": "punctuation"
        },
        {
          "text": ".",
          "kind": "punctuation"
        },
        {
          "text": "x",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "boolean",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 21,
        "length": 11
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 21,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsDestructureGeneric.ts",
        "contextSpan": {
          "start": 21,
          "length": 11
        },
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/findAllRefsDestructureGeneric.ts",
      "kind": "const",
      "name": "const x: boolean",
      "textSpan": {
        "start": 71,
        "length": 1
      },
      "displayParts": [
        {
          "text": "const",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "x",
          "kind": "localName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "boolean",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 63,
        "length": 16
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 71,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsDestructureGeneric.ts",
        "contextSpan": {
          "start": 63,
          "length": 16
        },
        "isWriteAccess": true,
        "isDefinition": true
      }
    ]
  }
]