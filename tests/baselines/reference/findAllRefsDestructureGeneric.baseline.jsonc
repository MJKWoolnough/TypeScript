// === /tests/cases/fourslash/findAllRefsDestructureGeneric.ts ===
// interface I<T> {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isDefinition: true |}x|]: boolean;|>
// }
// declare const i: I<number>;
// <|const { [|{| contextId: 1, defId: 0, isWriteAccess: true |}x|] } = i;|>

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsDestructureGeneric.ts ===
// interface I<T> {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}x|]: boolean;|>
// }
// declare const i: I<number>;
// const { x } = i;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) I<T>.x: boolean",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "I",
    "kind": "interfaceName"
   },
   {
    "text": "<",
    "kind": "punctuation"
   },
   {
    "text": "T",
    "kind": "typeParameterName"
   },
   {
    "text": ">",
    "kind": "punctuation"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "x",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "boolean",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsDestructureGeneric.ts ===
// interface I<T> {
//     <|[|{| contextId: 0, defId: 0 |}x|]: boolean;|>
// }
// declare const i: I<number>;
// <|const { /*FIND ALL REFS*/[|{| contextId: 1, defId: 1, isWriteAccess: true, isDefinition: true |}x|] } = i;|>

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsDestructureGeneric.ts ===
// interface I<T> {
//     <|[|{| contextId: 0, defId: 0 |}x|]: boolean;|>
// }
// declare const i: I<number>;
// <|const { /*FIND ALL REFS*/[|{| contextId: 1, defId: 1 |}x|] } = i;|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) I<T>.x: boolean",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "I",
    "kind": "interfaceName"
   },
   {
    "text": "<",
    "kind": "punctuation"
   },
   {
    "text": "T",
    "kind": "typeParameterName"
   },
   {
    "text": ">",
    "kind": "punctuation"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "x",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "boolean",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const x: boolean",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "boolean",
    "kind": "keyword"
   }
  ]
 }
]