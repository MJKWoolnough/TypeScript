// === findAllReferences ===
// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}q|] = 1;|>
// <|export { [|{| contextId: 1, defId: 0, isWriteAccess: true |}q|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 2, defId: 1, isWriteAccess: true |}q|] } from "./file1";|>
// log([|{| defId: 1 |}q|] + 1);

// === Definitions ===
// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, kind: "const", name: "const q: 1", displayParts: [{"text":"const","kind":"keyword"},{"text":" ","kind":"space"},{"text":"q","kind":"localName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"1","kind":"stringLiteral"}] |}q|] = 1;|>
// export { q };
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 1, defId: 1, kind: "alias", name: "(alias) const q: 1\nimport q", displayParts: [{"text":"(","kind":"punctuation"},{"text":"alias","kind":"text"},{"text":")","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"const","kind":"keyword"},{"text":" ","kind":"space"},{"text":"q","kind":"aliasName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"1","kind":"stringLiteral"},{"text":"\n","kind":"lineBreak"},{"text":"import","kind":"keyword"},{"text":" ","kind":"space"},{"text":"q","kind":"aliasName"}] |}q|] } from "./file1";|>
// log(q + 1);

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/file1.ts",
      "kind": "const",
      "name": "const q: 1",
      "textSpan": {
        "start": 54,
        "length": 1
      },
      "displayParts": [
        {
          "text": "const",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "q",
          "kind": "localName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "1",
          "kind": "stringLiteral"
        }
      ],
      "contextSpan": {
        "start": 48,
        "length": 12
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 54,
          "length": 1
        },
        "fileName": "/file1.ts",
        "contextSpan": {
          "start": 48,
          "length": 12
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 70,
          "length": 1
        },
        "fileName": "/file1.ts",
        "contextSpan": {
          "start": 61,
          "length": 13
        },
        "isWriteAccess": true,
        "isDefinition": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/file2.ts",
      "kind": "alias",
      "name": "(alias) const q: 1\nimport q",
      "textSpan": {
        "start": 57,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "alias",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "const",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "q",
          "kind": "aliasName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "1",
          "kind": "stringLiteral"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "import",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "q",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 48,
        "length": 28
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 57,
          "length": 1
        },
        "fileName": "/file2.ts",
        "contextSpan": {
          "start": 48,
          "length": 28
        },
        "isWriteAccess": true,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 81,
          "length": 1
        },
        "fileName": "/file2.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 0, defId: 0, isWriteAccess: true |}q|] = 1;|>
// <|export { /*FIND ALL REFS*/[|{| contextId: 1, defId: 0, isWriteAccess: true, isDefinition: true |}q|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 2, defId: 1, isWriteAccess: true |}q|] } from "./file1";|>
// log([|{| defId: 1 |}q|] + 1);

// === Definitions ===
// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 0, defId: 0, kind: "const", name: "const q: 1", displayParts: [{"text":"const","kind":"keyword"},{"text":" ","kind":"space"},{"text":"q","kind":"localName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"1","kind":"stringLiteral"}] |}q|] = 1;|>
// export { /*FIND ALL REFS*/q };
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 1, defId: 1, kind: "alias", name: "(alias) const q: 1\nimport q", displayParts: [{"text":"(","kind":"punctuation"},{"text":"alias","kind":"text"},{"text":")","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"const","kind":"keyword"},{"text":" ","kind":"space"},{"text":"q","kind":"aliasName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"1","kind":"stringLiteral"},{"text":"\n","kind":"lineBreak"},{"text":"import","kind":"keyword"},{"text":" ","kind":"space"},{"text":"q","kind":"aliasName"}] |}q|] } from "./file1";|>
// log(q + 1);

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/file1.ts",
      "kind": "const",
      "name": "const q: 1",
      "textSpan": {
        "start": 54,
        "length": 1
      },
      "displayParts": [
        {
          "text": "const",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "q",
          "kind": "localName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "1",
          "kind": "stringLiteral"
        }
      ],
      "contextSpan": {
        "start": 48,
        "length": 12
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 54,
          "length": 1
        },
        "fileName": "/file1.ts",
        "contextSpan": {
          "start": 48,
          "length": 12
        },
        "isWriteAccess": true,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 70,
          "length": 1
        },
        "fileName": "/file1.ts",
        "contextSpan": {
          "start": 61,
          "length": 13
        },
        "isWriteAccess": true,
        "isDefinition": true
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/file2.ts",
      "kind": "alias",
      "name": "(alias) const q: 1\nimport q",
      "textSpan": {
        "start": 57,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "alias",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "const",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "q",
          "kind": "aliasName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "1",
          "kind": "stringLiteral"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "import",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "q",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 48,
        "length": 28
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 57,
          "length": 1
        },
        "fileName": "/file2.ts",
        "contextSpan": {
          "start": 48,
          "length": 28
        },
        "isWriteAccess": true,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 81,
          "length": 1
        },
        "fileName": "/file2.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}q|] } from "./file1";|>
// log([|{| defId: 0 |}q|] + 1);

// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 1, defId: 1, isWriteAccess: true |}q|] = 1;|>
// <|export { [|{| contextId: 2, defId: 1, isWriteAccess: true |}q|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === Definitions ===
// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, kind: "alias", name: "(alias) const q: 1\nimport q", displayParts: [{"text":"(","kind":"punctuation"},{"text":"alias","kind":"text"},{"text":")","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"const","kind":"keyword"},{"text":" ","kind":"space"},{"text":"q","kind":"aliasName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"1","kind":"stringLiteral"},{"text":"\n","kind":"lineBreak"},{"text":"import","kind":"keyword"},{"text":" ","kind":"space"},{"text":"q","kind":"aliasName"}] |}q|] } from "./file1";|>
// log(q + 1);

// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 1, defId: 1, kind: "const", name: "const q: 1", displayParts: [{"text":"const","kind":"keyword"},{"text":" ","kind":"space"},{"text":"q","kind":"localName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"1","kind":"stringLiteral"}] |}q|] = 1;|>
// export { q };
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/file2.ts",
      "kind": "alias",
      "name": "(alias) const q: 1\nimport q",
      "textSpan": {
        "start": 57,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "alias",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "const",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "q",
          "kind": "aliasName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "1",
          "kind": "stringLiteral"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "import",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "q",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 48,
        "length": 28
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 57,
          "length": 1
        },
        "fileName": "/file2.ts",
        "contextSpan": {
          "start": 48,
          "length": 28
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 81,
          "length": 1
        },
        "fileName": "/file2.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/file1.ts",
      "kind": "const",
      "name": "const q: 1",
      "textSpan": {
        "start": 54,
        "length": 1
      },
      "displayParts": [
        {
          "text": "const",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "q",
          "kind": "localName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "1",
          "kind": "stringLiteral"
        }
      ],
      "contextSpan": {
        "start": 48,
        "length": 12
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 54,
          "length": 1
        },
        "fileName": "/file1.ts",
        "contextSpan": {
          "start": 48,
          "length": 12
        },
        "isWriteAccess": true,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 70,
          "length": 1
        },
        "fileName": "/file1.ts",
        "contextSpan": {
          "start": 61,
          "length": 13
        },
        "isWriteAccess": true,
        "isDefinition": false
      }
    ]
  }
]

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 0, defId: 0, isWriteAccess: true |}q|] } from "./file1";|>
// log(/*FIND ALL REFS*/[|{| defId: 0 |}q|] + 1);

// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 1, defId: 1, isWriteAccess: true |}q|] = 1;|>
// <|export { [|{| contextId: 2, defId: 1, isWriteAccess: true |}q|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === Definitions ===
// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 0, defId: 0, kind: "alias", name: "(alias) const q: 1\nimport q", displayParts: [{"text":"(","kind":"punctuation"},{"text":"alias","kind":"text"},{"text":")","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"const","kind":"keyword"},{"text":" ","kind":"space"},{"text":"q","kind":"aliasName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"1","kind":"stringLiteral"},{"text":"\n","kind":"lineBreak"},{"text":"import","kind":"keyword"},{"text":" ","kind":"space"},{"text":"q","kind":"aliasName"}] |}q|] } from "./file1";|>
// log(/*FIND ALL REFS*/q + 1);

// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 1, defId: 1, kind: "const", name: "const q: 1", displayParts: [{"text":"const","kind":"keyword"},{"text":" ","kind":"space"},{"text":"q","kind":"localName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"1","kind":"stringLiteral"}] |}q|] = 1;|>
// export { q };
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/file2.ts",
      "kind": "alias",
      "name": "(alias) const q: 1\nimport q",
      "textSpan": {
        "start": 57,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "alias",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "const",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "q",
          "kind": "aliasName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "1",
          "kind": "stringLiteral"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "import",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "q",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 48,
        "length": 28
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 57,
          "length": 1
        },
        "fileName": "/file2.ts",
        "contextSpan": {
          "start": 48,
          "length": 28
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 81,
          "length": 1
        },
        "fileName": "/file2.ts",
        "isWriteAccess": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/file1.ts",
      "kind": "const",
      "name": "const q: 1",
      "textSpan": {
        "start": 54,
        "length": 1
      },
      "displayParts": [
        {
          "text": "const",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "q",
          "kind": "localName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "1",
          "kind": "stringLiteral"
        }
      ],
      "contextSpan": {
        "start": 48,
        "length": 12
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 54,
          "length": 1
        },
        "fileName": "/file1.ts",
        "contextSpan": {
          "start": 48,
          "length": 12
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 70,
          "length": 1
        },
        "fileName": "/file1.ts",
        "contextSpan": {
          "start": 61,
          "length": 13
        },
        "isWriteAccess": true
      }
    ]
  }
]

// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}z|]: 'value'|>
// }
// <|const { [|{| contextId: 1, defId: 0, isWriteAccess: true |}z|] } = x;|>
// log(z);

// === Definitions ===
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, kind: "property", name: "(property) z: string", displayParts: [{"text":"(","kind":"punctuation"},{"text":"property","kind":"text"},{"text":")","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"z","kind":"propertyName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"string","kind":"keyword"}] |}z|]: 'value'|>
// }
// const { z } = x;
// log(z);

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/file1.ts",
      "kind": "property",
      "name": "(property) z: string",
      "textSpan": {
        "start": 91,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "z",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 91,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 91,
          "length": 1
        },
        "fileName": "/file1.ts",
        "contextSpan": {
          "start": 91,
          "length": 10
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 112,
          "length": 1
        },
        "fileName": "/file1.ts",
        "contextSpan": {
          "start": 104,
          "length": 16
        },
        "isWriteAccess": true,
        "isDefinition": false
      }
    ]
  }
]

// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     <|[|{| contextId: 0, defId: 0, isWriteAccess: true |}z|]: 'value'|>
// }
// <|const { /*FIND ALL REFS*/[|{| contextId: 1, defId: 1, isWriteAccess: true, isDefinition: true |}z|] } = x;|>
// log([|{| defId: 1 |}z|]);

// === Definitions ===
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     <|[|{| contextId: 0, defId: 0, kind: "property", name: "(property) z: string", displayParts: [{"text":"(","kind":"punctuation"},{"text":"property","kind":"text"},{"text":")","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"z","kind":"propertyName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"string","kind":"keyword"}] |}z|]: 'value'|>
// }
// <|const { /*FIND ALL REFS*/[|{| contextId: 1, defId: 1, kind: "const", name: "const z: string", displayParts: [{"text":"const","kind":"keyword"},{"text":" ","kind":"space"},{"text":"z","kind":"localName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"string","kind":"keyword"}] |}z|] } = x;|>
// log(z);

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/file1.ts",
      "kind": "property",
      "name": "(property) z: string",
      "textSpan": {
        "start": 91,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "z",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 91,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 91,
          "length": 1
        },
        "fileName": "/file1.ts",
        "contextSpan": {
          "start": 91,
          "length": 10
        },
        "isWriteAccess": true,
        "isDefinition": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/file1.ts",
      "kind": "const",
      "name": "const z: string",
      "textSpan": {
        "start": 112,
        "length": 1
      },
      "displayParts": [
        {
          "text": "const",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "z",
          "kind": "localName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 104,
        "length": 16
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 112,
          "length": 1
        },
        "fileName": "/file1.ts",
        "contextSpan": {
          "start": 104,
          "length": 16
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 125,
          "length": 1
        },
        "fileName": "/file1.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     z: 'value'
// }
// <|const { [|{| contextId: 0, defId: 0, isWriteAccess: true |}z|] } = x;|>
// log(/*FIND ALL REFS*/[|{| defId: 0 |}z|]);

// === Definitions ===
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     z: 'value'
// }
// <|const { [|{| contextId: 0, defId: 0, kind: "const", name: "const z: string", displayParts: [{"text":"const","kind":"keyword"},{"text":" ","kind":"space"},{"text":"z","kind":"localName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"string","kind":"keyword"}] |}z|] } = x;|>
// log(/*FIND ALL REFS*/z);

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/file1.ts",
      "kind": "const",
      "name": "const z: string",
      "textSpan": {
        "start": 112,
        "length": 1
      },
      "displayParts": [
        {
          "text": "const",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "z",
          "kind": "localName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 104,
        "length": 16
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 112,
          "length": 1
        },
        "fileName": "/file1.ts",
        "contextSpan": {
          "start": 104,
          "length": 16
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 125,
          "length": 1
        },
        "fileName": "/file1.ts",
        "isWriteAccess": false
      }
    ]
  }
]

// === findRenameLocations ===
// === RenameOptions ===
// providePrefixAndSuffixTextForRename: true
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     /*RENAME*/<|[|{| contextId: 0 |}zRENAME|]: 'value'|>
// }
// <|const { [|{| contextId: 1 |}zRENAME|]: z/*END SUFFIX*/ } = x;|>
// log(z);

[
  {
    "textSpan": {
      "start": 91,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 91,
      "length": 10
    }
  },
  {
    "textSpan": {
      "start": 112,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 104,
      "length": 16
    },
    "suffixText": ": z"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: true
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     z: 'value'
// }
// <|const { /*START PREFIX*/z: /*RENAME*/[|{| contextId: 0 |}zRENAME|] } = x;|>
// log([|zRENAME|]);

[
  {
    "textSpan": {
      "start": 112,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 104,
      "length": 16
    },
    "prefixText": "z: "
  },
  {
    "textSpan": {
      "start": 125,
      "length": 1
    },
    "fileName": "/file1.ts"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: true
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     z: 'value'
// }
// <|const { /*START PREFIX*/z: [|{| contextId: 0 |}zRENAME|] } = x;|>
// log(/*RENAME*/[|zRENAME|]);

[
  {
    "textSpan": {
      "start": 112,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 104,
      "length": 16
    },
    "prefixText": "z: "
  },
  {
    "textSpan": {
      "start": 125,
      "length": 1
    },
    "fileName": "/file1.ts"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: true
// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const /*RENAME*/[|{| contextId: 0 |}qRENAME|] = 1;|>
// <|export { [|{| contextId: 1 |}qRENAME|] as q/*END SUFFIX*/ };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

[
  {
    "textSpan": {
      "start": 54,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 48,
      "length": 12
    }
  },
  {
    "textSpan": {
      "start": 70,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 61,
      "length": 13
    },
    "suffixText": " as q"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: true
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// <|export { /*START PREFIX*/q as /*RENAME*/[|{| contextId: 0 |}qRENAME|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 1 |}qRENAME|] } from "./file1";|>
// log([|qRENAME|] + 1);

[
  {
    "textSpan": {
      "start": 70,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 61,
      "length": 13
    },
    "prefixText": "q as "
  },
  {
    "textSpan": {
      "start": 57,
      "length": 1
    },
    "fileName": "/file2.ts",
    "contextSpan": {
      "start": 48,
      "length": 28
    }
  },
  {
    "textSpan": {
      "start": 81,
      "length": 1
    },
    "fileName": "/file2.ts"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: true
// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { /*START PREFIX*/q as /*RENAME*/[|{| contextId: 0 |}qRENAME|] } from "./file1";|>
// log([|qRENAME|] + 1);

[
  {
    "textSpan": {
      "start": 57,
      "length": 1
    },
    "fileName": "/file2.ts",
    "contextSpan": {
      "start": 48,
      "length": 28
    },
    "prefixText": "q as "
  },
  {
    "textSpan": {
      "start": 81,
      "length": 1
    },
    "fileName": "/file2.ts"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: true
// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { /*START PREFIX*/q as [|{| contextId: 0 |}qRENAME|] } from "./file1";|>
// log(/*RENAME*/[|qRENAME|] + 1);

[
  {
    "textSpan": {
      "start": 57,
      "length": 1
    },
    "fileName": "/file2.ts",
    "contextSpan": {
      "start": 48,
      "length": 28
    },
    "prefixText": "q as "
  },
  {
    "textSpan": {
      "start": 81,
      "length": 1
    },
    "fileName": "/file2.ts"
  }
]

// === findRenameLocations ===
// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     /*RENAME*/<|[|{| contextId: 0 |}zRENAME|]: 'value'|>
// }
// <|const { [|{| contextId: 1 |}zRENAME|] } = x;|>
// log([|zRENAME|]);

[
  {
    "textSpan": {
      "start": 91,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 91,
      "length": 10
    }
  },
  {
    "textSpan": {
      "start": 112,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 104,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 125,
      "length": 1
    },
    "fileName": "/file1.ts"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     <|[|{| contextId: 0 |}zRENAME|]: 'value'|>
// }
// <|const { /*RENAME*/[|{| contextId: 1 |}zRENAME|] } = x;|>
// log([|zRENAME|]);

[
  {
    "textSpan": {
      "start": 91,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 91,
      "length": 10
    }
  },
  {
    "textSpan": {
      "start": 112,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 104,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 125,
      "length": 1
    },
    "fileName": "/file1.ts"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     <|[|{| contextId: 0 |}zRENAME|]: 'value'|>
// }
// <|const { [|{| contextId: 1 |}zRENAME|] } = x;|>
// log(/*RENAME*/[|zRENAME|]);

[
  {
    "textSpan": {
      "start": 91,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 91,
      "length": 10
    }
  },
  {
    "textSpan": {
      "start": 112,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 104,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 125,
      "length": 1
    },
    "fileName": "/file1.ts"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const /*RENAME*/[|{| contextId: 0 |}qRENAME|] = 1;|>
// <|export { [|{| contextId: 1 |}qRENAME|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 2 |}qRENAME|] } from "./file1";|>
// log([|qRENAME|] + 1);

[
  {
    "textSpan": {
      "start": 54,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 48,
      "length": 12
    }
  },
  {
    "textSpan": {
      "start": 70,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 61,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 57,
      "length": 1
    },
    "fileName": "/file2.ts",
    "contextSpan": {
      "start": 48,
      "length": 28
    }
  },
  {
    "textSpan": {
      "start": 81,
      "length": 1
    },
    "fileName": "/file2.ts"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 0 |}qRENAME|] = 1;|>
// <|export { /*RENAME*/[|{| contextId: 1 |}qRENAME|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 2 |}qRENAME|] } from "./file1";|>
// log([|qRENAME|] + 1);

[
  {
    "textSpan": {
      "start": 54,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 48,
      "length": 12
    }
  },
  {
    "textSpan": {
      "start": 70,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 61,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 57,
      "length": 1
    },
    "fileName": "/file2.ts",
    "contextSpan": {
      "start": 48,
      "length": 28
    }
  },
  {
    "textSpan": {
      "start": 81,
      "length": 1
    },
    "fileName": "/file2.ts"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { /*RENAME*/[|{| contextId: 0 |}qRENAME|] } from "./file1";|>
// log([|qRENAME|] + 1);

// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 1 |}qRENAME|] = 1;|>
// <|export { [|{| contextId: 2 |}qRENAME|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

[
  {
    "textSpan": {
      "start": 57,
      "length": 1
    },
    "fileName": "/file2.ts",
    "contextSpan": {
      "start": 48,
      "length": 28
    }
  },
  {
    "textSpan": {
      "start": 81,
      "length": 1
    },
    "fileName": "/file2.ts"
  },
  {
    "textSpan": {
      "start": 54,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 48,
      "length": 12
    }
  },
  {
    "textSpan": {
      "start": 70,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 61,
      "length": 13
    }
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 0 |}qRENAME|] } from "./file1";|>
// log(/*RENAME*/[|qRENAME|] + 1);

// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 1 |}qRENAME|] = 1;|>
// <|export { [|{| contextId: 2 |}qRENAME|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

[
  {
    "textSpan": {
      "start": 57,
      "length": 1
    },
    "fileName": "/file2.ts",
    "contextSpan": {
      "start": 48,
      "length": 28
    }
  },
  {
    "textSpan": {
      "start": 81,
      "length": 1
    },
    "fileName": "/file2.ts"
  },
  {
    "textSpan": {
      "start": 54,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 48,
      "length": 12
    }
  },
  {
    "textSpan": {
      "start": 70,
      "length": 1
    },
    "fileName": "/file1.ts",
    "contextSpan": {
      "start": 61,
      "length": 13
    }
  }
]