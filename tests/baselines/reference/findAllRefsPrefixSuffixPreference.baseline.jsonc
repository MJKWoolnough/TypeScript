// === findAllReferences ===
// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}q|] = 1;|>
// <|export { [|{| contextId: 1, defId: 0, isWriteAccess: true |}q|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 2, defId: 1, isWriteAccess: true |}q|] } from "./file1";|>
// log([|{| defId: 1 |}q|] + 1);

// === Definitions ===
// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}q|] = 1;|>
// export { q };
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 1, defId: 1 |}q|] } from "./file1";|>
// log(q + 1);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const q: 1",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "q",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const q: 1\nimport q",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "q",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "q",
    "kind": "aliasName"
   }
  ]
 }
]

// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 0, defId: 0, isWriteAccess: true |}q|] = 1;|>
// <|export { /*FIND ALL REFS*/[|{| contextId: 1, defId: 0, isWriteAccess: true, isDefinition: true |}q|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 2, defId: 1, isWriteAccess: true |}q|] } from "./file1";|>
// log([|{| defId: 1 |}q|] + 1);

// === Definitions ===
// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 0, defId: 0 |}q|] = 1;|>
// export { /*FIND ALL REFS*/q };
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 1, defId: 1 |}q|] } from "./file1";|>
// log(q + 1);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const q: 1",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "q",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const q: 1\nimport q",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "q",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "q",
    "kind": "aliasName"
   }
  ]
 }
]

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}q|] } from "./file1";|>
// log([|{| defId: 0 |}q|] + 1);

// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 1, defId: 1, isWriteAccess: true |}q|] = 1;|>
// <|export { [|{| contextId: 2, defId: 1, isWriteAccess: true |}q|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === Definitions ===
// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}q|] } from "./file1";|>
// log(q + 1);

// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 1, defId: 1 |}q|] = 1;|>
// export { q };
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const q: 1\nimport q",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "q",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "q",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const q: 1",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "q",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   }
  ]
 }
]

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 0, defId: 0, isWriteAccess: true |}q|] } from "./file1";|>
// log(/*FIND ALL REFS*/[|{| defId: 0 |}q|] + 1);

// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 1, defId: 1, isWriteAccess: true |}q|] = 1;|>
// <|export { [|{| contextId: 2, defId: 1, isWriteAccess: true |}q|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === Definitions ===
// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 0, defId: 0 |}q|] } from "./file1";|>
// log(/*FIND ALL REFS*/q + 1);

// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 1, defId: 1 |}q|] = 1;|>
// export { q };
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const q: 1\nimport q",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "q",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "q",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const q: 1",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "q",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   }
  ]
 }
]

// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}z|]: 'value'|>
// }
// <|const { [|{| contextId: 1, defId: 0, isWriteAccess: true |}z|] } = x;|>
// log(z);

// === Definitions ===
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}z|]: 'value'|>
// }
// const { z } = x;
// log(z);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) z: string",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "z",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   }
  ]
 }
]

// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     <|[|{| contextId: 0, defId: 0, isWriteAccess: true |}z|]: 'value'|>
// }
// <|const { /*FIND ALL REFS*/[|{| contextId: 1, defId: 1, isWriteAccess: true, isDefinition: true |}z|] } = x;|>
// log([|{| defId: 1 |}z|]);

// === Definitions ===
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     <|[|{| contextId: 0, defId: 0 |}z|]: 'value'|>
// }
// <|const { /*FIND ALL REFS*/[|{| contextId: 1, defId: 1 |}z|] } = x;|>
// log(z);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) z: string",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "z",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const z: string",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "z",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   }
  ]
 }
]

// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     z: 'value'
// }
// <|const { [|{| contextId: 0, defId: 0, isWriteAccess: true |}z|] } = x;|>
// log(/*FIND ALL REFS*/[|{| defId: 0 |}z|]);

// === Definitions ===
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     z: 'value'
// }
// <|const { [|{| contextId: 0, defId: 0 |}z|] } = x;|>
// log(/*FIND ALL REFS*/z);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const z: string",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "z",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   }
  ]
 }
]

// === findRenameLocations ===
// === RenameOptions ===
// providePrefixAndSuffixTextForRename: true
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     /*RENAME*/<|[|{| contextId: 0 |}zRENAME|]: 'value'|>
// }
// <|const { [|{| contextId: 1 |}zRENAME|]: z/*END SUFFIX*/ } = x;|>
// log(z);



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: true
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     z: 'value'
// }
// <|const { /*START PREFIX*/z: /*RENAME*/[|{| contextId: 0 |}zRENAME|] } = x;|>
// log([|zRENAME|]);



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: true
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     z: 'value'
// }
// <|const { /*START PREFIX*/z: [|{| contextId: 0 |}zRENAME|] } = x;|>
// log(/*RENAME*/[|zRENAME|]);



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: true
// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const /*RENAME*/[|{| contextId: 0 |}qRENAME|] = 1;|>
// <|export { [|{| contextId: 1 |}qRENAME|] as q/*END SUFFIX*/ };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: true
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// <|export { /*START PREFIX*/q as /*RENAME*/[|{| contextId: 0 |}qRENAME|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 1 |}qRENAME|] } from "./file1";|>
// log([|qRENAME|] + 1);



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: true
// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { /*START PREFIX*/q as /*RENAME*/[|{| contextId: 0 |}qRENAME|] } from "./file1";|>
// log([|qRENAME|] + 1);



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: true
// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { /*START PREFIX*/q as [|{| contextId: 0 |}qRENAME|] } from "./file1";|>
// log(/*RENAME*/[|qRENAME|] + 1);



// === findRenameLocations ===
// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     /*RENAME*/<|[|{| contextId: 0 |}zRENAME|]: 'value'|>
// }
// <|const { [|{| contextId: 1 |}zRENAME|] } = x;|>
// log([|zRENAME|]);



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     <|[|{| contextId: 0 |}zRENAME|]: 'value'|>
// }
// <|const { /*RENAME*/[|{| contextId: 1 |}zRENAME|] } = x;|>
// log([|zRENAME|]);



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /file1.ts ===
// declare function log(s: string | number): void;
// const q = 1;
// export { q };
// const x = {
//     <|[|{| contextId: 0 |}zRENAME|]: 'value'|>
// }
// <|const { [|{| contextId: 1 |}zRENAME|] } = x;|>
// log(/*RENAME*/[|zRENAME|]);



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const /*RENAME*/[|{| contextId: 0 |}qRENAME|] = 1;|>
// <|export { [|{| contextId: 1 |}qRENAME|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 2 |}qRENAME|] } from "./file1";|>
// log([|qRENAME|] + 1);



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 0 |}qRENAME|] = 1;|>
// <|export { /*RENAME*/[|{| contextId: 1 |}qRENAME|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 2 |}qRENAME|] } from "./file1";|>
// log([|qRENAME|] + 1);



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { /*RENAME*/[|{| contextId: 0 |}qRENAME|] } from "./file1";|>
// log([|qRENAME|] + 1);

// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 1 |}qRENAME|] = 1;|>
// <|export { [|{| contextId: 2 |}qRENAME|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /file2.ts ===
// declare function log(s: string | number): void;
// <|import { [|{| contextId: 0 |}qRENAME|] } from "./file1";|>
// log(/*RENAME*/[|qRENAME|] + 1);

// === /file1.ts ===
// declare function log(s: string | number): void;
// <|const [|{| contextId: 1 |}qRENAME|] = 1;|>
// <|export { [|{| contextId: 2 |}qRENAME|] };|>
// const x = {
//     z: 'value'
// }
// const { z } = x;
// log(z);

