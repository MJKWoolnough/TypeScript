// === findAllReferences ===
// === /tests/cases/fourslash/foo.ts ===
// <|export function /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}bar|]() { return "bar"; }|>
// import('./foo').then((<|{ [|{| contextId: 1, defId: 0, isWriteAccess: true |}bar|] }|>) => undefined);

// === Definitions ===
// === /tests/cases/fourslash/foo.ts ===
// <|export function /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}bar|]() { return "bar"; }|>
// import('./foo').then(({ bar }) => undefined);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "function bar(): string",
  "displayParts": [
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "bar",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/foo.ts ===
// <|export function [|{| contextId: 0, defId: 0, isWriteAccess: true |}bar|]() { return "bar"; }|>
// import('./foo').then((<|{ /*FIND ALL REFS*/[|{| contextId: 1, defId: 1, isWriteAccess: true, isDefinition: true |}bar|] }|>) => undefined);

// === Definitions ===
// === /tests/cases/fourslash/foo.ts ===
// <|export function [|{| contextId: 0, defId: 0 |}bar|]() { return "bar"; }|>
// import('./foo').then((<|{ /*FIND ALL REFS*/[|{| contextId: 1, defId: 1 |}bar|] }|>) => undefined);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "function bar(): string",
  "displayParts": [
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "bar",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "parameter",
  "name": "(parameter) bar: () => string",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "parameter",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "bar",
    "kind": "parameterName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=>",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   }
  ]
 }
]

// === findRenameLocations ===
// === /tests/cases/fourslash/foo.ts ===
// <|export function /*RENAME*/[|{| contextId: 0 |}barRENAME|]() { return "bar"; }|>
// import('./foo').then((<|{ [|{| contextId: 1 |}barRENAME|]: bar/*END SUFFIX*/ }|>) => undefined);



// === /tests/cases/fourslash/foo.ts ===
// export function bar() { return "bar"; }
// import('./foo').then((<|{ /*START PREFIX*/bar: /*RENAME*/[|{| contextId: 0 |}barRENAME|] }|>) => undefined);

