// === /tests/cases/fourslash/goToDefinitionConstructorOverloads.ts ===
// class ConstructorOverload {
//     [|{| kind: "constructor", name: "__constructor", containerName: "ConstructorOverload" |}constructor();|]
//     constructor(foo: string);
//     constructor(foo: any)  { }
// }
// 
// var constructorOverload = new /*GOTO DEF*/ConstructorOverload();
// var constructorOverload = new ConstructorOverload("foo");

// === TextSpan ===
// === /tests/cases/fourslash/goToDefinitionConstructorOverloads.ts ===
// class ConstructorOverload {
//     constructor();
//     constructor(foo: string);
//     constructor(foo: any)  { }
// }
// 
// var constructorOverload = new /*GOTO DEF*/[|ConstructorOverload|]();
// var constructorOverload = new ConstructorOverload("foo");



// === /tests/cases/fourslash/goToDefinitionConstructorOverloads.ts ===
// class ConstructorOverload {
//     constructor();
//     [|{| kind: "constructor", name: "__constructor", containerName: "ConstructorOverload" |}constructor(foo: string);|]
//     constructor(foo: any)  { }
// }
// 
// var constructorOverload = new ConstructorOverload();
// var constructorOverload = new /*GOTO DEF*/ConstructorOverload("foo");

// === TextSpan ===
// === /tests/cases/fourslash/goToDefinitionConstructorOverloads.ts ===
// class ConstructorOverload {
//     constructor();
//     constructor(foo: string);
//     constructor(foo: any)  { }
// }
// 
// var constructorOverload = new ConstructorOverload();
// var constructorOverload = new /*GOTO DEF*/[|ConstructorOverload|]("foo");



// === /tests/cases/fourslash/goToDefinitionConstructorOverloads.ts ===
// class ConstructorOverload {
//     /*GOTO DEF*/constructor();
//     constructor(foo: string);
//     [|{| kind: "class", name: "ConstructorOverload" |}constructor(foo: any)  { }|]
// }
// 
// var constructorOverload = new ConstructorOverload();
// var constructorOverload = new ConstructorOverload("foo");

// === TextSpan ===
// === /tests/cases/fourslash/goToDefinitionConstructorOverloads.ts ===
// class ConstructorOverload {
//     /*GOTO DEF*/[|constructor|]();
//     constructor(foo: string);
//     constructor(foo: any)  { }
// }
// 
// var constructorOverload = new ConstructorOverload();
// var constructorOverload = new ConstructorOverload("foo");

