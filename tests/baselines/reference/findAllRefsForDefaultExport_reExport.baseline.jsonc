// === /export.ts ===
// <|const /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}foo|] = 1;|>
// <|export default [|{| contextId: 1, defId: 0 |}foo|];|>

// === /re-export.ts ===
// <|export { [|{| contextId: 2, defId: 1, isWriteAccess: true |}default|] } from "./export";|>

// === /re-export-dep.ts ===
// <|import [|{| contextId: 3, defId: 2, isWriteAccess: true |}fooDefault|] from "./re-export";|>

// === Definitions ===
// === /export.ts ===
// <|const /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}foo|] = 1;|>
// export default foo;

// === /re-export.ts ===
// <|export { [|{| contextId: 1, defId: 1 |}default|] } from "./export";|>

// === /re-export-dep.ts ===
// <|import [|{| contextId: 2, defId: 2 |}fooDefault|] from "./re-export";|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const foo: 1",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const foo: 1\nexport default",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "export",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "default",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const fooDefault: 1\nimport fooDefault",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "fooDefault",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "fooDefault",
    "kind": "aliasName"
   }
  ]
 }
]

// === /export.ts ===
// <|const [|{| contextId: 0, defId: 0, isWriteAccess: true |}foo|] = 1;|>
// <|export default /*FIND ALL REFS*/[|{| contextId: 1, defId: 0 |}foo|];|>

// === /re-export.ts ===
// <|export { [|{| contextId: 2, defId: 1, isWriteAccess: true |}default|] } from "./export";|>

// === /re-export-dep.ts ===
// <|import [|{| contextId: 3, defId: 2, isWriteAccess: true |}fooDefault|] from "./re-export";|>

// === Definitions ===
// === /export.ts ===
// <|const [|{| contextId: 0, defId: 0 |}foo|] = 1;|>
// export default /*FIND ALL REFS*/foo;

// === /re-export.ts ===
// <|export { [|{| contextId: 1, defId: 1 |}default|] } from "./export";|>

// === /re-export-dep.ts ===
// <|import [|{| contextId: 2, defId: 2 |}fooDefault|] from "./re-export";|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const foo: 1",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const foo: 1\nexport default",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "export",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "default",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const fooDefault: 1\nimport fooDefault",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "fooDefault",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "fooDefault",
    "kind": "aliasName"
   }
  ]
 }
]

// === /re-export.ts ===
// <|export { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}default|] } from "./export";|>

// === /re-export-dep.ts ===
// <|import [|{| contextId: 1, defId: 1, isWriteAccess: true |}fooDefault|] from "./re-export";|>

// === /export.ts ===
// <|const [|{| contextId: 2, defId: 2, isWriteAccess: true |}foo|] = 1;|>
// <|export default [|{| contextId: 3, defId: 2 |}foo|];|>

// === Definitions ===
// === /re-export.ts ===
// <|export { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}default|] } from "./export";|>

// === /re-export-dep.ts ===
// <|import [|{| contextId: 1, defId: 1 |}fooDefault|] from "./re-export";|>

// === /export.ts ===
// <|const [|{| contextId: 2, defId: 2 |}foo|] = 1;|>
// export default foo;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const foo: 1\nexport default",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "export",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "default",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const fooDefault: 1\nimport fooDefault",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "fooDefault",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "fooDefault",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const foo: 1",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   }
  ]
 }
]

// === /re-export-dep.ts ===
// <|import /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}fooDefault|] from "./re-export";|>

// === /re-export.ts ===
// <|export { [|{| contextId: 1, defId: 1, isWriteAccess: true |}default|] } from "./export";|>

// === /export.ts ===
// <|const [|{| contextId: 2, defId: 2, isWriteAccess: true |}foo|] = 1;|>
// <|export default [|{| contextId: 3, defId: 2 |}foo|];|>

// === Definitions ===
// === /re-export-dep.ts ===
// <|import /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}fooDefault|] from "./re-export";|>

// === /re-export.ts ===
// <|export { [|{| contextId: 1, defId: 1 |}default|] } from "./export";|>

// === /export.ts ===
// <|const [|{| contextId: 2, defId: 2 |}foo|] = 1;|>
// export default foo;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const fooDefault: 1\nimport fooDefault",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "fooDefault",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "fooDefault",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const foo: 1\nexport default",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "export",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "default",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const foo: 1",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   }
  ]
 }
]