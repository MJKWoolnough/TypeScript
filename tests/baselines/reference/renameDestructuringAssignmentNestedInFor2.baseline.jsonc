// === /tests/cases/fourslash/renameDestructuringAssignmentNestedInFor2.ts ===
// interface MultiRobot {
//     name: string;
//     skills: {
//         /*RENAME*/<|[|{| contextId: 0 |}primaryRENAME|]: string;|>
//         secondary: string;
//     };
// }
// let multiRobot: MultiRobot, primary: string, secondary: string, primaryA: string, secondaryA: string, i: number;
// for (<|{ skills: { [|{| contextId: 1 |}primaryRENAME|]: primaryA, secondary: secondaryA } } = multiRobot|>, i = 0; i < 1; i++) {
//     primaryA;
// }
// for (<|{ skills: { [|{| contextId: 2 |}primaryRENAME|]: primary/*END SUFFIX*/, secondary } } = multiRobot|>, i = 0; i < 1; i++) {
//     primary;
// }



// === /tests/cases/fourslash/renameDestructuringAssignmentNestedInFor2.ts ===
// interface MultiRobot {
//     name: string;
//     skills: {
//         <|[|{| contextId: 0 |}primaryRENAME|]: string;|>
//         secondary: string;
//     };
// }
// let multiRobot: MultiRobot, primary: string, secondary: string, primaryA: string, secondaryA: string, i: number;
// for (<|{ skills: { /*RENAME*/[|{| contextId: 1 |}primaryRENAME|]: primaryA, secondary: secondaryA } } = multiRobot|>, i = 0; i < 1; i++) {
//     primaryA;
// }
// for (<|{ skills: { [|{| contextId: 2 |}primaryRENAME|]: primary/*END SUFFIX*/, secondary } } = multiRobot|>, i = 0; i < 1; i++) {
//     primary;
// }



// === /tests/cases/fourslash/renameDestructuringAssignmentNestedInFor2.ts ===
// interface MultiRobot {
//     name: string;
//     skills: {
//         primary: string;
//         secondary: string;
//     };
// }
// let multiRobot: MultiRobot, /*RENAME*/<|[|{| contextId: 0 |}primaryRENAME|]: string|>, secondary: string, primaryA: string, secondaryA: string, i: number;
// for ({ skills: { primary: primaryA, secondary: secondaryA } } = multiRobot, i = 0; i < 1; i++) {
//     primaryA;
// }
// for (<|{ skills: { /*START PREFIX*/primary: [|{| contextId: 1 |}primaryRENAME|], secondary } } = multiRobot|>, i = 0; i < 1; i++) {
//     [|primaryRENAME|];
// }



// === /tests/cases/fourslash/renameDestructuringAssignmentNestedInFor2.ts ===
// interface MultiRobot {
//     name: string;
//     skills: {
//         primary: string;
//         secondary: string;
//     };
// }
// let multiRobot: MultiRobot, <|[|{| contextId: 0 |}primaryRENAME|]: string|>, secondary: string, primaryA: string, secondaryA: string, i: number;
// for ({ skills: { primary: primaryA, secondary: secondaryA } } = multiRobot, i = 0; i < 1; i++) {
//     primaryA;
// }
// for (<|{ skills: { /*START PREFIX*/primary: /*RENAME*/[|{| contextId: 1 |}primaryRENAME|], secondary } } = multiRobot|>, i = 0; i < 1; i++) {
//     [|primaryRENAME|];
// }



// === /tests/cases/fourslash/renameDestructuringAssignmentNestedInFor2.ts ===
// interface MultiRobot {
//     name: string;
//     skills: {
//         primary: string;
//         secondary: string;
//     };
// }
// let multiRobot: MultiRobot, <|[|{| contextId: 0 |}primaryRENAME|]: string|>, secondary: string, primaryA: string, secondaryA: string, i: number;
// for ({ skills: { primary: primaryA, secondary: secondaryA } } = multiRobot, i = 0; i < 1; i++) {
//     primaryA;
// }
// for (<|{ skills: { /*START PREFIX*/primary: [|{| contextId: 1 |}primaryRENAME|], secondary } } = multiRobot|>, i = 0; i < 1; i++) {
//     /*RENAME*/[|primaryRENAME|];
// }

