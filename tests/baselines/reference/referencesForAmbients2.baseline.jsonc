// === /defA.ts ===
// declare module "a" {
//     /*FIND ALL REFS*/<|export type [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}T|] = number;|>
// }

// === /defB.ts ===
// declare module "b" {
//     export import a = require("a");
//     export const x: a.[|{| defId: 0 |}T|];
// }

// === /defC.ts ===
// declare module "c" {
//     import b = require("b");
//     const x: b.a.[|{| defId: 0 |}T|];
// }

// === Definitions ===
// === /defA.ts ===
// declare module "a" {
//     /*FIND ALL REFS*/<|export type [|{| contextId: 0, defId: 0 |}T|] = number;|>
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type T = number",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "T",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /defA.ts ===
// declare module "a" {
//     <|export type /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}T|] = number;|>
// }

// === /defB.ts ===
// declare module "b" {
//     export import a = require("a");
//     export const x: a.[|{| defId: 0 |}T|];
// }

// === /defC.ts ===
// declare module "c" {
//     import b = require("b");
//     const x: b.a.[|{| defId: 0 |}T|];
// }

// === Definitions ===
// === /defA.ts ===
// declare module "a" {
//     <|export type /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}T|] = number;|>
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type T = number",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "T",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /defA.ts ===
// declare module "a" {
//     <|export type [|{| contextId: 0, defId: 0, isWriteAccess: true |}T|] = number;|>
// }

// === /defB.ts ===
// declare module "b" {
//     export import a = require("a");
//     export const x: a./*FIND ALL REFS*/[|{| defId: 0 |}T|];
// }

// === /defC.ts ===
// declare module "c" {
//     import b = require("b");
//     const x: b.a.[|{| defId: 0 |}T|];
// }

// === Definitions ===
// === /defA.ts ===
// declare module "a" {
//     <|export type [|{| contextId: 0, defId: 0 |}T|] = number;|>
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type T = number",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "T",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /defA.ts ===
// declare module "a" {
//     <|export type [|{| contextId: 0, defId: 0, isWriteAccess: true |}T|] = number;|>
// }

// === /defB.ts ===
// declare module "b" {
//     export import a = require("a");
//     export const x: a.[|{| defId: 0 |}T|];
// }

// === /defC.ts ===
// declare module "c" {
//     import b = require("b");
//     const x: b.a./*FIND ALL REFS*/[|{| defId: 0 |}T|];
// }

// === Definitions ===
// === /defA.ts ===
// declare module "a" {
//     <|export type [|{| contextId: 0, defId: 0 |}T|] = number;|>
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type T = number",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "T",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]