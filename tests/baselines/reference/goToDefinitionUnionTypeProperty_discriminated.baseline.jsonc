// === /tests/cases/fourslash/goToDefinitionUnionTypeProperty_discriminated.ts ===
// type U = A | B;
// 
// interface A {
//   <|[|{| contextId: 0, kind: "property", name: "kind", containerName: "A" |}kind|]: "a";|>
//   prop: number;
// };
// 
// interface B {
//   kind: "b";
//   prop: string;
// }
// 
// const u: U = {
//   /*GOTO DEF*/kind: "a",
//   prop: 0,
// };
// const u2: U = {
//   kind: "bogus",
//   prop: 0,
// };

// === TextSpan ===
// === /tests/cases/fourslash/goToDefinitionUnionTypeProperty_discriminated.ts ===
// type U = A | B;
// 
// interface A {
//   kind: "a";
//   prop: number;
// };
// 
// interface B {
//   kind: "b";
//   prop: string;
// }
// 
// const u: U = {
//   /*GOTO DEF*/[|kind|]: "a",
//   prop: 0,
// };
// const u2: U = {
//   kind: "bogus",
//   prop: 0,
// };



// === /tests/cases/fourslash/goToDefinitionUnionTypeProperty_discriminated.ts ===
// type U = A | B;
// 
// interface A {
//   kind: "a";
//   <|[|{| contextId: 0, kind: "property", name: "prop", containerName: "A" |}prop|]: number;|>
// };
// 
// interface B {
//   kind: "b";
//   prop: string;
// }
// 
// const u: U = {
//   kind: "a",
//   /*GOTO DEF*/prop: 0,
// };
// const u2: U = {
//   kind: "bogus",
//   prop: 0,
// };

// === TextSpan ===
// === /tests/cases/fourslash/goToDefinitionUnionTypeProperty_discriminated.ts ===
// type U = A | B;
// 
// interface A {
//   kind: "a";
//   prop: number;
// };
// 
// interface B {
//   kind: "b";
//   prop: string;
// }
// 
// const u: U = {
//   kind: "a",
//   /*GOTO DEF*/[|prop|]: 0,
// };
// const u2: U = {
//   kind: "bogus",
//   prop: 0,
// };



// === /tests/cases/fourslash/goToDefinitionUnionTypeProperty_discriminated.ts ===
// type U = A | B;
// 
// interface A {
//   <|[|{| contextId: 0, kind: "property", name: "kind", containerName: "A" |}kind|]: "a";|>
//   prop: number;
// };
// 
// interface B {
//   <|[|{| contextId: 1, kind: "property", name: "kind", containerName: "B" |}kind|]: "b";|>
//   prop: string;
// }
// 
// const u: U = {
//   kind: "a",
//   prop: 0,
// };
// const u2: U = {
//   /*GOTO DEF*/kind: "bogus",
//   prop: 0,
// };

// === TextSpan ===
// === /tests/cases/fourslash/goToDefinitionUnionTypeProperty_discriminated.ts ===
// type U = A | B;
// 
// interface A {
//   kind: "a";
//   prop: number;
// };
// 
// interface B {
//   kind: "b";
//   prop: string;
// }
// 
// const u: U = {
//   kind: "a",
//   prop: 0,
// };
// const u2: U = {
//   /*GOTO DEF*/[|kind|]: "bogus",
//   prop: 0,
// };



// === /tests/cases/fourslash/goToDefinitionUnionTypeProperty_discriminated.ts ===
// type U = A | B;
// 
// interface A {
//   kind: "a";
//   <|[|{| contextId: 0, kind: "property", name: "prop", containerName: "A" |}prop|]: number;|>
// };
// 
// interface B {
//   kind: "b";
//   <|[|{| contextId: 1, kind: "property", name: "prop", containerName: "B" |}prop|]: string;|>
// }
// 
// const u: U = {
//   kind: "a",
//   prop: 0,
// };
// const u2: U = {
//   kind: "bogus",
//   /*GOTO DEF*/prop: 0,
// };

// === TextSpan ===
// === /tests/cases/fourslash/goToDefinitionUnionTypeProperty_discriminated.ts ===
// type U = A | B;
// 
// interface A {
//   kind: "a";
//   prop: number;
// };
// 
// interface B {
//   kind: "b";
//   prop: string;
// }
// 
// const u: U = {
//   kind: "a",
//   prop: 0,
// };
// const u2: U = {
//   kind: "bogus",
//   /*GOTO DEF*/[|prop|]: 0,
// };

