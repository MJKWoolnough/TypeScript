// === findAllReferences ===
// === /a.ts ===
// <|type /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}T|] = number;|>
// namespace T {
//     export type U = string;
// }
// <|export = [|{| contextId: 1, defId: 0 |}T|];|>

// === /b.ts ===
// <|const x: import("[|{| contextId: 2, defId: 0 |}./a|]") = 0;|>
// const y: import("./a").U = "";

// === Definitions ===
// === /a.ts ===
// <|type /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, kind: "type", name: "type T = number\nnamespace T", displayParts: [{"text":"type","kind":"keyword"},{"text":" ","kind":"space"},{"text":"T","kind":"moduleName"},{"text":" ","kind":"space"},{"text":"=","kind":"operator"},{"text":" ","kind":"space"},{"text":"number","kind":"keyword"},{"text":"\n","kind":"lineBreak"},{"text":"namespace","kind":"keyword"},{"text":" ","kind":"space"},{"text":"T","kind":"moduleName"}] |}T|] = number;|>
// namespace T {
//     export type U = string;
// }
// export = T;

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.ts",
      "kind": "type",
      "name": "type T = number\nnamespace T",
      "textSpan": {
        "start": 5,
        "length": 1
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "moduleName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "namespace",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "moduleName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 16
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 5,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 0,
          "length": 16
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 70,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 61,
          "length": 11
        },
        "isWriteAccess": false,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 17,
          "length": 3
        },
        "fileName": "/b.ts",
        "contextSpan": {
          "start": 0,
          "length": 27
        },
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /a.ts ===
// type T = number;
// <|namespace /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}T|] {
//     export type U = string;
// }|>
// <|export = [|{| contextId: 1, defId: 0 |}T|];|>

// === Definitions ===
// === /a.ts ===
// <|type [|{| contextId: 0, defId: 0, kind: "type", name: "namespace T", displayParts: [{"text":"namespace","kind":"keyword"},{"text":" ","kind":"space"},{"text":"T","kind":"moduleName"}] |}T|] = number;|>
// namespace /*FIND ALL REFS*/T {
//     export type U = string;
// }
// export = T;

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.ts",
      "kind": "type",
      "name": "namespace T",
      "textSpan": {
        "start": 5,
        "length": 1
      },
      "displayParts": [
        {
          "text": "namespace",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "moduleName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 16
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 27,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 17,
          "length": 43
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 70,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 61,
          "length": 11
        },
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /a.ts ===
// <|type [|{| contextId: 0, defId: 0, isWriteAccess: true |}T|] = number;|>
// <|namespace [|{| contextId: 1, defId: 0, isWriteAccess: true |}T|] {
//     export type U = string;
// }|>
// <|export = /*FIND ALL REFS*/[|{| contextId: 2, defId: 0 |}T|];|>

// === /b.ts ===
// <|const x: import("[|{| contextId: 3, defId: 0 |}./a|]") = 0;|>
// const y: import("./a").U = "";

// === Definitions ===
// === /a.ts ===
// <|type [|{| contextId: 0, defId: 0, kind: "type", name: "type T = number\nnamespace T", displayParts: [{"text":"type","kind":"keyword"},{"text":" ","kind":"space"},{"text":"T","kind":"moduleName"},{"text":" ","kind":"space"},{"text":"=","kind":"operator"},{"text":" ","kind":"space"},{"text":"number","kind":"keyword"},{"text":"\n","kind":"lineBreak"},{"text":"namespace","kind":"keyword"},{"text":" ","kind":"space"},{"text":"T","kind":"moduleName"}] |}T|] = number;|>
// namespace T {
//     export type U = string;
// }
// export = /*FIND ALL REFS*/T;

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.ts",
      "kind": "type",
      "name": "type T = number\nnamespace T",
      "textSpan": {
        "start": 5,
        "length": 1
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "moduleName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "namespace",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "moduleName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 16
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 5,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 0,
          "length": 16
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 27,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 17,
          "length": 43
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 70,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 61,
          "length": 11
        },
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 17,
          "length": 3
        },
        "fileName": "/b.ts",
        "contextSpan": {
          "start": 0,
          "length": 27
        },
        "isWriteAccess": false
      }
    ]
  }
]

// === /b.ts ===
// <|const x: import("/*FIND ALL REFS*/[|{| contextId: 0, defId: 1 |}./a|]") = 0;|>
// <|const y: import("[|{| contextId: 1, defId: 0 |}./a|]").U = "";|>

// === /a.ts ===
// <|type [|{| contextId: 2, defId: 1, isWriteAccess: true |}T|] = number;|>
// <|namespace [|{| contextId: 3, defId: 1, isWriteAccess: true |}T|] {
//     export type U = string;
// }|>
// <|[|{| contextId: 4, defId: 0 |}<|export|] = [|{| contextId: 5, defId: 1 |}T|];|>|>

// === Definitions ===
// === /a.ts ===
// [|{| defId: 0, kind: "module", name: "module \"/a\"", displayParts: [{"text":"module","kind":"keyword"},{"text":" ","kind":"space"},{"text":"\"/a\"","kind":"stringLiteral"}] |}<|type [|{| contextId: 0, defId: 1, kind: "type", name: "type T = number\nnamespace T", displayParts: [{"text":"type","kind":"keyword"},{"text":" ","kind":"space"},{"text":"T","kind":"moduleName"},{"text":" ","kind":"space"},{"text":"=","kind":"operator"},{"text":" ","kind":"space"},{"text":"number","kind":"keyword"},{"text":"\n","kind":"lineBreak"},{"text":"namespace","kind":"keyword"},{"text":" ","kind":"space"},{"text":"T","kind":"moduleName"}] |}T|] = number;|>
// namespace T {
//     export type U = string;
// }
// export = T;|]

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.ts",
      "kind": "module",
      "name": "module \"/a\"",
      "textSpan": {
        "start": 0,
        "length": 72
      },
      "displayParts": [
        {
          "text": "module",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "\"/a\"",
          "kind": "stringLiteral"
        }
      ]
    },
    "references": [
      {
        "textSpan": {
          "start": 45,
          "length": 3
        },
        "fileName": "/b.ts",
        "contextSpan": {
          "start": 28,
          "length": 30
        },
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 61,
          "length": 6
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 61,
          "length": 11
        },
        "isWriteAccess": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.ts",
      "kind": "type",
      "name": "type T = number\nnamespace T",
      "textSpan": {
        "start": 5,
        "length": 1
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "moduleName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "namespace",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "moduleName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 16
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 5,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 0,
          "length": 16
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 27,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 17,
          "length": 43
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 70,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 61,
          "length": 11
        },
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 17,
          "length": 3
        },
        "fileName": "/b.ts",
        "contextSpan": {
          "start": 0,
          "length": 27
        },
        "isWriteAccess": false
      }
    ]
  }
]

// === /b.ts ===
// <|const x: import("[|{| contextId: 0, defId: 1 |}./a|]") = 0;|>
// <|const y: import("/*FIND ALL REFS*/[|{| contextId: 1, defId: 0 |}./a|]").U = "";|>

// === /a.ts ===
// <|type [|{| contextId: 2, defId: 1, isWriteAccess: true |}T|] = number;|>
// <|namespace [|{| contextId: 3, defId: 1, isWriteAccess: true |}T|] {
//     export type U = string;
// }|>
// <|[|{| contextId: 4, defId: 0 |}<|export|] = [|{| contextId: 5, defId: 1 |}T|];|>|>

// === Definitions ===
// === /a.ts ===
// [|{| defId: 0, kind: "module", name: "module \"/a\"", displayParts: [{"text":"module","kind":"keyword"},{"text":" ","kind":"space"},{"text":"\"/a\"","kind":"stringLiteral"}] |}<|type [|{| contextId: 0, defId: 1, kind: "type", name: "type T = number\nnamespace T", displayParts: [{"text":"type","kind":"keyword"},{"text":" ","kind":"space"},{"text":"T","kind":"moduleName"},{"text":" ","kind":"space"},{"text":"=","kind":"operator"},{"text":" ","kind":"space"},{"text":"number","kind":"keyword"},{"text":"\n","kind":"lineBreak"},{"text":"namespace","kind":"keyword"},{"text":" ","kind":"space"},{"text":"T","kind":"moduleName"}] |}T|] = number;|>
// namespace T {
//     export type U = string;
// }
// export = T;|]

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.ts",
      "kind": "module",
      "name": "module \"/a\"",
      "textSpan": {
        "start": 0,
        "length": 72
      },
      "displayParts": [
        {
          "text": "module",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "\"/a\"",
          "kind": "stringLiteral"
        }
      ]
    },
    "references": [
      {
        "textSpan": {
          "start": 45,
          "length": 3
        },
        "fileName": "/b.ts",
        "contextSpan": {
          "start": 28,
          "length": 30
        },
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 61,
          "length": 6
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 61,
          "length": 11
        },
        "isWriteAccess": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.ts",
      "kind": "type",
      "name": "type T = number\nnamespace T",
      "textSpan": {
        "start": 5,
        "length": 1
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "moduleName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "namespace",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "moduleName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 16
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 5,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 0,
          "length": 16
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 27,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 17,
          "length": 43
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 70,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 61,
          "length": 11
        },
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 17,
          "length": 3
        },
        "fileName": "/b.ts",
        "contextSpan": {
          "start": 0,
          "length": 27
        },
        "isWriteAccess": false
      }
    ]
  }
]

// === /a.ts ===
// <|type [|{| contextId: 0, defId: 0, isWriteAccess: true |}T|] = number;|>
// <|namespace [|{| contextId: 1, defId: 0, isWriteAccess: true |}T|] {
//     export type U = string;
// }|>
// /*FIND ALL REFS*/<|export = [|{| contextId: 2, defId: 0 |}T|];|>

// === /b.ts ===
// <|const x: import("[|{| contextId: 3, defId: 0 |}./a|]") = 0;|>
// const y: import("./a").U = "";

// === Definitions ===
// === /a.ts ===
// <|type [|{| contextId: 0, defId: 0, kind: "type", name: "type T = number\nnamespace T", displayParts: [{"text":"type","kind":"keyword"},{"text":" ","kind":"space"},{"text":"T","kind":"moduleName"},{"text":" ","kind":"space"},{"text":"=","kind":"operator"},{"text":" ","kind":"space"},{"text":"number","kind":"keyword"},{"text":"\n","kind":"lineBreak"},{"text":"namespace","kind":"keyword"},{"text":" ","kind":"space"},{"text":"T","kind":"moduleName"}] |}T|] = number;|>
// namespace T {
//     export type U = string;
// }
// /*FIND ALL REFS*/export = T;

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.ts",
      "kind": "type",
      "name": "type T = number\nnamespace T",
      "textSpan": {
        "start": 5,
        "length": 1
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "moduleName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "namespace",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "moduleName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 16
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 5,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 0,
          "length": 16
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 27,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 17,
          "length": 43
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 70,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 61,
          "length": 11
        },
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 17,
          "length": 3
        },
        "fileName": "/b.ts",
        "contextSpan": {
          "start": 0,
          "length": 27
        },
        "isWriteAccess": false
      }
    ]
  }
]

// === findRenameLocations ===
// === /a.ts ===
// <|type /*RENAME*/[|{| contextId: 0 |}TRENAME|] = number;|>
// namespace T {
//     export type U = string;
// }
// <|export = [|{| contextId: 1 |}TRENAME|];|>

[
  {
    "textSpan": {
      "start": 5,
      "length": 1
    },
    "fileName": "/a.ts",
    "contextSpan": {
      "start": 0,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 70,
      "length": 1
    },
    "fileName": "/a.ts",
    "contextSpan": {
      "start": 61,
      "length": 11
    }
  }
]

// === /a.ts ===
// type T = number;
// <|namespace /*RENAME*/[|{| contextId: 0 |}TRENAME|] {
//     export type U = string;
// }|>
// <|export = [|{| contextId: 1 |}TRENAME|];|>

[
  {
    "textSpan": {
      "start": 27,
      "length": 1
    },
    "fileName": "/a.ts",
    "contextSpan": {
      "start": 17,
      "length": 43
    }
  },
  {
    "textSpan": {
      "start": 70,
      "length": 1
    },
    "fileName": "/a.ts",
    "contextSpan": {
      "start": 61,
      "length": 11
    }
  }
]

// === /a.ts ===
// <|type [|{| contextId: 0 |}TRENAME|] = number;|>
// <|namespace [|{| contextId: 1 |}TRENAME|] {
//     export type U = string;
// }|>
// <|export = /*RENAME*/[|{| contextId: 2 |}TRENAME|];|>

[
  {
    "textSpan": {
      "start": 5,
      "length": 1
    },
    "fileName": "/a.ts",
    "contextSpan": {
      "start": 0,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 27,
      "length": 1
    },
    "fileName": "/a.ts",
    "contextSpan": {
      "start": 17,
      "length": 43
    }
  },
  {
    "textSpan": {
      "start": 70,
      "length": 1
    },
    "fileName": "/a.ts",
    "contextSpan": {
      "start": 61,
      "length": 11
    }
  }
]