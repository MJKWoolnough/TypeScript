// === /tests/cases/fourslash/findAllRefsForStaticInstanceMethodInheritance.ts ===
// class X{
// 	/*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}foo|](): void{}|>
// }
// 
// class Y extends X{
// 	static foo(): void{}
// }
// 
// class Z extends Y{
// 	static foo(): void{}
// 	<|[|{| contextId: 1, defId: 1, isWriteAccess: true |}foo|](): void{}|>
// }
// 
// const x = new X();
// const y = new Y();
// const z = new Z();
// x.[|{| defId: 0 |}foo|]();
// y.[|{| defId: 0 |}foo|]();
// z.[|{| defId: 1 |}foo|]();
// Y.foo();
// Z.foo();

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsForStaticInstanceMethodInheritance.ts ===
// class X{
// 	/*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}foo|](): void{}|>
// }
// 
// class Y extends X{
// 	static foo(): void{}
// }
// 
// class Z extends Y{
// 	static foo(): void{}
// 	<|[|{| contextId: 1, defId: 1 |}foo|](): void{}|>
// }
// 
// const x = new X();
// const y = new Y();
// const z = new Z();
// x.foo();
// y.foo();
// z.foo();
// Y.foo();
// Z.foo();

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) X.foo(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "X",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "foo",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) Z.foo(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Z",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "foo",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsForStaticInstanceMethodInheritance.ts ===
// class X{
// 	foo(): void{}
// }
// 
// class Y extends X{
// 	<|static /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}foo|](): void{}|>
// }
// 
// class Z extends Y{
// 	static foo(): void{}
// 	foo(): void{}
// }
// 
// const x = new X();
// const y = new Y();
// const z = new Z();
// x.foo();
// y.foo();
// z.foo();
// Y.[|{| defId: 0 |}foo|]();
// Z.foo();

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsForStaticInstanceMethodInheritance.ts ===
// class X{
// 	foo(): void{}
// }
// 
// class Y extends X{
// 	<|static /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}foo|](): void{}|>
// }
// 
// class Z extends Y{
// 	static foo(): void{}
// 	foo(): void{}
// }
// 
// const x = new X();
// const y = new Y();
// const z = new Z();
// x.foo();
// y.foo();
// z.foo();
// Y.foo();
// Z.foo();

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) Y.foo(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Y",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "foo",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsForStaticInstanceMethodInheritance.ts ===
// class X{
// 	foo(): void{}
// }
// 
// class Y extends X{
// 	static foo(): void{}
// }
// 
// class Z extends Y{
// 	<|static /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}foo|](): void{}|>
// 	foo(): void{}
// }
// 
// const x = new X();
// const y = new Y();
// const z = new Z();
// x.foo();
// y.foo();
// z.foo();
// Y.foo();
// Z.[|{| defId: 0 |}foo|]();

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsForStaticInstanceMethodInheritance.ts ===
// class X{
// 	foo(): void{}
// }
// 
// class Y extends X{
// 	static foo(): void{}
// }
// 
// class Z extends Y{
// 	<|static /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}foo|](): void{}|>
// 	foo(): void{}
// }
// 
// const x = new X();
// const y = new Y();
// const z = new Z();
// x.foo();
// y.foo();
// z.foo();
// Y.foo();
// Z.foo();

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) Z.foo(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Z",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "foo",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsForStaticInstanceMethodInheritance.ts ===
// class X{
// 	<|[|{| contextId: 0, defId: 0, isWriteAccess: true |}foo|](): void{}|>
// }
// 
// class Y extends X{
// 	static foo(): void{}
// }
// 
// class Z extends Y{
// 	static foo(): void{}
// 	/*FIND ALL REFS*/<|[|{| contextId: 1, defId: 1, isWriteAccess: true, isDefinition: true |}foo|](): void{}|>
// }
// 
// const x = new X();
// const y = new Y();
// const z = new Z();
// x.[|{| defId: 0 |}foo|]();
// y.[|{| defId: 0 |}foo|]();
// z.[|{| defId: 1 |}foo|]();
// Y.foo();
// Z.foo();

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsForStaticInstanceMethodInheritance.ts ===
// class X{
// 	<|[|{| contextId: 0, defId: 0 |}foo|](): void{}|>
// }
// 
// class Y extends X{
// 	static foo(): void{}
// }
// 
// class Z extends Y{
// 	static foo(): void{}
// 	/*FIND ALL REFS*/<|[|{| contextId: 1, defId: 1 |}foo|](): void{}|>
// }
// 
// const x = new X();
// const y = new Y();
// const z = new Z();
// x.foo();
// y.foo();
// z.foo();
// Y.foo();
// Z.foo();

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) X.foo(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "X",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "foo",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) Z.foo(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Z",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "foo",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 }
]