// === /a.js ===
// module.exports = 0;
// /*FIND ALL REFS*/<|export type [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}N|] = number;|>

// === /b.js ===
// type T = import("./a").[|{| defId: 0 |}N|];

// === Definitions ===
// === /a.js ===
// module.exports = 0;
// /*FIND ALL REFS*/<|export type [|{| contextId: 0, defId: 0 |}N|] = number;|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type N = number",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /a.js ===
// module.exports = 0;
// <|export type /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}N|] = number;|>

// === /b.js ===
// type T = import("./a").[|{| defId: 0 |}N|];

// === Definitions ===
// === /a.js ===
// module.exports = 0;
// <|export type /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}N|] = number;|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type N = number",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /a.js ===
// module.exports = 0;
// <|export type [|{| contextId: 0, defId: 0, isWriteAccess: true |}N|] = number;|>

// === /b.js ===
// type T = import("./a")./*FIND ALL REFS*/[|{| defId: 0 |}N|];

// === Definitions ===
// === /a.js ===
// module.exports = 0;
// <|export type [|{| contextId: 0, defId: 0 |}N|] = number;|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type N = number",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]