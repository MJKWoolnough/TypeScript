// === /tests/cases/fourslash/referencesForMergedDeclarations2.ts ===
// module ATest {
//     export interface Bar { }
// }
// 
// function ATest() { }
// 
// /*FIND ALL REFS*/<|import [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}alias|] = ATest;|> // definition
// 
// var a: [|{| defId: 0 |}alias|].Bar; // namespace
// [|{| defId: 0 |}alias|].call(this); // value

// === Definitions ===
// === /tests/cases/fourslash/referencesForMergedDeclarations2.ts ===
// module ATest {
//     export interface Bar { }
// }
// 
// function ATest() { }
// 
// /*FIND ALL REFS*/<|import [|{| contextId: 0, defId: 0 |}alias|] = ATest;|> // definition
// 
// var a: alias.Bar; // namespace
// alias.call(this); // value

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function alias(): void\n(alias) namespace alias\nimport alias = ATest",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "alias",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "alias",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "alias",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "ATest",
    "kind": "functionName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForMergedDeclarations2.ts ===
// module ATest {
//     export interface Bar { }
// }
// 
// function ATest() { }
// 
// <|import /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}alias|] = ATest;|> // definition
// 
// var a: [|{| defId: 0 |}alias|].Bar; // namespace
// [|{| defId: 0 |}alias|].call(this); // value

// === Definitions ===
// === /tests/cases/fourslash/referencesForMergedDeclarations2.ts ===
// module ATest {
//     export interface Bar { }
// }
// 
// function ATest() { }
// 
// <|import /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}alias|] = ATest;|> // definition
// 
// var a: alias.Bar; // namespace
// alias.call(this); // value

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function alias(): void\n(alias) namespace alias\nimport alias = ATest",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "alias",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "alias",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "alias",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "ATest",
    "kind": "functionName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForMergedDeclarations2.ts ===
// module ATest {
//     export interface Bar { }
// }
// 
// function ATest() { }
// 
// <|import [|{| contextId: 0, defId: 0, isWriteAccess: true |}alias|] = ATest;|> // definition
// 
// var a: /*FIND ALL REFS*/[|{| defId: 0 |}alias|].Bar; // namespace
// [|{| defId: 0 |}alias|].call(this); // value

// === Definitions ===
// === /tests/cases/fourslash/referencesForMergedDeclarations2.ts ===
// module ATest {
//     export interface Bar { }
// }
// 
// function ATest() { }
// 
// <|import [|{| contextId: 0, defId: 0 |}alias|] = ATest;|> // definition
// 
// var a: /*FIND ALL REFS*/alias.Bar; // namespace
// alias.call(this); // value

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function alias(): void\n(alias) namespace alias\nimport alias = ATest",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "alias",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "alias",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "alias",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "ATest",
    "kind": "functionName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForMergedDeclarations2.ts ===
// module ATest {
//     export interface Bar { }
// }
// 
// function ATest() { }
// 
// <|import [|{| contextId: 0, defId: 0, isWriteAccess: true |}alias|] = ATest;|> // definition
// 
// var a: [|{| defId: 0 |}alias|].Bar; // namespace
// /*FIND ALL REFS*/[|{| defId: 0 |}alias|].call(this); // value

// === Definitions ===
// === /tests/cases/fourslash/referencesForMergedDeclarations2.ts ===
// module ATest {
//     export interface Bar { }
// }
// 
// function ATest() { }
// 
// <|import [|{| contextId: 0, defId: 0 |}alias|] = ATest;|> // definition
// 
// var a: alias.Bar; // namespace
// /*FIND ALL REFS*/alias.call(this); // value

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function alias(): void\n(alias) namespace alias\nimport alias = ATest",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "alias",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "alias",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "alias",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "ATest",
    "kind": "functionName"
   }
  ]
 }
]