// === findAllReferences ===
// === /node_modules/a/index.d.ts ===
// <|declare function /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}a|](): void;|>
// <|declare namespace [|{| contextId: 1, defId: 0, isWriteAccess: true, isDefinition: true |}a|] {
//     export const x: number;
// }|>
// <|export = [|{| contextId: 2, defId: 0 |}a|];|>

// === /b.ts ===
// <|import [|{| contextId: 3, defId: 1, isWriteAccess: true |}b|] from "a";|>
// [|{| defId: 1 |}b|]();
// [|{| defId: 1 |}b|].x;

// === /c.ts ===
// <|import [|{| contextId: 4, defId: 2, isWriteAccess: true |}a|] from "a";|>
// [|{| defId: 2 |}a|]();
// [|{| defId: 2 |}a|].x;

// === Definitions ===
// === /node_modules/a/index.d.ts ===
// <|declare function /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}a|](): void;|>
// declare namespace a {
//     export const x: number;
// }
// export = a;

// === /b.ts ===
// <|import [|{| contextId: 1, defId: 1 |}b|] from "a";|>
// b();
// b.x;

// === /c.ts ===
// <|import [|{| contextId: 2, defId: 2 |}a|] from "a";|>
// a();
// a.x;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "namespace a\nfunction a(): void",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "functionName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function b(): void\n(alias) namespace b\nimport b",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function a(): void\n(alias) namespace a\nimport a",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   }
  ]
 }
]

// === /node_modules/a/index.d.ts ===
// <|declare function [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}a|](): void;|>
// <|declare namespace /*FIND ALL REFS*/[|{| contextId: 1, defId: 0, isWriteAccess: true, isDefinition: true |}a|] {
//     export const x: number;
// }|>
// <|export = [|{| contextId: 2, defId: 0 |}a|];|>

// === /b.ts ===
// <|import [|{| contextId: 3, defId: 1, isWriteAccess: true |}b|] from "a";|>
// [|{| defId: 1 |}b|]();
// [|{| defId: 1 |}b|].x;

// === /c.ts ===
// <|import [|{| contextId: 4, defId: 2, isWriteAccess: true |}a|] from "a";|>
// [|{| defId: 2 |}a|]();
// [|{| defId: 2 |}a|].x;

// === Definitions ===
// === /node_modules/a/index.d.ts ===
// <|declare function [|{| contextId: 0, defId: 0 |}a|](): void;|>
// declare namespace /*FIND ALL REFS*/a {
//     export const x: number;
// }
// export = a;

// === /b.ts ===
// <|import [|{| contextId: 1, defId: 1 |}b|] from "a";|>
// b();
// b.x;

// === /c.ts ===
// <|import [|{| contextId: 2, defId: 2 |}a|] from "a";|>
// a();
// a.x;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "namespace a\nfunction a(): void",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "functionName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function b(): void\n(alias) namespace b\nimport b",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function a(): void\n(alias) namespace a\nimport a",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   }
  ]
 }
]

// === /node_modules/a/index.d.ts ===
// <|declare function [|{| contextId: 0, defId: 0, isWriteAccess: true |}a|](): void;|>
// <|declare namespace [|{| contextId: 1, defId: 0, isWriteAccess: true |}a|] {
//     export const x: number;
// }|>
// <|export = /*FIND ALL REFS*/[|{| contextId: 2, defId: 0 |}a|];|>

// === /b.ts ===
// <|import [|{| contextId: 3, defId: 1, isWriteAccess: true |}b|] from "a";|>
// [|{| defId: 1 |}b|]();
// [|{| defId: 1 |}b|].x;

// === /c.ts ===
// <|import [|{| contextId: 4, defId: 2, isWriteAccess: true |}a|] from "a";|>
// [|{| defId: 2 |}a|]();
// [|{| defId: 2 |}a|].x;

// === Definitions ===
// === /node_modules/a/index.d.ts ===
// <|declare function [|{| contextId: 0, defId: 0 |}a|](): void;|>
// declare namespace a {
//     export const x: number;
// }
// export = /*FIND ALL REFS*/a;

// === /b.ts ===
// <|import [|{| contextId: 1, defId: 1 |}b|] from "a";|>
// b();
// b.x;

// === /c.ts ===
// <|import [|{| contextId: 2, defId: 2 |}a|] from "a";|>
// a();
// a.x;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "namespace a\nfunction a(): void",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "functionName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function b(): void\n(alias) namespace b\nimport b",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function a(): void\n(alias) namespace a\nimport a",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   }
  ]
 }
]

// === /b.ts ===
// <|import /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}b|] from "a";|>
// [|{| defId: 0 |}b|]();
// [|{| defId: 0 |}b|].x;

// === Definitions ===
// === /b.ts ===
// <|import /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}b|] from "a";|>
// b();
// b.x;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function b(): void\n(alias) namespace b\nimport b",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   }
  ]
 }
]

// === /b.ts ===
// <|import [|{| contextId: 0, defId: 0, isWriteAccess: true |}b|] from "a";|>
// /*FIND ALL REFS*/[|{| defId: 0 |}b|]();
// [|{| defId: 0 |}b|].x;

// === Definitions ===
// === /b.ts ===
// <|import [|{| contextId: 0, defId: 0 |}b|] from "a";|>
// /*FIND ALL REFS*/b();
// b.x;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function b(): void\n(alias) namespace b\nimport b",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   }
  ]
 }
]

// === /c.ts ===
// <|import /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}a|] from "a";|>
// [|{| defId: 0 |}a|]();
// [|{| defId: 0 |}a|].x;

// === /node_modules/a/index.d.ts ===
// <|declare function [|{| contextId: 1, defId: 1, isWriteAccess: true |}a|](): void;|>
// <|declare namespace [|{| contextId: 2, defId: 1, isWriteAccess: true |}a|] {
//     export const x: number;
// }|>
// <|export = [|{| contextId: 3, defId: 1 |}a|];|>

// === /b.ts ===
// <|import [|{| contextId: 4, defId: 2, isWriteAccess: true |}b|] from "a";|>
// [|{| defId: 2 |}b|]();
// [|{| defId: 2 |}b|].x;

// === Definitions ===
// === /c.ts ===
// <|import /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}a|] from "a";|>
// a();
// a.x;

// === /node_modules/a/index.d.ts ===
// <|declare function [|{| contextId: 1, defId: 1 |}a|](): void;|>
// declare namespace a {
//     export const x: number;
// }
// export = a;

// === /b.ts ===
// <|import [|{| contextId: 2, defId: 2 |}b|] from "a";|>
// b();
// b.x;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function a(): void\n(alias) namespace a\nimport a",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "namespace a\nfunction a(): void",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "functionName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function b(): void\n(alias) namespace b\nimport b",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   }
  ]
 }
]

// === /c.ts ===
// <|import [|{| contextId: 0, defId: 0, isWriteAccess: true |}a|] from "a";|>
// /*FIND ALL REFS*/[|{| defId: 0 |}a|]();
// [|{| defId: 0 |}a|].x;

// === /node_modules/a/index.d.ts ===
// <|declare function [|{| contextId: 1, defId: 1, isWriteAccess: true |}a|](): void;|>
// <|declare namespace [|{| contextId: 2, defId: 1, isWriteAccess: true |}a|] {
//     export const x: number;
// }|>
// <|export = [|{| contextId: 3, defId: 1 |}a|];|>

// === /b.ts ===
// <|import [|{| contextId: 4, defId: 2, isWriteAccess: true |}b|] from "a";|>
// [|{| defId: 2 |}b|]();
// [|{| defId: 2 |}b|].x;

// === Definitions ===
// === /c.ts ===
// <|import [|{| contextId: 0, defId: 0 |}a|] from "a";|>
// /*FIND ALL REFS*/a();
// a.x;

// === /node_modules/a/index.d.ts ===
// <|declare function [|{| contextId: 1, defId: 1 |}a|](): void;|>
// declare namespace a {
//     export const x: number;
// }
// export = a;

// === /b.ts ===
// <|import [|{| contextId: 2, defId: 2 |}b|] from "a";|>
// b();
// b.x;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function a(): void\n(alias) namespace a\nimport a",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "namespace a\nfunction a(): void",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "functionName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function b(): void\n(alias) namespace b\nimport b",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   }
  ]
 }
]

// === /c.ts ===
// <|import [|{| contextId: 0, defId: 0, isWriteAccess: true |}a|] from "a";|>
// [|{| defId: 0 |}a|]();
// /*FIND ALL REFS*/[|{| defId: 0 |}a|].x;

// === /node_modules/a/index.d.ts ===
// <|declare function [|{| contextId: 1, defId: 1, isWriteAccess: true |}a|](): void;|>
// <|declare namespace [|{| contextId: 2, defId: 1, isWriteAccess: true |}a|] {
//     export const x: number;
// }|>
// <|export = [|{| contextId: 3, defId: 1 |}a|];|>

// === /b.ts ===
// <|import [|{| contextId: 4, defId: 2, isWriteAccess: true |}b|] from "a";|>
// [|{| defId: 2 |}b|]();
// [|{| defId: 2 |}b|].x;

// === Definitions ===
// === /c.ts ===
// <|import [|{| contextId: 0, defId: 0 |}a|] from "a";|>
// a();
// /*FIND ALL REFS*/a.x;

// === /node_modules/a/index.d.ts ===
// <|declare function [|{| contextId: 1, defId: 1 |}a|](): void;|>
// declare namespace a {
//     export const x: number;
// }
// export = a;

// === /b.ts ===
// <|import [|{| contextId: 2, defId: 2 |}b|] from "a";|>
// b();
// b.x;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function a(): void\n(alias) namespace a\nimport a",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "namespace a\nfunction a(): void",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "functionName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "a",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) function b(): void\n(alias) namespace b\nimport b",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "b",
    "kind": "aliasName"
   }
  ]
 }
]

// === findRenameLocations ===
// === /node_modules/a/index.d.ts ===
// <|declare function /*RENAME*/[|{| contextId: 0 |}aRENAME|](): void;|>
// <|declare namespace [|{| contextId: 1 |}aRENAME|] {
//     export const x: number;
// }|>
// <|export = [|{| contextId: 2 |}aRENAME|];|>

// === /c.ts ===
// <|import [|{| contextId: 3 |}aRENAME|] from "a";|>
// [|aRENAME|]();
// [|aRENAME|].x;



// === /node_modules/a/index.d.ts ===
// <|declare function [|{| contextId: 0 |}aRENAME|](): void;|>
// <|declare namespace /*RENAME*/[|{| contextId: 1 |}aRENAME|] {
//     export const x: number;
// }|>
// <|export = [|{| contextId: 2 |}aRENAME|];|>

// === /c.ts ===
// <|import [|{| contextId: 3 |}aRENAME|] from "a";|>
// [|aRENAME|]();
// [|aRENAME|].x;



// === /node_modules/a/index.d.ts ===
// <|declare function [|{| contextId: 0 |}aRENAME|](): void;|>
// <|declare namespace [|{| contextId: 1 |}aRENAME|] {
//     export const x: number;
// }|>
// <|export = /*RENAME*/[|{| contextId: 2 |}aRENAME|];|>

// === /c.ts ===
// <|import [|{| contextId: 3 |}aRENAME|] from "a";|>
// [|aRENAME|]();
// [|aRENAME|].x;



// === /b.ts ===
// <|import /*RENAME*/[|{| contextId: 0 |}bRENAME|] from "a";|>
// [|bRENAME|]();
// [|bRENAME|].x;



// === /b.ts ===
// <|import [|{| contextId: 0 |}bRENAME|] from "a";|>
// /*RENAME*/[|bRENAME|]();
// [|bRENAME|].x;



// === /b.ts ===
// <|import [|{| contextId: 0 |}bRENAME|] from "a";|>
// [|bRENAME|]();
// /*RENAME*/[|bRENAME|].x;



// === /c.ts ===
// <|import /*RENAME*/[|{| contextId: 0 |}aRENAME|] from "a";|>
// [|aRENAME|]();
// [|aRENAME|].x;



// === /c.ts ===
// <|import [|{| contextId: 0 |}aRENAME|] from "a";|>
// /*RENAME*/[|aRENAME|]();
// [|aRENAME|].x;



// === /c.ts ===
// <|import [|{| contextId: 0 |}aRENAME|] from "a";|>
// [|aRENAME|]();
// /*RENAME*/[|aRENAME|].x;

