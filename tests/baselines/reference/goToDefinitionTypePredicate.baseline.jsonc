// === /tests/cases/fourslash/goToDefinitionTypePredicate.ts ===
// class A {}
// function f(<|[|{| contextId: 0, kind: "parameter", name: "parameter" |}parameter|]: any|>): /*GOTO DEF*/parameter is A {
//     return typeof parameter === "string";
// }

// === TextSpan ===
// === /tests/cases/fourslash/goToDefinitionTypePredicate.ts ===
// class A {}
// function f(parameter: any): /*GOTO DEF*/[|parameter|] is A {
//     return typeof parameter === "string";
// }



// === /tests/cases/fourslash/goToDefinitionTypePredicate.ts ===
// <|class [|{| contextId: 0, kind: "class", name: "A" |}A|] {}|>
// function f(parameter: any): parameter is /*GOTO DEF*/A {
//     return typeof parameter === "string";
// }

// === TextSpan ===
// === /tests/cases/fourslash/goToDefinitionTypePredicate.ts ===
// class A {}
// function f(parameter: any): parameter is /*GOTO DEF*/[|A|] {
//     return typeof parameter === "string";
// }

