// === /tests/cases/fourslash/findAllReferPropertyAccessExpressionHeritageClause.ts ===
// class B {}
// function foo() {
//     return {/*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}B|]: B|>};
// }
// class C extends (foo()).[|{| defId: 0 |}B|] {}
// class C1 extends foo().[|{| defId: 0 |}B|] {}

// === Definitions ===
// === /tests/cases/fourslash/findAllReferPropertyAccessExpressionHeritageClause.ts ===
// class B {}
// function foo() {
//     return {/*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}B|]: B|>};
// }
// class C extends (foo()).B {}
// class C1 extends foo().B {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) B: typeof B",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "B",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "typeof",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "B",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllReferPropertyAccessExpressionHeritageClause.ts ===
// class B {}
// function foo() {
//     return {<|[|{| contextId: 0, defId: 0, isWriteAccess: true |}B|]: B|>};
// }
// class C extends (foo())./*FIND ALL REFS*/[|{| defId: 0 |}B|] {}
// class C1 extends foo().[|{| defId: 0 |}B|] {}

// === Definitions ===
// === /tests/cases/fourslash/findAllReferPropertyAccessExpressionHeritageClause.ts ===
// class B {}
// function foo() {
//     return {<|[|{| contextId: 0, defId: 0 |}B|]: B|>};
// }
// class C extends (foo())./*FIND ALL REFS*/B {}
// class C1 extends foo().B {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) B: typeof B",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "B",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "typeof",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "B",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllReferPropertyAccessExpressionHeritageClause.ts ===
// class B {}
// function foo() {
//     return {<|[|{| contextId: 0, defId: 0, isWriteAccess: true |}B|]: B|>};
// }
// class C extends (foo()).[|{| defId: 0 |}B|] {}
// class C1 extends foo()./*FIND ALL REFS*/[|{| defId: 0 |}B|] {}

// === Definitions ===
// === /tests/cases/fourslash/findAllReferPropertyAccessExpressionHeritageClause.ts ===
// class B {}
// function foo() {
//     return {<|[|{| contextId: 0, defId: 0 |}B|]: B|>};
// }
// class C extends (foo()).B {}
// class C1 extends foo()./*FIND ALL REFS*/B {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) B: typeof B",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "B",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "typeof",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "B",
    "kind": "className"
   }
  ]
 }
]