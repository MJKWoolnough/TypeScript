// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: "hell"
//     optional?: boolean
// }
// <|declare function [|{| contextId: 0, kind: "function", name: "Opt", isAmbient: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <O/*GOTO DEF*/pt />;
// let opt1 = <Opt propx={100} />;
// let opt2 = <Opt propx={100} optional />;
// let opt3 = <Opt wrong />;

// === TextSpan ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: "hell"
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <[|O/*GOTO DEF*/pt|] />;
// let opt1 = <Opt propx={100} />;
// let opt2 = <Opt propx={100} optional />;
// let opt3 = <Opt wrong />;



// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: "hell"
//     optional?: boolean
// }
// <|declare function [|{| contextId: 0, kind: "function", name: "Opt", isAmbient: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <Opt />;
// let opt1 = <Op/*GOTO DEF*/t propx={100} />;
// let opt2 = <Opt propx={100} optional />;
// let opt3 = <Opt wrong />;

// === TextSpan ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: "hell"
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <[|Op/*GOTO DEF*/t|] propx={100} />;
// let opt2 = <Opt propx={100} optional />;
// let opt3 = <Opt wrong />;



// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: "hell"
//     optional?: boolean
// }
// <|declare function [|{| contextId: 0, kind: "function", name: "Opt", isAmbient: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <Opt />;
// let opt1 = <Opt propx={100} />;
// let opt2 = <Op/*GOTO DEF*/t propx={100} optional />;
// let opt3 = <Opt wrong />;

// === TextSpan ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: "hell"
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} />;
// let opt2 = <[|Op/*GOTO DEF*/t|] propx={100} optional />;
// let opt3 = <Opt wrong />;



// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: "hell"
//     optional?: boolean
// }
// <|declare function [|{| contextId: 0, kind: "function", name: "Opt", isAmbient: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <Opt />;
// let opt1 = <Opt propx={100} />;
// let opt2 = <Opt propx={100} optional />;
// let opt3 = <Op/*GOTO DEF*/t wrong />;

// === TextSpan ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: "hell"
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} />;
// let opt2 = <Opt propx={100} optional />;
// let opt3 = <[|Op/*GOTO DEF*/t|] wrong />;



// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     <|[|{| contextId: 0, kind: "property", name: "propx", containerName: "OptionPropBag" |}propx|]: number|>
//     propString: "hell"
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt pr/*GOTO DEF*/opx={100} />;
// let opt2 = <Opt propx={100} optional />;
// let opt3 = <Opt wrong />;

// === TextSpan ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: "hell"
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt [|pr/*GOTO DEF*/opx|]={100} />;
// let opt2 = <Opt propx={100} optional />;
// let opt3 = <Opt wrong />;



// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: "hell"
//     <|[|{| contextId: 0, kind: "property", name: "optional", containerName: "OptionPropBag" |}optional|]?: boolean|>
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} />;
// let opt2 = <Opt propx={100} opt/*GOTO DEF*/ional />;
// let opt3 = <Opt wrong />;

// === TextSpan ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: "hell"
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} />;
// let opt2 = <Opt propx={100} [|opt/*GOTO DEF*/ional|] />;
// let opt3 = <Opt wrong />;

