// === /tests/cases/fourslash/index.tsx ===
// <|import { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}SubmissionComp|] } from "./RedditSubmission"|>
// function displaySubreddit(subreddit: string) {
//     let components = submissions
//         .map((value, index) => <|<[|{| contextId: 1, defId: 0 |}SubmissionComp|] key={ index } elementPosition= { index } {...value.data} />|>);
// }

// === /tests/cases/fourslash/RedditSubmission.ts ===
// export const <|[|{| contextId: 2, defId: 1, isWriteAccess: true |}SubmissionComp|] = (submission: SubmissionProps) =>
//     <div style|>={{ fontFamily: "sans-serif" }}></div>;

// === Definitions ===
// === /tests/cases/fourslash/index.tsx ===
// <|import { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}SubmissionComp|] } from "./RedditSubmission"|>
// function displaySubreddit(subreddit: string) {
//     let components = submissions
//         .map((value, index) => <SubmissionComp key={ index } elementPosition= { index } {...value.data} />);
// }

// === /tests/cases/fourslash/RedditSubmission.ts ===
// export const <|[|{| contextId: 1, defId: 1 |}SubmissionComp|] = (submission: SubmissionProps) =>
//     <div style|>={{ fontFamily: "sans-serif" }}></div>;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const SubmissionComp: (submission: SubmissionProps) => div\nimport SubmissionComp",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SubmissionComp",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "submission",
    "kind": "parameterName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SubmissionProps",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=>",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "div",
    "kind": "text"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SubmissionComp",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const SubmissionComp: (submission: SubmissionProps) => div",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SubmissionComp",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "submission",
    "kind": "parameterName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SubmissionProps",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=>",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "div",
    "kind": "text"
   }
  ]
 }
]

// === /tests/cases/fourslash/RedditSubmission.ts ===
// export const /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}SubmissionComp|] = (submission: SubmissionProps) =>
//     <div style|>={{ fontFamily: "sans-serif" }}></div>;

// === /tests/cases/fourslash/index.tsx ===
// <|import { [|{| contextId: 1, defId: 1, isWriteAccess: true |}SubmissionComp|] } from "./RedditSubmission"|>
// function displaySubreddit(subreddit: string) {
//     let components = submissions
//         .map((value, index) => <|<[|{| contextId: 2, defId: 1 |}SubmissionComp|] key={ index } elementPosition= { index } {...value.data} />|>);
// }

// === Definitions ===
// === /tests/cases/fourslash/RedditSubmission.ts ===
// export const /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}SubmissionComp|] = (submission: SubmissionProps) =>
//     <div style|>={{ fontFamily: "sans-serif" }}></div>;

// === /tests/cases/fourslash/index.tsx ===
// <|import { [|{| contextId: 1, defId: 1 |}SubmissionComp|] } from "./RedditSubmission"|>
// function displaySubreddit(subreddit: string) {
//     let components = submissions
//         .map((value, index) => <SubmissionComp key={ index } elementPosition= { index } {...value.data} />);
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const SubmissionComp: (submission: SubmissionProps) => div",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SubmissionComp",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "submission",
    "kind": "parameterName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SubmissionProps",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=>",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "div",
    "kind": "text"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const SubmissionComp: (submission: SubmissionProps) => div\nimport SubmissionComp",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SubmissionComp",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "submission",
    "kind": "parameterName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SubmissionProps",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=>",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "div",
    "kind": "text"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SubmissionComp",
    "kind": "aliasName"
   }
  ]
 }
]