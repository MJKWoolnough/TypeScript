// === /a.js ===
// /** /*FIND ALL REFS*/@typedef {number} T */
// 
// /**
//  * @return {T}
//  */
// function f(obj) { return 0; }
// 
// /**
//  * @return {T}
//  */
// function f2(obj) { return 0; }

[]

// === /a.js ===
// /** <|@typedef {number} /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}T|]|> */
// 
// /**
//  * @return {[|{| defId: 0 |}T|]}
//  */
// function f(obj) { return 0; }
// 
// /**
//  * @return {[|{| defId: 0 |}T|]}
//  */
// function f2(obj) { return 0; }

// === Definitions ===
// === /a.js ===
// /** <|@typedef {number} /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}T|]|> */
// 
// /**
//  * @return {T}
//  */
// function f(obj) { return 0; }
// 
// /**
//  * @return {T}
//  */
// function f2(obj) { return 0; }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type T = number",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "T",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /a.js ===
// /** <|@typedef {number} [|{| contextId: 0, defId: 0, isWriteAccess: true |}T|]|> */
// 
// /**
//  * @return {/*FIND ALL REFS*/[|{| defId: 0 |}T|]}
//  */
// function f(obj) { return 0; }
// 
// /**
//  * @return {[|{| defId: 0 |}T|]}
//  */
// function f2(obj) { return 0; }

// === Definitions ===
// === /a.js ===
// /** <|@typedef {number} [|{| contextId: 0, defId: 0 |}T|]|> */
// 
// /**
//  * @return {/*FIND ALL REFS*/T}
//  */
// function f(obj) { return 0; }
// 
// /**
//  * @return {T}
//  */
// function f2(obj) { return 0; }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type T = number",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "T",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /a.js ===
// /** <|@typedef {number} [|{| contextId: 0, defId: 0, isWriteAccess: true |}T|]|> */
// 
// /**
//  * @return {[|{| defId: 0 |}T|]}
//  */
// function f(obj) { return 0; }
// 
// /**
//  * @return {/*FIND ALL REFS*/[|{| defId: 0 |}T|]}
//  */
// function f2(obj) { return 0; }

// === Definitions ===
// === /a.js ===
// /** <|@typedef {number} [|{| contextId: 0, defId: 0 |}T|]|> */
// 
// /**
//  * @return {T}
//  */
// function f(obj) { return 0; }
// 
// /**
//  * @return {/*FIND ALL REFS*/T}
//  */
// function f2(obj) { return 0; }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type T = number",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "T",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]