// === /tests/cases/fourslash/referencesForOverrides.ts ===
// module FindRef3 {
// 	module SimpleClassTest {
// 		export class Foo {
// 			<|public /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}foo|](): void {
// 			}|>
// 		}
// 		export class Bar extends Foo {
// 			<|public [|{| contextId: 1, defId: 1, isWriteAccess: true |}foo|](): void {
// 			}|>
// 		}
// 	}
// 
// 	module SimpleInterfaceTest {
// 		export interface IFoo {
// 			ifoo(): void;
// 		}
// 		export interface IBar extends IFoo {
// 			ifoo(): void;
// 		}
// 	}
// 
// 	module SimpleClassInterfaceTest {
// 		export interface IFoo {
// 			icfoo(): void;
// 		}
// 		export class Bar implements IFoo {
// 			public icfoo(): void {
// 			}
// 		}
// 	}
// 
// 	module Test {
// 		export interface IBase {
// 			field: string;
// 			method(): void;
// 		}
// 
// 		export interface IBlah extends IBase {
// 			field: string;
// 		}
// 
// 		export interface IBlah2 extends IBlah {
// 			field: string;
// 		}
// 
// 		export interface IDerived extends IBlah2 {
// 			method(): void;
// 		}
// 
// 		export class Bar implements IDerived {
// 			public field: string;
// 			public method(): void { }
// 		}
// 
// 		export class BarBlah extends Bar {
// 			public field: string;
// 		}
// 	}
// 
// 	function test() {
// 		var x = new SimpleClassTest.Bar();
// 		x.[|{| defId: 1 |}foo|]();
// 
// 		var y: SimpleInterfaceTest.IBar = null;
// 		y.ifoo();
// 
//         var w: SimpleClassInterfaceTest.Bar = null;
//         w.icfoo();
// 
// 		var z = new Test.BarBlah();
// 		z.field = "";
//         z.method();
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/referencesForOverrides.ts ===
// module FindRef3 {
// 	module SimpleClassTest {
// 		export class Foo {
// 			<|public /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}foo|](): void {
// 			}|>
// 		}
// 		export class Bar extends Foo {
// 			<|public [|{| contextId: 1, defId: 1 |}foo|](): void {
// 			}|>
// 		}
// 	}
// 
// 	module SimpleInterfaceTest {
// 		export interface IFoo {
// 			ifoo(): void;
// 		}
// 		export interface IBar extends IFoo {
// 			ifoo(): void;
// 		}
// 	}
// 
// 	module SimpleClassInterfaceTest {
// 		export interface IFoo {
// 			icfoo(): void;
// 		}
// 		export class Bar implements IFoo {
// 			public icfoo(): void {
// 			}
// 		}
// 	}
// 
// 	module Test {
// 		export interface IBase {
// 			field: string;
// 			method(): void;
// 		}
// 
// 		export interface IBlah extends IBase {
// 			field: string;
// 		}
// 
// 		export interface IBlah2 extends IBlah {
// 			field: string;
// 		}
// 
// 		export interface IDerived extends IBlah2 {
// 			method(): void;
// 		}
// 
// 		export class Bar implements IDerived {
// 			public field: string;
// 			public method(): void { }
// 		}
// 
// 		export class BarBlah extends Bar {
// 			public field: string;
// 		}
// 	}
// 
// 	function test() {
// 		var x = new SimpleClassTest.Bar();
// 		x.foo();
// 
// 		var y: SimpleInterfaceTest.IBar = null;
// 		y.ifoo();
// 
//         var w: SimpleClassInterfaceTest.Bar = null;
//         w.icfoo();
// 
// 		var z = new Test.BarBlah();
// 		z.field = "";
//         z.method();
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) SimpleClassTest.Foo.foo(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SimpleClassTest",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "Foo",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "foo",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) SimpleClassTest.Bar.foo(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SimpleClassTest",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "Bar",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "foo",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForOverrides.ts ===
// module FindRef3 {
// 	module SimpleClassTest {
// 		export class Foo {
// 			public foo(): void {
// 			}
// 		}
// 		export class Bar extends Foo {
// 			public foo(): void {
// 			}
// 		}
// 	}
// 
// 	module SimpleInterfaceTest {
// 		export interface IFoo {
// 			/*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isDefinition: true |}ifoo|](): void;|>
// 		}
// 		export interface IBar extends IFoo {
// 			<|[|{| contextId: 1, defId: 1 |}ifoo|](): void;|>
// 		}
// 	}
// 
// 	module SimpleClassInterfaceTest {
// 		export interface IFoo {
// 			icfoo(): void;
// 		}
// 		export class Bar implements IFoo {
// 			public icfoo(): void {
// 			}
// 		}
// 	}
// 
// 	module Test {
// 		export interface IBase {
// 			field: string;
// 			method(): void;
// 		}
// 
// 		export interface IBlah extends IBase {
// 			field: string;
// 		}
// 
// 		export interface IBlah2 extends IBlah {
// 			field: string;
// 		}
// 
// 		export interface IDerived extends IBlah2 {
// 			method(): void;
// 		}
// 
// 		export class Bar implements IDerived {
// 			public field: string;
// 			public method(): void { }
// 		}
// 
// 		export class BarBlah extends Bar {
// 			public field: string;
// 		}
// 	}
// 
// 	function test() {
// 		var x = new SimpleClassTest.Bar();
// 		x.foo();
// 
// 		var y: SimpleInterfaceTest.IBar = null;
// 		y.[|{| defId: 1 |}ifoo|]();
// 
//         var w: SimpleClassInterfaceTest.Bar = null;
//         w.icfoo();
// 
// 		var z = new Test.BarBlah();
// 		z.field = "";
//         z.method();
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/referencesForOverrides.ts ===
// module FindRef3 {
// 	module SimpleClassTest {
// 		export class Foo {
// 			public foo(): void {
// 			}
// 		}
// 		export class Bar extends Foo {
// 			public foo(): void {
// 			}
// 		}
// 	}
// 
// 	module SimpleInterfaceTest {
// 		export interface IFoo {
// 			/*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}ifoo|](): void;|>
// 		}
// 		export interface IBar extends IFoo {
// 			<|[|{| contextId: 1, defId: 1 |}ifoo|](): void;|>
// 		}
// 	}
// 
// 	module SimpleClassInterfaceTest {
// 		export interface IFoo {
// 			icfoo(): void;
// 		}
// 		export class Bar implements IFoo {
// 			public icfoo(): void {
// 			}
// 		}
// 	}
// 
// 	module Test {
// 		export interface IBase {
// 			field: string;
// 			method(): void;
// 		}
// 
// 		export interface IBlah extends IBase {
// 			field: string;
// 		}
// 
// 		export interface IBlah2 extends IBlah {
// 			field: string;
// 		}
// 
// 		export interface IDerived extends IBlah2 {
// 			method(): void;
// 		}
// 
// 		export class Bar implements IDerived {
// 			public field: string;
// 			public method(): void { }
// 		}
// 
// 		export class BarBlah extends Bar {
// 			public field: string;
// 		}
// 	}
// 
// 	function test() {
// 		var x = new SimpleClassTest.Bar();
// 		x.foo();
// 
// 		var y: SimpleInterfaceTest.IBar = null;
// 		y.ifoo();
// 
//         var w: SimpleClassInterfaceTest.Bar = null;
//         w.icfoo();
// 
// 		var z = new Test.BarBlah();
// 		z.field = "";
//         z.method();
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) SimpleInterfaceTest.IFoo.ifoo(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SimpleInterfaceTest",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "IFoo",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "ifoo",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) SimpleInterfaceTest.IBar.ifoo(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SimpleInterfaceTest",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "IBar",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "ifoo",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForOverrides.ts ===
// module FindRef3 {
// 	module SimpleClassTest {
// 		export class Foo {
// 			public foo(): void {
// 			}
// 		}
// 		export class Bar extends Foo {
// 			public foo(): void {
// 			}
// 		}
// 	}
// 
// 	module SimpleInterfaceTest {
// 		export interface IFoo {
// 			ifoo(): void;
// 		}
// 		export interface IBar extends IFoo {
// 			ifoo(): void;
// 		}
// 	}
// 
// 	module SimpleClassInterfaceTest {
// 		export interface IFoo {
// 			/*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isDefinition: true |}icfoo|](): void;|>
// 		}
// 		export class Bar implements IFoo {
// 			<|public [|{| contextId: 1, defId: 1, isWriteAccess: true |}icfoo|](): void {
// 			}|>
// 		}
// 	}
// 
// 	module Test {
// 		export interface IBase {
// 			field: string;
// 			method(): void;
// 		}
// 
// 		export interface IBlah extends IBase {
// 			field: string;
// 		}
// 
// 		export interface IBlah2 extends IBlah {
// 			field: string;
// 		}
// 
// 		export interface IDerived extends IBlah2 {
// 			method(): void;
// 		}
// 
// 		export class Bar implements IDerived {
// 			public field: string;
// 			public method(): void { }
// 		}
// 
// 		export class BarBlah extends Bar {
// 			public field: string;
// 		}
// 	}
// 
// 	function test() {
// 		var x = new SimpleClassTest.Bar();
// 		x.foo();
// 
// 		var y: SimpleInterfaceTest.IBar = null;
// 		y.ifoo();
// 
//         var w: SimpleClassInterfaceTest.Bar = null;
//         w.[|{| defId: 1 |}icfoo|]();
// 
// 		var z = new Test.BarBlah();
// 		z.field = "";
//         z.method();
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/referencesForOverrides.ts ===
// module FindRef3 {
// 	module SimpleClassTest {
// 		export class Foo {
// 			public foo(): void {
// 			}
// 		}
// 		export class Bar extends Foo {
// 			public foo(): void {
// 			}
// 		}
// 	}
// 
// 	module SimpleInterfaceTest {
// 		export interface IFoo {
// 			ifoo(): void;
// 		}
// 		export interface IBar extends IFoo {
// 			ifoo(): void;
// 		}
// 	}
// 
// 	module SimpleClassInterfaceTest {
// 		export interface IFoo {
// 			/*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}icfoo|](): void;|>
// 		}
// 		export class Bar implements IFoo {
// 			<|public [|{| contextId: 1, defId: 1 |}icfoo|](): void {
// 			}|>
// 		}
// 	}
// 
// 	module Test {
// 		export interface IBase {
// 			field: string;
// 			method(): void;
// 		}
// 
// 		export interface IBlah extends IBase {
// 			field: string;
// 		}
// 
// 		export interface IBlah2 extends IBlah {
// 			field: string;
// 		}
// 
// 		export interface IDerived extends IBlah2 {
// 			method(): void;
// 		}
// 
// 		export class Bar implements IDerived {
// 			public field: string;
// 			public method(): void { }
// 		}
// 
// 		export class BarBlah extends Bar {
// 			public field: string;
// 		}
// 	}
// 
// 	function test() {
// 		var x = new SimpleClassTest.Bar();
// 		x.foo();
// 
// 		var y: SimpleInterfaceTest.IBar = null;
// 		y.ifoo();
// 
//         var w: SimpleClassInterfaceTest.Bar = null;
//         w.icfoo();
// 
// 		var z = new Test.BarBlah();
// 		z.field = "";
//         z.method();
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) SimpleClassInterfaceTest.IFoo.icfoo(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SimpleClassInterfaceTest",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "IFoo",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "icfoo",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) SimpleClassInterfaceTest.Bar.icfoo(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "SimpleClassInterfaceTest",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "Bar",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "icfoo",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForOverrides.ts ===
// module FindRef3 {
// 	module SimpleClassTest {
// 		export class Foo {
// 			public foo(): void {
// 			}
// 		}
// 		export class Bar extends Foo {
// 			public foo(): void {
// 			}
// 		}
// 	}
// 
// 	module SimpleInterfaceTest {
// 		export interface IFoo {
// 			ifoo(): void;
// 		}
// 		export interface IBar extends IFoo {
// 			ifoo(): void;
// 		}
// 	}
// 
// 	module SimpleClassInterfaceTest {
// 		export interface IFoo {
// 			icfoo(): void;
// 		}
// 		export class Bar implements IFoo {
// 			public icfoo(): void {
// 			}
// 		}
// 	}
// 
// 	module Test {
// 		export interface IBase {
// 			/*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isDefinition: true |}field|]: string;|>
// 			method(): void;
// 		}
// 
// 		export interface IBlah extends IBase {
// 			<|[|{| contextId: 1, defId: 1 |}field|]: string;|>
// 		}
// 
// 		export interface IBlah2 extends IBlah {
// 			<|[|{| contextId: 2, defId: 2 |}field|]: string;|>
// 		}
// 
// 		export interface IDerived extends IBlah2 {
// 			method(): void;
// 		}
// 
// 		export class Bar implements IDerived {
// 			<|public [|{| contextId: 3, defId: 3 |}field|]: string;|>
// 			public method(): void { }
// 		}
// 
// 		export class BarBlah extends Bar {
// 			<|public [|{| contextId: 4, defId: 4 |}field|]: string;|>
// 		}
// 	}
// 
// 	function test() {
// 		var x = new SimpleClassTest.Bar();
// 		x.foo();
// 
// 		var y: SimpleInterfaceTest.IBar = null;
// 		y.ifoo();
// 
//         var w: SimpleClassInterfaceTest.Bar = null;
//         w.icfoo();
// 
// 		var z = new Test.BarBlah();
// 		z.[|{| defId: 4, isWriteAccess: true |}field|] = "";
//         z.method();
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/referencesForOverrides.ts ===
// module FindRef3 {
// 	module SimpleClassTest {
// 		export class Foo {
// 			public foo(): void {
// 			}
// 		}
// 		export class Bar extends Foo {
// 			public foo(): void {
// 			}
// 		}
// 	}
// 
// 	module SimpleInterfaceTest {
// 		export interface IFoo {
// 			ifoo(): void;
// 		}
// 		export interface IBar extends IFoo {
// 			ifoo(): void;
// 		}
// 	}
// 
// 	module SimpleClassInterfaceTest {
// 		export interface IFoo {
// 			icfoo(): void;
// 		}
// 		export class Bar implements IFoo {
// 			public icfoo(): void {
// 			}
// 		}
// 	}
// 
// 	module Test {
// 		export interface IBase {
// 			/*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}field|]: string;|>
// 			method(): void;
// 		}
// 
// 		export interface IBlah extends IBase {
// 			<|[|{| contextId: 1, defId: 1 |}field|]: string;|>
// 		}
// 
// 		export interface IBlah2 extends IBlah {
// 			<|[|{| contextId: 2, defId: 2 |}field|]: string;|>
// 		}
// 
// 		export interface IDerived extends IBlah2 {
// 			method(): void;
// 		}
// 
// 		export class Bar implements IDerived {
// 			<|public [|{| contextId: 3, defId: 3 |}field|]: string;|>
// 			public method(): void { }
// 		}
// 
// 		export class BarBlah extends Bar {
// 			<|public [|{| contextId: 4, defId: 4 |}field|]: string;|>
// 		}
// 	}
// 
// 	function test() {
// 		var x = new SimpleClassTest.Bar();
// 		x.foo();
// 
// 		var y: SimpleInterfaceTest.IBar = null;
// 		y.ifoo();
// 
//         var w: SimpleClassInterfaceTest.Bar = null;
//         w.icfoo();
// 
// 		var z = new Test.BarBlah();
// 		z.field = "";
//         z.method();
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) Test.IBase.field: string",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Test",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "IBase",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "field",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) Test.IBlah.field: string",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Test",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "IBlah",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "field",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) Test.IBlah2.field: string",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Test",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "IBlah2",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "field",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 3,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) Test.Bar.field: string",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Test",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "Bar",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "field",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 4,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) Test.BarBlah.field: string",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Test",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "BarBlah",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "field",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForOverrides.ts ===
// module FindRef3 {
// 	module SimpleClassTest {
// 		export class Foo {
// 			public foo(): void {
// 			}
// 		}
// 		export class Bar extends Foo {
// 			public foo(): void {
// 			}
// 		}
// 	}
// 
// 	module SimpleInterfaceTest {
// 		export interface IFoo {
// 			ifoo(): void;
// 		}
// 		export interface IBar extends IFoo {
// 			ifoo(): void;
// 		}
// 	}
// 
// 	module SimpleClassInterfaceTest {
// 		export interface IFoo {
// 			icfoo(): void;
// 		}
// 		export class Bar implements IFoo {
// 			public icfoo(): void {
// 			}
// 		}
// 	}
// 
// 	module Test {
// 		export interface IBase {
// 			field: string;
// 			/*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isDefinition: true |}method|](): void;|>
// 		}
// 
// 		export interface IBlah extends IBase {
// 			field: string;
// 		}
// 
// 		export interface IBlah2 extends IBlah {
// 			field: string;
// 		}
// 
// 		export interface IDerived extends IBlah2 {
// 			<|[|{| contextId: 1, defId: 1 |}method|](): void;|>
// 		}
// 
// 		export class Bar implements IDerived {
// 			public field: string;
// 			<|public [|{| contextId: 2, defId: 2, isWriteAccess: true |}method|](): void { }|>
// 		}
// 
// 		export class BarBlah extends Bar {
// 			public field: string;
// 		}
// 	}
// 
// 	function test() {
// 		var x = new SimpleClassTest.Bar();
// 		x.foo();
// 
// 		var y: SimpleInterfaceTest.IBar = null;
// 		y.ifoo();
// 
//         var w: SimpleClassInterfaceTest.Bar = null;
//         w.icfoo();
// 
// 		var z = new Test.BarBlah();
// 		z.field = "";
//         z.[|{| defId: 2 |}method|]();
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/referencesForOverrides.ts ===
// module FindRef3 {
// 	module SimpleClassTest {
// 		export class Foo {
// 			public foo(): void {
// 			}
// 		}
// 		export class Bar extends Foo {
// 			public foo(): void {
// 			}
// 		}
// 	}
// 
// 	module SimpleInterfaceTest {
// 		export interface IFoo {
// 			ifoo(): void;
// 		}
// 		export interface IBar extends IFoo {
// 			ifoo(): void;
// 		}
// 	}
// 
// 	module SimpleClassInterfaceTest {
// 		export interface IFoo {
// 			icfoo(): void;
// 		}
// 		export class Bar implements IFoo {
// 			public icfoo(): void {
// 			}
// 		}
// 	}
// 
// 	module Test {
// 		export interface IBase {
// 			field: string;
// 			/*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}method|](): void;|>
// 		}
// 
// 		export interface IBlah extends IBase {
// 			field: string;
// 		}
// 
// 		export interface IBlah2 extends IBlah {
// 			field: string;
// 		}
// 
// 		export interface IDerived extends IBlah2 {
// 			<|[|{| contextId: 1, defId: 1 |}method|](): void;|>
// 		}
// 
// 		export class Bar implements IDerived {
// 			public field: string;
// 			<|public [|{| contextId: 2, defId: 2 |}method|](): void { }|>
// 		}
// 
// 		export class BarBlah extends Bar {
// 			public field: string;
// 		}
// 	}
// 
// 	function test() {
// 		var x = new SimpleClassTest.Bar();
// 		x.foo();
// 
// 		var y: SimpleInterfaceTest.IBar = null;
// 		y.ifoo();
// 
//         var w: SimpleClassInterfaceTest.Bar = null;
//         w.icfoo();
// 
// 		var z = new Test.BarBlah();
// 		z.field = "";
//         z.method();
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) Test.IBase.method(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Test",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "IBase",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) Test.IDerived.method(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Test",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "IDerived",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "method",
  "name": "(method) Test.Bar.method(): void",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Test",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "Bar",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "method",
    "kind": "methodName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 }
]