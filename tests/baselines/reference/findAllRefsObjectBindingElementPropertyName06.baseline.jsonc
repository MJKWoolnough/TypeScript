// === /tests/cases/fourslash/findAllRefsObjectBindingElementPropertyName06.ts ===
// interface I {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isDefinition: true |}property1|]: number;|>
//     property2: string;
// }
// 
// var elems: I[];
// for (<|let { [|{| contextId: 1, defId: 0 |}property1|]: p } of elems|>) {
// }
// for (<|let { [|{| contextId: 2, defId: 0, isWriteAccess: true |}property1|] } of elems|>) {
// }
// for (<|var { [|{| contextId: 3, defId: 0 |}property1|]: p1 } of elems|>) {
// }
// var p2;
// for (<|{ [|{| contextId: 4, defId: 0, isWriteAccess: true |}property1|] : p2 } of elems|>) {
// }

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsObjectBindingElementPropertyName06.ts ===
// interface I {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}property1|]: number;|>
//     property2: string;
// }
// 
// var elems: I[];
// for (let { property1: p } of elems) {
// }
// for (let { property1 } of elems) {
// }
// for (var { property1: p1 } of elems) {
// }
// var p2;
// for ({ property1 : p2 } of elems) {
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) I.property1: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "I",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "property1",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsObjectBindingElementPropertyName06.ts ===
// interface I {
//     <|[|{| contextId: 0, defId: 0 |}property1|]: number;|>
//     property2: string;
// }
// 
// var elems: I[];
// for (<|let { /*FIND ALL REFS*/[|{| contextId: 1, defId: 0 |}property1|]: p } of elems|>) {
// }
// for (<|let { [|{| contextId: 2, defId: 0, isWriteAccess: true |}property1|] } of elems|>) {
// }
// for (<|var { [|{| contextId: 3, defId: 0 |}property1|]: p1 } of elems|>) {
// }
// var p2;
// for (<|{ [|{| contextId: 4, defId: 0, isWriteAccess: true |}property1|] : p2 } of elems|>) {
// }

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsObjectBindingElementPropertyName06.ts ===
// interface I {
//     <|[|{| contextId: 0, defId: 0 |}property1|]: number;|>
//     property2: string;
// }
// 
// var elems: I[];
// for (let { /*FIND ALL REFS*/property1: p } of elems) {
// }
// for (let { property1 } of elems) {
// }
// for (var { property1: p1 } of elems) {
// }
// var p2;
// for ({ property1 : p2 } of elems) {
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) I.property1: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "I",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "property1",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsObjectBindingElementPropertyName06.ts ===
// interface I {
//     <|[|{| contextId: 0, defId: 0 |}property1|]: number;|>
//     property2: string;
// }
// 
// var elems: I[];
// for (<|let { [|{| contextId: 1, defId: 0 |}property1|]: p } of elems|>) {
// }
// for (<|let { [|{| contextId: 2, defId: 0, isWriteAccess: true |}property1|] } of elems|>) {
// }
// for (<|var { /*FIND ALL REFS*/[|{| contextId: 3, defId: 0 |}property1|]: p1 } of elems|>) {
// }
// var p2;
// for (<|{ [|{| contextId: 4, defId: 0, isWriteAccess: true |}property1|] : p2 } of elems|>) {
// }

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsObjectBindingElementPropertyName06.ts ===
// interface I {
//     <|[|{| contextId: 0, defId: 0 |}property1|]: number;|>
//     property2: string;
// }
// 
// var elems: I[];
// for (let { property1: p } of elems) {
// }
// for (let { property1 } of elems) {
// }
// for (var { /*FIND ALL REFS*/property1: p1 } of elems) {
// }
// var p2;
// for ({ property1 : p2 } of elems) {
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) I.property1: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "I",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "property1",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsObjectBindingElementPropertyName06.ts ===
// interface I {
//     <|[|{| contextId: 0, defId: 0 |}property1|]: number;|>
//     property2: string;
// }
// 
// var elems: I[];
// for (<|let { [|{| contextId: 1, defId: 0 |}property1|]: p } of elems|>) {
// }
// for (<|let { [|{| contextId: 2, defId: 0, isWriteAccess: true |}property1|] } of elems|>) {
// }
// for (<|var { [|{| contextId: 3, defId: 0 |}property1|]: p1 } of elems|>) {
// }
// var p2;
// for (<|{ /*FIND ALL REFS*/[|{| contextId: 4, defId: 0, isWriteAccess: true, isDefinition: true |}property1|] : p2 } of elems|>) {
// }

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsObjectBindingElementPropertyName06.ts ===
// interface I {
//     <|[|{| contextId: 0, defId: 0 |}property1|]: number;|>
//     property2: string;
// }
// 
// var elems: I[];
// for (let { property1: p } of elems) {
// }
// for (let { property1 } of elems) {
// }
// for (var { property1: p1 } of elems) {
// }
// var p2;
// for ({ /*FIND ALL REFS*/property1 : p2 } of elems) {
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) I.property1: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "I",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "property1",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsObjectBindingElementPropertyName06.ts ===
// interface I {
//     <|[|{| contextId: 0, defId: 0 |}property1|]: number;|>
//     property2: string;
// }
// 
// var elems: I[];
// for (<|let { [|{| contextId: 1, defId: 0 |}property1|]: p } of elems|>) {
// }
// for (<|let { /*FIND ALL REFS*/[|{| contextId: 2, defId: 1, isWriteAccess: true, isDefinition: true |}property1|] } of elems|>) {
// }
// for (<|var { [|{| contextId: 3, defId: 0 |}property1|]: p1 } of elems|>) {
// }
// var p2;
// for (<|{ [|{| contextId: 4, defId: 0, isWriteAccess: true |}property1|] : p2 } of elems|>) {
// }

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsObjectBindingElementPropertyName06.ts ===
// interface I {
//     <|[|{| contextId: 0, defId: 0 |}property1|]: number;|>
//     property2: string;
// }
// 
// var elems: I[];
// for (let { property1: p } of elems) {
// }
// for (<|let { /*FIND ALL REFS*/[|{| contextId: 1, defId: 1 |}property1|] } of elems|>) {
// }
// for (var { property1: p1 } of elems) {
// }
// var p2;
// for ({ property1 : p2 } of elems) {
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) I.property1: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "I",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "property1",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "let",
  "name": "let property1: number",
  "displayParts": [
   {
    "text": "let",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "property1",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]