// === /tests/cases/fourslash/findAllRefsInsideWithBlock.ts ===
// /*FIND ALL REFS*/<|var [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}x|] = 0;|>
// 
// with ({}) {
//     var y = x;  // Reference of x here should not be picked
//     y++;        // also reference for y should be ignored
// }
// 
// [|{| defId: 0, isWriteAccess: true |}x|] = [|{| defId: 0 |}x|] + 1;

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsInsideWithBlock.ts ===
// /*FIND ALL REFS*/<|var [|{| contextId: 0, defId: 0, kind: "var", name: "var x: number", displayParts: [{"text":"var","kind":"keyword"},{"text":" ","kind":"space"},{"text":"x","kind":"localName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"number","kind":"keyword"}] |}x|] = 0;|>
// 
// with ({}) {
//     var y = x;  // Reference of x here should not be picked
//     y++;        // also reference for y should be ignored
// }
// 
// x = x + 1;

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
      "kind": "var",
      "name": "var x: number",
      "textSpan": {
        "start": 4,
        "length": 1
      },
      "displayParts": [
        {
          "text": "var",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "x",
          "kind": "localName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 4,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
        "contextSpan": {
          "start": 0,
          "length": 10
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 145,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
        "isWriteAccess": true,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 149,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /tests/cases/fourslash/findAllRefsInsideWithBlock.ts ===
// <|var /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}x|] = 0;|>
// 
// with ({}) {
//     var y = x;  // Reference of x here should not be picked
//     y++;        // also reference for y should be ignored
// }
// 
// [|{| defId: 0, isWriteAccess: true |}x|] = [|{| defId: 0 |}x|] + 1;

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsInsideWithBlock.ts ===
// <|var /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, kind: "var", name: "var x: number", displayParts: [{"text":"var","kind":"keyword"},{"text":" ","kind":"space"},{"text":"x","kind":"localName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"number","kind":"keyword"}] |}x|] = 0;|>
// 
// with ({}) {
//     var y = x;  // Reference of x here should not be picked
//     y++;        // also reference for y should be ignored
// }
// 
// x = x + 1;

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
      "kind": "var",
      "name": "var x: number",
      "textSpan": {
        "start": 4,
        "length": 1
      },
      "displayParts": [
        {
          "text": "var",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "x",
          "kind": "localName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 4,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
        "contextSpan": {
          "start": 0,
          "length": 10
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 145,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
        "isWriteAccess": true,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 149,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /tests/cases/fourslash/findAllRefsInsideWithBlock.ts ===
// <|var [|{| contextId: 0, defId: 0, isWriteAccess: true |}x|] = 0;|>
// 
// with ({}) {
//     var y = x;  // Reference of x here should not be picked
//     y++;        // also reference for y should be ignored
// }
// 
// /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true |}x|] = [|{| defId: 0 |}x|] + 1;

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsInsideWithBlock.ts ===
// <|var [|{| contextId: 0, defId: 0, kind: "var", name: "var x: number", displayParts: [{"text":"var","kind":"keyword"},{"text":" ","kind":"space"},{"text":"x","kind":"localName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"number","kind":"keyword"}] |}x|] = 0;|>
// 
// with ({}) {
//     var y = x;  // Reference of x here should not be picked
//     y++;        // also reference for y should be ignored
// }
// 
// /*FIND ALL REFS*/x = x + 1;

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
      "kind": "var",
      "name": "var x: number",
      "textSpan": {
        "start": 4,
        "length": 1
      },
      "displayParts": [
        {
          "text": "var",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "x",
          "kind": "localName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 4,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
        "contextSpan": {
          "start": 0,
          "length": 10
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 145,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 149,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
        "isWriteAccess": false
      }
    ]
  }
]

// === /tests/cases/fourslash/findAllRefsInsideWithBlock.ts ===
// <|var [|{| contextId: 0, defId: 0, isWriteAccess: true |}x|] = 0;|>
// 
// with ({}) {
//     var y = x;  // Reference of x here should not be picked
//     y++;        // also reference for y should be ignored
// }
// 
// [|{| defId: 0, isWriteAccess: true |}x|] = /*FIND ALL REFS*/[|{| defId: 0 |}x|] + 1;

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsInsideWithBlock.ts ===
// <|var [|{| contextId: 0, defId: 0, kind: "var", name: "var x: number", displayParts: [{"text":"var","kind":"keyword"},{"text":" ","kind":"space"},{"text":"x","kind":"localName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"number","kind":"keyword"}] |}x|] = 0;|>
// 
// with ({}) {
//     var y = x;  // Reference of x here should not be picked
//     y++;        // also reference for y should be ignored
// }
// 
// x = /*FIND ALL REFS*/x + 1;

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
      "kind": "var",
      "name": "var x: number",
      "textSpan": {
        "start": 4,
        "length": 1
      },
      "displayParts": [
        {
          "text": "var",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "x",
          "kind": "localName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 4,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
        "contextSpan": {
          "start": 0,
          "length": 10
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 145,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 149,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/findAllRefsInsideWithBlock.ts",
        "isWriteAccess": false
      }
    ]
  }
]