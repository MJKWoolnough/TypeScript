// === findAllReferences ===
// === /foo/types/types.ts ===
// <|export type /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}Full|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo.[|{| defId: 0 |}Full|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.[|{| defId: 0 |}Full|];

// === Definitions ===
// === /foo/types/types.ts ===
// <|export type /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}Full|] = { prop: string; };|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type Full = {\n    prop: string;\n}",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Full",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "    ",
    "kind": "space"
   },
   {
    "text": "prop",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": ";",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]

// === /foo/types/types.ts ===
// <|export type [|{| contextId: 0, defId: 0, isWriteAccess: true |}Full|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo./*FIND ALL REFS*/[|{| defId: 0 |}Full|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.[|{| defId: 0 |}Full|];

// === Definitions ===
// === /foo/types/types.ts ===
// <|export type [|{| contextId: 0, defId: 0 |}Full|] = { prop: string; };|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type Full = {\n    prop: string;\n}",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Full",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "    ",
    "kind": "space"
   },
   {
    "text": "prop",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": ";",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]

// === /foo/types/types.ts ===
// <|export type [|{| contextId: 0, defId: 0, isWriteAccess: true |}Full|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo.[|{| defId: 0 |}Full|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo./*FIND ALL REFS*/[|{| defId: 0 |}Full|];

// === Definitions ===
// === /foo/types/types.ts ===
// <|export type [|{| contextId: 0, defId: 0 |}Full|] = { prop: string; };|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type Full = {\n    prop: string;\n}",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Full",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "    ",
    "kind": "space"
   },
   {
    "text": "prop",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": ";",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]

// === /foo/types/index.ts ===
// <|import * as /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}foo|] from './types';|>
// <|export { [|{| contextId: 1, defId: 0, isWriteAccess: true |}foo|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2, defId: 2, isWriteAccess: true |}foo|] } from './foo/types';|>
// export type fullType = [|{| defId: 2 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|{| defId: 1 |}foo|].Full;

// === Definitions ===
// === /foo/types/index.ts ===
// <|import * as /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}foo|] from './types';|>
// <|export { [|{| contextId: 1, defId: 1 |}foo|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2, defId: 2 |}foo|] } from './foo/types';|>
// export type fullType = foo.Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.Full;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "import foo",
  "displayParts": [
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "export foo",
  "displayParts": [
   {
    "text": "export",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "import foo",
  "displayParts": [
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 }
]

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 0, defId: 0, isWriteAccess: true |}foo|] from './types';|>
// <|export { /*FIND ALL REFS*/[|{| contextId: 1, defId: 0, isWriteAccess: true, isDefinition: true |}foo|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2, defId: 2, isWriteAccess: true |}foo|] } from './foo/types';|>
// export type fullType = [|{| defId: 2 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|{| defId: 1 |}foo|].Full;

// === Definitions ===
// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 0, defId: 0 |}foo|] from './types';|>
// <|export { /*FIND ALL REFS*/[|{| contextId: 1, defId: 1 |}foo|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2, defId: 2 |}foo|] } from './foo/types';|>
// export type fullType = foo.Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.Full;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "import foo",
  "displayParts": [
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "export foo",
  "displayParts": [
   {
    "text": "export",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "import foo",
  "displayParts": [
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 }
]

// === /app.ts ===
// <|import { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}foo|] } from './foo/types';|>
// export type fullType = [|{| defId: 0 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|{| defId: 2 |}foo|].Full;

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 1, defId: 1, isWriteAccess: true |}foo|] from './types';|>
// <|export { [|{| contextId: 2, defId: 1, isWriteAccess: true |}foo|] };|>

// === Definitions ===
// === /app.ts ===
// <|import { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}foo|] } from './foo/types';|>
// export type fullType = foo.Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.Full;

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 1, defId: 1 |}foo|] from './types';|>
// <|export { [|{| contextId: 2, defId: 2 |}foo|] };|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "import foo",
  "displayParts": [
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "import foo",
  "displayParts": [
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "export foo",
  "displayParts": [
   {
    "text": "export",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 }
]

// === /app.ts ===
// <|import { [|{| contextId: 0, defId: 0, isWriteAccess: true |}foo|] } from './foo/types';|>
// export type fullType = /*FIND ALL REFS*/[|{| defId: 0 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|{| defId: 2 |}foo|].Full;

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 1, defId: 1, isWriteAccess: true |}foo|] from './types';|>
// <|export { [|{| contextId: 2, defId: 1, isWriteAccess: true |}foo|] };|>

// === Definitions ===
// === /app.ts ===
// <|import { [|{| contextId: 0, defId: 0 |}foo|] } from './foo/types';|>
// export type fullType = /*FIND ALL REFS*/foo.Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.Full;

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 1, defId: 1 |}foo|] from './types';|>
// <|export { [|{| contextId: 2, defId: 2 |}foo|] };|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "import foo",
  "displayParts": [
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "import foo",
  "displayParts": [
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "export foo",
  "displayParts": [
   {
    "text": "export",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 }
]

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 0, defId: 0, isWriteAccess: true |}foo|] from './types';|>
// <|export { [|{| contextId: 1, defId: 0, isWriteAccess: true |}foo|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2, defId: 2, isWriteAccess: true |}foo|] } from './foo/types';|>
// export type fullType = [|{| defId: 2 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types')./*FIND ALL REFS*/[|{| defId: 1 |}foo|].Full;

// === Definitions ===
// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 0, defId: 0 |}foo|] from './types';|>
// <|export { [|{| contextId: 1, defId: 1 |}foo|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2, defId: 2 |}foo|] } from './foo/types';|>
// export type fullType = foo.Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types')./*FIND ALL REFS*/foo.Full;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "import foo",
  "displayParts": [
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "export foo",
  "displayParts": [
   {
    "text": "export",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "import foo",
  "displayParts": [
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "foo",
    "kind": "aliasName"
   }
  ]
 }
]

// === findRenameLocations ===
// === /foo/types/index.ts ===
// <|import * as /*RENAME*/[|{| contextId: 0 |}fooRENAME|] from './types';|>
// <|export { [|{| contextId: 1 |}fooRENAME|] as foo/*END SUFFIX*/ };|>



// === /foo/types/index.ts ===
// import * as foo from './types';
// <|export { /*START PREFIX*/foo as /*RENAME*/[|{| contextId: 0 |}fooRENAME|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 1 |}fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;



// === /app.ts ===
// <|import { /*START PREFIX*/foo as /*RENAME*/[|{| contextId: 0 |}fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.Full;



// === /app.ts ===
// <|import { /*START PREFIX*/foo as [|{| contextId: 0 |}fooRENAME|] } from './foo/types';|>
// export type fullType = /*RENAME*/[|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.Full;



// === /foo/types/types.ts ===
// <|export type /*RENAME*/[|{| contextId: 0 |}FullRENAME|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo.[|FullRENAME|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.[|FullRENAME|];



// === /foo/types/types.ts ===
// <|export type [|{| contextId: 0 |}FullRENAME|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo./*RENAME*/[|FullRENAME|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.[|FullRENAME|];



// === /foo/types/types.ts ===
// <|export type [|{| contextId: 0 |}FullRENAME|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo.[|FullRENAME|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo./*RENAME*/[|FullRENAME|];



// === findRenameLocations ===
// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /app.ts ===
// <|import { /*RENAME*/[|{| contextId: 0 |}fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 1 |}fooRENAME|] from './types';|>
// <|export { [|{| contextId: 2 |}fooRENAME|] };|>



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /app.ts ===
// <|import { [|{| contextId: 0 |}fooRENAME|] } from './foo/types';|>
// export type fullType = /*RENAME*/[|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 1 |}fooRENAME|] from './types';|>
// <|export { [|{| contextId: 2 |}fooRENAME|] };|>



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 0 |}fooRENAME|] from './types';|>
// <|export { [|{| contextId: 1 |}fooRENAME|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2 |}fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types')./*RENAME*/[|fooRENAME|].Full;



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /foo/types/index.ts ===
// <|import * as /*RENAME*/[|{| contextId: 0 |}fooRENAME|] from './types';|>
// <|export { [|{| contextId: 1 |}fooRENAME|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2 |}fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;



// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 0 |}fooRENAME|] from './types';|>
// <|export { /*RENAME*/[|{| contextId: 1 |}fooRENAME|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2 |}fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;

