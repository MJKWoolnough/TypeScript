// === findAllReferences ===
// === /foo/types/types.ts ===
// <|export type /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}Full|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo.[|{| defId: 0 |}Full|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.[|{| defId: 0 |}Full|];

// === Definitions ===
// === /foo/types/types.ts ===
// <|export type /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, kind: "type", name: "type Full = {\n    prop: string;\n}", displayParts: [{"text":"type","kind":"keyword"},{"text":" ","kind":"space"},{"text":"Full","kind":"aliasName"},{"text":" ","kind":"space"},{"text":"=","kind":"operator"},{"text":" ","kind":"space"},{"text":"{","kind":"punctuation"},{"text":"\n","kind":"lineBreak"},{"text":"    ","kind":"space"},{"text":"prop","kind":"propertyName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"string","kind":"keyword"},{"text":";","kind":"punctuation"},{"text":"\n","kind":"lineBreak"},{"text":"}","kind":"punctuation"}] |}Full|] = { prop: string; };|>

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/foo/types/types.ts",
      "kind": "type",
      "name": "type Full = {\n    prop: string;\n}",
      "textSpan": {
        "start": 12,
        "length": 4
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "Full",
          "kind": "aliasName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "{",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "    ",
          "kind": "space"
        },
        {
          "text": "prop",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        },
        {
          "text": ";",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "}",
          "kind": "punctuation"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 37
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 12,
          "length": 4
        },
        "fileName": "/foo/types/types.ts",
        "contextSpan": {
          "start": 0,
          "length": 37
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 62,
          "length": 4
        },
        "fileName": "/app.ts",
        "isWriteAccess": false,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 164,
          "length": 4
        },
        "fileName": "/app.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /foo/types/types.ts ===
// <|export type [|{| contextId: 0, defId: 0, isWriteAccess: true |}Full|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo./*FIND ALL REFS*/[|{| defId: 0 |}Full|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.[|{| defId: 0 |}Full|];

// === Definitions ===
// === /foo/types/types.ts ===
// <|export type [|{| contextId: 0, defId: 0, kind: "type", name: "type Full = {\n    prop: string;\n}", displayParts: [{"text":"type","kind":"keyword"},{"text":" ","kind":"space"},{"text":"Full","kind":"aliasName"},{"text":" ","kind":"space"},{"text":"=","kind":"operator"},{"text":" ","kind":"space"},{"text":"{","kind":"punctuation"},{"text":"\n","kind":"lineBreak"},{"text":"    ","kind":"space"},{"text":"prop","kind":"propertyName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"string","kind":"keyword"},{"text":";","kind":"punctuation"},{"text":"\n","kind":"lineBreak"},{"text":"}","kind":"punctuation"}] |}Full|] = { prop: string; };|>

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/foo/types/types.ts",
      "kind": "type",
      "name": "type Full = {\n    prop: string;\n}",
      "textSpan": {
        "start": 12,
        "length": 4
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "Full",
          "kind": "aliasName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "{",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "    ",
          "kind": "space"
        },
        {
          "text": "prop",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        },
        {
          "text": ";",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "}",
          "kind": "punctuation"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 37
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 12,
          "length": 4
        },
        "fileName": "/foo/types/types.ts",
        "contextSpan": {
          "start": 0,
          "length": 37
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 62,
          "length": 4
        },
        "fileName": "/app.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 164,
          "length": 4
        },
        "fileName": "/app.ts",
        "isWriteAccess": false
      }
    ]
  }
]

// === /foo/types/types.ts ===
// <|export type [|{| contextId: 0, defId: 0, isWriteAccess: true |}Full|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo.[|{| defId: 0 |}Full|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo./*FIND ALL REFS*/[|{| defId: 0 |}Full|];

// === Definitions ===
// === /foo/types/types.ts ===
// <|export type [|{| contextId: 0, defId: 0, kind: "type", name: "type Full = {\n    prop: string;\n}", displayParts: [{"text":"type","kind":"keyword"},{"text":" ","kind":"space"},{"text":"Full","kind":"aliasName"},{"text":" ","kind":"space"},{"text":"=","kind":"operator"},{"text":" ","kind":"space"},{"text":"{","kind":"punctuation"},{"text":"\n","kind":"lineBreak"},{"text":"    ","kind":"space"},{"text":"prop","kind":"propertyName"},{"text":":","kind":"punctuation"},{"text":" ","kind":"space"},{"text":"string","kind":"keyword"},{"text":";","kind":"punctuation"},{"text":"\n","kind":"lineBreak"},{"text":"}","kind":"punctuation"}] |}Full|] = { prop: string; };|>

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/foo/types/types.ts",
      "kind": "type",
      "name": "type Full = {\n    prop: string;\n}",
      "textSpan": {
        "start": 12,
        "length": 4
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "Full",
          "kind": "aliasName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "{",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "    ",
          "kind": "space"
        },
        {
          "text": "prop",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        },
        {
          "text": ";",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "}",
          "kind": "punctuation"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 37
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 12,
          "length": 4
        },
        "fileName": "/foo/types/types.ts",
        "contextSpan": {
          "start": 0,
          "length": 37
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 62,
          "length": 4
        },
        "fileName": "/app.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 164,
          "length": 4
        },
        "fileName": "/app.ts",
        "isWriteAccess": false
      }
    ]
  }
]

// === /foo/types/index.ts ===
// <|import * as /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}foo|] from './types';|>
// <|export { [|{| contextId: 1, defId: 0, isWriteAccess: true |}foo|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2, defId: 2, isWriteAccess: true |}foo|] } from './foo/types';|>
// export type fullType = [|{| defId: 2 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|{| defId: 1 |}foo|].Full;

// === Definitions ===
// === /foo/types/index.ts ===
// <|import * as /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, kind: "alias", name: "import foo", displayParts: [{"text":"import","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] from './types';|>
// <|export { [|{| contextId: 1, defId: 1, kind: "alias", name: "export foo", displayParts: [{"text":"export","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2, defId: 2, kind: "alias", name: "import foo", displayParts: [{"text":"import","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] } from './foo/types';|>
// export type fullType = foo.Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.Full;

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/foo/types/index.ts",
      "kind": "alias",
      "name": "import foo",
      "textSpan": {
        "start": 12,
        "length": 3
      },
      "displayParts": [
        {
          "text": "import",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 31
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 12,
          "length": 3
        },
        "fileName": "/foo/types/index.ts",
        "contextSpan": {
          "start": 0,
          "length": 31
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 41,
          "length": 3
        },
        "fileName": "/foo/types/index.ts",
        "contextSpan": {
          "start": 32,
          "length": 15
        },
        "isWriteAccess": true,
        "isDefinition": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/foo/types/index.ts",
      "kind": "alias",
      "name": "export foo",
      "textSpan": {
        "start": 41,
        "length": 3
      },
      "displayParts": [
        {
          "text": "export",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 32,
        "length": 15
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 160,
          "length": 3
        },
        "fileName": "/app.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/app.ts",
      "kind": "alias",
      "name": "import foo",
      "textSpan": {
        "start": 9,
        "length": 3
      },
      "displayParts": [
        {
          "text": "import",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 34
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 9,
          "length": 3
        },
        "fileName": "/app.ts",
        "contextSpan": {
          "start": 0,
          "length": 34
        },
        "isWriteAccess": true,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 58,
          "length": 3
        },
        "fileName": "/app.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 0, defId: 0, isWriteAccess: true |}foo|] from './types';|>
// <|export { /*FIND ALL REFS*/[|{| contextId: 1, defId: 0, isWriteAccess: true, isDefinition: true |}foo|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2, defId: 2, isWriteAccess: true |}foo|] } from './foo/types';|>
// export type fullType = [|{| defId: 2 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|{| defId: 1 |}foo|].Full;

// === Definitions ===
// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 0, defId: 0, kind: "alias", name: "import foo", displayParts: [{"text":"import","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] from './types';|>
// <|export { /*FIND ALL REFS*/[|{| contextId: 1, defId: 1, kind: "alias", name: "export foo", displayParts: [{"text":"export","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2, defId: 2, kind: "alias", name: "import foo", displayParts: [{"text":"import","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] } from './foo/types';|>
// export type fullType = foo.Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.Full;

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/foo/types/index.ts",
      "kind": "alias",
      "name": "import foo",
      "textSpan": {
        "start": 12,
        "length": 3
      },
      "displayParts": [
        {
          "text": "import",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 31
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 12,
          "length": 3
        },
        "fileName": "/foo/types/index.ts",
        "contextSpan": {
          "start": 0,
          "length": 31
        },
        "isWriteAccess": true,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 41,
          "length": 3
        },
        "fileName": "/foo/types/index.ts",
        "contextSpan": {
          "start": 32,
          "length": 15
        },
        "isWriteAccess": true,
        "isDefinition": true
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/foo/types/index.ts",
      "kind": "alias",
      "name": "export foo",
      "textSpan": {
        "start": 41,
        "length": 3
      },
      "displayParts": [
        {
          "text": "export",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 32,
        "length": 15
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 160,
          "length": 3
        },
        "fileName": "/app.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/app.ts",
      "kind": "alias",
      "name": "import foo",
      "textSpan": {
        "start": 9,
        "length": 3
      },
      "displayParts": [
        {
          "text": "import",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 34
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 9,
          "length": 3
        },
        "fileName": "/app.ts",
        "contextSpan": {
          "start": 0,
          "length": 34
        },
        "isWriteAccess": true,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 58,
          "length": 3
        },
        "fileName": "/app.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /app.ts ===
// <|import { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}foo|] } from './foo/types';|>
// export type fullType = [|{| defId: 0 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|{| defId: 2 |}foo|].Full;

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 1, defId: 1, isWriteAccess: true |}foo|] from './types';|>
// <|export { [|{| contextId: 2, defId: 1, isWriteAccess: true |}foo|] };|>

// === Definitions ===
// === /app.ts ===
// <|import { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, kind: "alias", name: "import foo", displayParts: [{"text":"import","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] } from './foo/types';|>
// export type fullType = foo.Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.Full;

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 1, defId: 1, kind: "alias", name: "import foo", displayParts: [{"text":"import","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] from './types';|>
// <|export { [|{| contextId: 2, defId: 2, kind: "alias", name: "export foo", displayParts: [{"text":"export","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] };|>

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/app.ts",
      "kind": "alias",
      "name": "import foo",
      "textSpan": {
        "start": 9,
        "length": 3
      },
      "displayParts": [
        {
          "text": "import",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 34
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 9,
          "length": 3
        },
        "fileName": "/app.ts",
        "contextSpan": {
          "start": 0,
          "length": 34
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 58,
          "length": 3
        },
        "fileName": "/app.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/foo/types/index.ts",
      "kind": "alias",
      "name": "import foo",
      "textSpan": {
        "start": 12,
        "length": 3
      },
      "displayParts": [
        {
          "text": "import",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 31
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 12,
          "length": 3
        },
        "fileName": "/foo/types/index.ts",
        "contextSpan": {
          "start": 0,
          "length": 31
        },
        "isWriteAccess": true,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 41,
          "length": 3
        },
        "fileName": "/foo/types/index.ts",
        "contextSpan": {
          "start": 32,
          "length": 15
        },
        "isWriteAccess": true,
        "isDefinition": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/foo/types/index.ts",
      "kind": "alias",
      "name": "export foo",
      "textSpan": {
        "start": 41,
        "length": 3
      },
      "displayParts": [
        {
          "text": "export",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 32,
        "length": 15
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 160,
          "length": 3
        },
        "fileName": "/app.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /app.ts ===
// <|import { [|{| contextId: 0, defId: 0, isWriteAccess: true |}foo|] } from './foo/types';|>
// export type fullType = /*FIND ALL REFS*/[|{| defId: 0 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|{| defId: 2 |}foo|].Full;

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 1, defId: 1, isWriteAccess: true |}foo|] from './types';|>
// <|export { [|{| contextId: 2, defId: 1, isWriteAccess: true |}foo|] };|>

// === Definitions ===
// === /app.ts ===
// <|import { [|{| contextId: 0, defId: 0, kind: "alias", name: "import foo", displayParts: [{"text":"import","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] } from './foo/types';|>
// export type fullType = /*FIND ALL REFS*/foo.Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.Full;

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 1, defId: 1, kind: "alias", name: "import foo", displayParts: [{"text":"import","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] from './types';|>
// <|export { [|{| contextId: 2, defId: 2, kind: "alias", name: "export foo", displayParts: [{"text":"export","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] };|>

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/app.ts",
      "kind": "alias",
      "name": "import foo",
      "textSpan": {
        "start": 9,
        "length": 3
      },
      "displayParts": [
        {
          "text": "import",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 34
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 9,
          "length": 3
        },
        "fileName": "/app.ts",
        "contextSpan": {
          "start": 0,
          "length": 34
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 58,
          "length": 3
        },
        "fileName": "/app.ts",
        "isWriteAccess": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/foo/types/index.ts",
      "kind": "alias",
      "name": "import foo",
      "textSpan": {
        "start": 12,
        "length": 3
      },
      "displayParts": [
        {
          "text": "import",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 31
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 12,
          "length": 3
        },
        "fileName": "/foo/types/index.ts",
        "contextSpan": {
          "start": 0,
          "length": 31
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 41,
          "length": 3
        },
        "fileName": "/foo/types/index.ts",
        "contextSpan": {
          "start": 32,
          "length": 15
        },
        "isWriteAccess": true
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/foo/types/index.ts",
      "kind": "alias",
      "name": "export foo",
      "textSpan": {
        "start": 41,
        "length": 3
      },
      "displayParts": [
        {
          "text": "export",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 32,
        "length": 15
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 160,
          "length": 3
        },
        "fileName": "/app.ts",
        "isWriteAccess": false
      }
    ]
  }
]

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 0, defId: 0, isWriteAccess: true |}foo|] from './types';|>
// <|export { [|{| contextId: 1, defId: 0, isWriteAccess: true |}foo|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2, defId: 2, isWriteAccess: true |}foo|] } from './foo/types';|>
// export type fullType = [|{| defId: 2 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types')./*FIND ALL REFS*/[|{| defId: 1 |}foo|].Full;

// === Definitions ===
// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 0, defId: 0, kind: "alias", name: "import foo", displayParts: [{"text":"import","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] from './types';|>
// <|export { [|{| contextId: 1, defId: 1, kind: "alias", name: "export foo", displayParts: [{"text":"export","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2, defId: 2, kind: "alias", name: "import foo", displayParts: [{"text":"import","kind":"keyword"},{"text":" ","kind":"space"},{"text":"foo","kind":"aliasName"}] |}foo|] } from './foo/types';|>
// export type fullType = foo.Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types')./*FIND ALL REFS*/foo.Full;

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/foo/types/index.ts",
      "kind": "alias",
      "name": "import foo",
      "textSpan": {
        "start": 12,
        "length": 3
      },
      "displayParts": [
        {
          "text": "import",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 31
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 12,
          "length": 3
        },
        "fileName": "/foo/types/index.ts",
        "contextSpan": {
          "start": 0,
          "length": 31
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 41,
          "length": 3
        },
        "fileName": "/foo/types/index.ts",
        "contextSpan": {
          "start": 32,
          "length": 15
        },
        "isWriteAccess": true
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/foo/types/index.ts",
      "kind": "alias",
      "name": "export foo",
      "textSpan": {
        "start": 41,
        "length": 3
      },
      "displayParts": [
        {
          "text": "export",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 32,
        "length": 15
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 160,
          "length": 3
        },
        "fileName": "/app.ts",
        "isWriteAccess": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/app.ts",
      "kind": "alias",
      "name": "import foo",
      "textSpan": {
        "start": 9,
        "length": 3
      },
      "displayParts": [
        {
          "text": "import",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "aliasName"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 34
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 9,
          "length": 3
        },
        "fileName": "/app.ts",
        "contextSpan": {
          "start": 0,
          "length": 34
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 58,
          "length": 3
        },
        "fileName": "/app.ts",
        "isWriteAccess": false
      }
    ]
  }
]

// === findRenameLocations ===
// === /foo/types/index.ts ===
// <|import * as /*RENAME*/[|{| contextId: 0 |}fooRENAME|] from './types';|>
// <|export { [|{| contextId: 1 |}fooRENAME|] as foo/*END SUFFIX*/ };|>

[
  {
    "textSpan": {
      "start": 12,
      "length": 3
    },
    "fileName": "/foo/types/index.ts",
    "contextSpan": {
      "start": 0,
      "length": 31
    }
  },
  {
    "textSpan": {
      "start": 41,
      "length": 3
    },
    "fileName": "/foo/types/index.ts",
    "contextSpan": {
      "start": 32,
      "length": 15
    },
    "suffixText": " as foo"
  }
]

// === /foo/types/index.ts ===
// import * as foo from './types';
// <|export { /*RENAME*//*START PREFIX*/foo as [|{| contextId: 0 |}fooRENAME|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 1 |}fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;

[
  {
    "textSpan": {
      "start": 41,
      "length": 3
    },
    "fileName": "/foo/types/index.ts",
    "contextSpan": {
      "start": 32,
      "length": 15
    },
    "prefixText": "foo as "
  },
  {
    "textSpan": {
      "start": 160,
      "length": 3
    },
    "fileName": "/app.ts"
  },
  {
    "textSpan": {
      "start": 9,
      "length": 3
    },
    "fileName": "/app.ts",
    "contextSpan": {
      "start": 0,
      "length": 34
    }
  },
  {
    "textSpan": {
      "start": 58,
      "length": 3
    },
    "fileName": "/app.ts"
  }
]

// === /app.ts ===
// <|import { /*RENAME*//*START PREFIX*/foo as [|{| contextId: 0 |}fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.Full;

[
  {
    "textSpan": {
      "start": 9,
      "length": 3
    },
    "fileName": "/app.ts",
    "contextSpan": {
      "start": 0,
      "length": 34
    },
    "prefixText": "foo as "
  },
  {
    "textSpan": {
      "start": 58,
      "length": 3
    },
    "fileName": "/app.ts"
  }
]

// === /app.ts ===
// <|import { /*START PREFIX*/foo as [|{| contextId: 0 |}fooRENAME|] } from './foo/types';|>
// export type fullType = /*RENAME*/[|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.Full;

[
  {
    "textSpan": {
      "start": 9,
      "length": 3
    },
    "fileName": "/app.ts",
    "contextSpan": {
      "start": 0,
      "length": 34
    },
    "prefixText": "foo as "
  },
  {
    "textSpan": {
      "start": 58,
      "length": 3
    },
    "fileName": "/app.ts"
  }
]

// === /foo/types/types.ts ===
// <|export type /*RENAME*/[|{| contextId: 0 |}FullRENAME|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo.[|FullRENAME|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.[|FullRENAME|];

[
  {
    "textSpan": {
      "start": 12,
      "length": 4
    },
    "fileName": "/foo/types/types.ts",
    "contextSpan": {
      "start": 0,
      "length": 37
    }
  },
  {
    "textSpan": {
      "start": 62,
      "length": 4
    },
    "fileName": "/app.ts"
  },
  {
    "textSpan": {
      "start": 164,
      "length": 4
    },
    "fileName": "/app.ts"
  }
]

// === /foo/types/types.ts ===
// <|export type [|{| contextId: 0 |}FullRENAME|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo./*RENAME*/[|FullRENAME|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.[|FullRENAME|];

[
  {
    "textSpan": {
      "start": 12,
      "length": 4
    },
    "fileName": "/foo/types/types.ts",
    "contextSpan": {
      "start": 0,
      "length": 37
    }
  },
  {
    "textSpan": {
      "start": 62,
      "length": 4
    },
    "fileName": "/app.ts"
  },
  {
    "textSpan": {
      "start": 164,
      "length": 4
    },
    "fileName": "/app.ts"
  }
]

// === /foo/types/types.ts ===
// <|export type [|{| contextId: 0 |}FullRENAME|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo.[|FullRENAME|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo./*RENAME*/[|FullRENAME|];

[
  {
    "textSpan": {
      "start": 12,
      "length": 4
    },
    "fileName": "/foo/types/types.ts",
    "contextSpan": {
      "start": 0,
      "length": 37
    }
  },
  {
    "textSpan": {
      "start": 62,
      "length": 4
    },
    "fileName": "/app.ts"
  },
  {
    "textSpan": {
      "start": 164,
      "length": 4
    },
    "fileName": "/app.ts"
  }
]

// === findRenameLocations ===
// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /app.ts ===
// <|import { /*RENAME*/[|{| contextId: 0 |}fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 1 |}fooRENAME|] from './types';|>
// <|export { [|{| contextId: 2 |}fooRENAME|] };|>

[
  {
    "textSpan": {
      "start": 9,
      "length": 3
    },
    "fileName": "/app.ts",
    "contextSpan": {
      "start": 0,
      "length": 34
    }
  },
  {
    "textSpan": {
      "start": 58,
      "length": 3
    },
    "fileName": "/app.ts"
  },
  {
    "textSpan": {
      "start": 12,
      "length": 3
    },
    "fileName": "/foo/types/index.ts",
    "contextSpan": {
      "start": 0,
      "length": 31
    }
  },
  {
    "textSpan": {
      "start": 41,
      "length": 3
    },
    "fileName": "/foo/types/index.ts",
    "contextSpan": {
      "start": 32,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 160,
      "length": 3
    },
    "fileName": "/app.ts"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /app.ts ===
// <|import { [|{| contextId: 0 |}fooRENAME|] } from './foo/types';|>
// export type fullType = /*RENAME*/[|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;

// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 1 |}fooRENAME|] from './types';|>
// <|export { [|{| contextId: 2 |}fooRENAME|] };|>

[
  {
    "textSpan": {
      "start": 9,
      "length": 3
    },
    "fileName": "/app.ts",
    "contextSpan": {
      "start": 0,
      "length": 34
    }
  },
  {
    "textSpan": {
      "start": 58,
      "length": 3
    },
    "fileName": "/app.ts"
  },
  {
    "textSpan": {
      "start": 12,
      "length": 3
    },
    "fileName": "/foo/types/index.ts",
    "contextSpan": {
      "start": 0,
      "length": 31
    }
  },
  {
    "textSpan": {
      "start": 41,
      "length": 3
    },
    "fileName": "/foo/types/index.ts",
    "contextSpan": {
      "start": 32,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 160,
      "length": 3
    },
    "fileName": "/app.ts"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 0 |}fooRENAME|] from './types';|>
// <|export { [|{| contextId: 1 |}fooRENAME|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2 |}fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types')./*RENAME*/[|fooRENAME|].Full;

[
  {
    "textSpan": {
      "start": 12,
      "length": 3
    },
    "fileName": "/foo/types/index.ts",
    "contextSpan": {
      "start": 0,
      "length": 31
    }
  },
  {
    "textSpan": {
      "start": 41,
      "length": 3
    },
    "fileName": "/foo/types/index.ts",
    "contextSpan": {
      "start": 32,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 160,
      "length": 3
    },
    "fileName": "/app.ts"
  },
  {
    "textSpan": {
      "start": 9,
      "length": 3
    },
    "fileName": "/app.ts",
    "contextSpan": {
      "start": 0,
      "length": 34
    }
  },
  {
    "textSpan": {
      "start": 58,
      "length": 3
    },
    "fileName": "/app.ts"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /foo/types/index.ts ===
// <|import * as /*RENAME*/[|{| contextId: 0 |}fooRENAME|] from './types';|>
// <|export { [|{| contextId: 1 |}fooRENAME|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2 |}fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;

[
  {
    "textSpan": {
      "start": 12,
      "length": 3
    },
    "fileName": "/foo/types/index.ts",
    "contextSpan": {
      "start": 0,
      "length": 31
    }
  },
  {
    "textSpan": {
      "start": 41,
      "length": 3
    },
    "fileName": "/foo/types/index.ts",
    "contextSpan": {
      "start": 32,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 160,
      "length": 3
    },
    "fileName": "/app.ts"
  },
  {
    "textSpan": {
      "start": 9,
      "length": 3
    },
    "fileName": "/app.ts",
    "contextSpan": {
      "start": 0,
      "length": 34
    }
  },
  {
    "textSpan": {
      "start": 58,
      "length": 3
    },
    "fileName": "/app.ts"
  }
]

// === RenameOptions ===
// providePrefixAndSuffixTextForRename: false
// === /foo/types/index.ts ===
// <|import * as [|{| contextId: 0 |}fooRENAME|] from './types';|>
// <|export { /*RENAME*/[|{| contextId: 1 |}fooRENAME|] };|>

// === /app.ts ===
// <|import { [|{| contextId: 2 |}fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;

[
  {
    "textSpan": {
      "start": 12,
      "length": 3
    },
    "fileName": "/foo/types/index.ts",
    "contextSpan": {
      "start": 0,
      "length": 31
    }
  },
  {
    "textSpan": {
      "start": 41,
      "length": 3
    },
    "fileName": "/foo/types/index.ts",
    "contextSpan": {
      "start": 32,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 160,
      "length": 3
    },
    "fileName": "/app.ts"
  },
  {
    "textSpan": {
      "start": 9,
      "length": 3
    },
    "fileName": "/app.ts",
    "contextSpan": {
      "start": 0,
      "length": 34
    }
  },
  {
    "textSpan": {
      "start": 58,
      "length": 3
    },
    "fileName": "/app.ts"
  }
]