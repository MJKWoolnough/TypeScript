// === /tests/cases/fourslash/goToDefinitionFunctionOverloadsInClass.ts ===
// class clsInOverload {
//     static fnOverload();
//     static /*GOTO DEF*/fnOverload(foo: string);
//     <|static [|{| contextId: 0, kind: "method", name: "fnOverload", containerName: "clsInOverload" |}fnOverload|](foo: any) { }|>
//     public fnOverload(): any;
//     public fnOverload(foo: string);
//     public fnOverload(foo: any) { return "foo" }
// 
//     constructor() { }
// }

// === TextSpan ===
// === /tests/cases/fourslash/goToDefinitionFunctionOverloadsInClass.ts ===
// class clsInOverload {
//     static fnOverload();
//     static /*GOTO DEF*/[|fnOverload|](foo: string);
//     static fnOverload(foo: any) { }
//     public fnOverload(): any;
//     public fnOverload(foo: string);
//     public fnOverload(foo: any) { return "foo" }
// 
//     constructor() { }
// }



// === /tests/cases/fourslash/goToDefinitionFunctionOverloadsInClass.ts ===
// class clsInOverload {
//     static fnOverload();
//     static fnOverload(foo: string);
//     static fnOverload(foo: any) { }
//     public /*GOTO DEF*/fnOverload(): any;
//     public fnOverload(foo: string);
//     <|public [|{| contextId: 0, kind: "method", name: "fnOverload", containerName: "clsInOverload" |}fnOverload|](foo: any) { return "foo" }|>
// 
//     constructor() { }
// }

// === TextSpan ===
// === /tests/cases/fourslash/goToDefinitionFunctionOverloadsInClass.ts ===
// class clsInOverload {
//     static fnOverload();
//     static fnOverload(foo: string);
//     static fnOverload(foo: any) { }
//     public /*GOTO DEF*/[|fnOverload|](): any;
//     public fnOverload(foo: string);
//     public fnOverload(foo: any) { return "foo" }
// 
//     constructor() { }
// }

