// === /tests/cases/fourslash/goToDefinitionFunctionOverloadsInClass.ts ===
// class clsInOverload {
//     static fnOverload();
//     static /*GOTO DEF*/fnOverload(foo: string);
//     <|static [|{| contextId: 0, kind: "method", name: "fnOverload", containerName: "clsInOverload" |}fnOverload|](foo: any) { }|>
//     public fnOverload(): any;
//     public fnOverload(foo: string);
//     public fnOverload(foo: any) { return "foo" }
// 
//     constructor() { }
// }

// === TextSpan ===
// === /tests/cases/fourslash/goToDefinitionFunctionOverloadsInClass.ts ===
// class clsInOverload {
//     static fnOverload();
//     static /*GOTO DEF*/[|fnOverload|](foo: string);
//     static fnOverload(foo: any) { }
//     public fnOverload(): any;
//     public fnOverload(foo: string);
//     public fnOverload(foo: any) { return "foo" }
// 
//     constructor() { }
// }

{
  "definitions": [
    {
      "fileName": "/tests/cases/fourslash/goToDefinitionFunctionOverloadsInClass.ts",
      "textSpan": {
        "start": 94,
        "length": 10
      },
      "kind": "method",
      "name": "fnOverload",
      "containerName": "clsInOverload",
      "contextSpan": {
        "start": 87,
        "length": 31
      },
      "isLocal": false,
      "isAmbient": false
    }
  ],
  "textSpan": {
    "start": 58,
    "length": 10
  }
}

// === /tests/cases/fourslash/goToDefinitionFunctionOverloadsInClass.ts ===
// class clsInOverload {
//     static fnOverload();
//     static fnOverload(foo: string);
//     static fnOverload(foo: any) { }
//     public /*GOTO DEF*/fnOverload(): any;
//     public fnOverload(foo: string);
//     <|public [|{| contextId: 0, kind: "method", name: "fnOverload", containerName: "clsInOverload" |}fnOverload|](foo: any) { return "foo" }|>
// 
//     constructor() { }
// }

// === TextSpan ===
// === /tests/cases/fourslash/goToDefinitionFunctionOverloadsInClass.ts ===
// class clsInOverload {
//     static fnOverload();
//     static fnOverload(foo: string);
//     static fnOverload(foo: any) { }
//     public /*GOTO DEF*/[|fnOverload|](): any;
//     public fnOverload(foo: string);
//     public fnOverload(foo: any) { return "foo" }
// 
//     constructor() { }
// }

{
  "definitions": [
    {
      "fileName": "/tests/cases/fourslash/goToDefinitionFunctionOverloadsInClass.ts",
      "textSpan": {
        "start": 196,
        "length": 10
      },
      "kind": "method",
      "name": "fnOverload",
      "containerName": "clsInOverload",
      "contextSpan": {
        "start": 189,
        "length": 44
      },
      "isLocal": false,
      "isAmbient": false
    }
  ],
  "textSpan": {
    "start": 130,
    "length": 10
  }
}