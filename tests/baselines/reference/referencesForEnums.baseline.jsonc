// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}value1|] = 1|>,
//     "value2" = [|{| defId: 0 |}value1|],
//     111 = 11
// }
// 
// E.[|{| defId: 0 |}value1|];
// E["value2"];
// E.value2;
// E[111];

// === Definitions ===
// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}value1|] = 1|>,
//     "value2" = value1,
//     111 = 11
// }
// 
// E.value1;
// E["value2"];
// E.value2;
// E[111];

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "enum member",
  "name": "(enum member) E.value1 = 1",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "enum member",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "enumName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "value1",
    "kind": "enumMemberName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "numericLiteral"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     value1 = 1,
//     /*FIND ALL REFS*/<|"[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}value2|]" = value1|>,
//     111 = 11
// }
// 
// E.value1;
// E["[|{| defId: 0 |}value2|]"];
// E.[|{| defId: 0 |}value2|];
// E[111];

// === Definitions ===
// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     value1 = 1,
//     /*FIND ALL REFS*/<|"[|{| contextId: 0, defId: 0 |}value2|]" = value1|>,
//     111 = 11
// }
// 
// E.value1;
// E["value2"];
// E.value2;
// E[111];

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "enum member",
  "name": "(enum member) E[\"value2\"] = 1",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "enum member",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "enumName"
   },
   {
    "text": "[",
    "kind": "punctuation"
   },
   {
    "text": "\"value2\"",
    "kind": "enumMemberName"
   },
   {
    "text": "]",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "numericLiteral"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     value1 = 1,
//     <|"/*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}value2|]" = value1|>,
//     111 = 11
// }
// 
// E.value1;
// E["[|{| defId: 0 |}value2|]"];
// E.[|{| defId: 0 |}value2|];
// E[111];

// === Definitions ===
// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     value1 = 1,
//     <|"/*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}value2|]" = value1|>,
//     111 = 11
// }
// 
// E.value1;
// E["value2"];
// E.value2;
// E[111];

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "enum member",
  "name": "(enum member) E[\"value2\"] = 1",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "enum member",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "enumName"
   },
   {
    "text": "[",
    "kind": "punctuation"
   },
   {
    "text": "\"value2\"",
    "kind": "enumMemberName"
   },
   {
    "text": "]",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "numericLiteral"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     <|[|{| contextId: 0, defId: 0, isWriteAccess: true |}value1|] = 1|>,
//     "value2" = /*FIND ALL REFS*/[|{| defId: 0 |}value1|],
//     111 = 11
// }
// 
// E.[|{| defId: 0 |}value1|];
// E["value2"];
// E.value2;
// E[111];

// === Definitions ===
// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     <|[|{| contextId: 0, defId: 0 |}value1|] = 1|>,
//     "value2" = /*FIND ALL REFS*/value1,
//     111 = 11
// }
// 
// E.value1;
// E["value2"];
// E.value2;
// E[111];

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "enum member",
  "name": "(enum member) E.value1 = 1",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "enum member",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "enumName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "value1",
    "kind": "enumMemberName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "numericLiteral"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     value1 = 1,
//     "value2" = value1,
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}111|] = 11|>
// }
// 
// E.value1;
// E["value2"];
// E.value2;
// E[[|{| defId: 0 |}111|]];

// === Definitions ===
// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     value1 = 1,
//     "value2" = value1,
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}111|] = 11|>
// }
// 
// E.value1;
// E["value2"];
// E.value2;
// E[111];

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "enum member",
  "name": "(enum member) E[111] = 11",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "enum member",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "enumName"
   },
   {
    "text": "[",
    "kind": "punctuation"
   },
   {
    "text": "111",
    "kind": "stringLiteral"
   },
   {
    "text": "]",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "11",
    "kind": "numericLiteral"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     <|[|{| contextId: 0, defId: 0, isWriteAccess: true |}value1|] = 1|>,
//     "value2" = [|{| defId: 0 |}value1|],
//     111 = 11
// }
// 
// E./*FIND ALL REFS*/[|{| defId: 0 |}value1|];
// E["value2"];
// E.value2;
// E[111];

// === Definitions ===
// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     <|[|{| contextId: 0, defId: 0 |}value1|] = 1|>,
//     "value2" = value1,
//     111 = 11
// }
// 
// E./*FIND ALL REFS*/value1;
// E["value2"];
// E.value2;
// E[111];

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "enum member",
  "name": "(enum member) E.value1 = 1",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "enum member",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "enumName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "value1",
    "kind": "enumMemberName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "numericLiteral"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     value1 = 1,
//     <|"[|{| contextId: 0, defId: 0, isWriteAccess: true |}value2|]" = value1|>,
//     111 = 11
// }
// 
// E.value1;
// E["/*FIND ALL REFS*/[|{| defId: 0 |}value2|]"];
// E.[|{| defId: 0 |}value2|];
// E[111];

// === Definitions ===
// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     value1 = 1,
//     <|"[|{| contextId: 0, defId: 0 |}value2|]" = value1|>,
//     111 = 11
// }
// 
// E.value1;
// E["/*FIND ALL REFS*/value2"];
// E.value2;
// E[111];

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "enum member",
  "name": "(enum member) E[\"value2\"] = 1",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "enum member",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "enumName"
   },
   {
    "text": "[",
    "kind": "punctuation"
   },
   {
    "text": "\"value2\"",
    "kind": "enumMemberName"
   },
   {
    "text": "]",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "numericLiteral"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     value1 = 1,
//     <|"[|{| contextId: 0, defId: 0, isWriteAccess: true |}value2|]" = value1|>,
//     111 = 11
// }
// 
// E.value1;
// E["[|{| defId: 0 |}value2|]"];
// E./*FIND ALL REFS*/[|{| defId: 0 |}value2|];
// E[111];

// === Definitions ===
// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     value1 = 1,
//     <|"[|{| contextId: 0, defId: 0 |}value2|]" = value1|>,
//     111 = 11
// }
// 
// E.value1;
// E["value2"];
// E./*FIND ALL REFS*/value2;
// E[111];

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "enum member",
  "name": "(enum member) E[\"value2\"] = 1",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "enum member",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "enumName"
   },
   {
    "text": "[",
    "kind": "punctuation"
   },
   {
    "text": "\"value2\"",
    "kind": "enumMemberName"
   },
   {
    "text": "]",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "numericLiteral"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     value1 = 1,
//     "value2" = value1,
//     <|[|{| contextId: 0, defId: 0, isWriteAccess: true |}111|] = 11|>
// }
// 
// E.value1;
// E["value2"];
// E.value2;
// E[/*FIND ALL REFS*/[|{| defId: 0 |}111|]];

// === Definitions ===
// === /tests/cases/fourslash/referencesForEnums.ts ===
// enum E {
//     value1 = 1,
//     "value2" = value1,
//     <|[|{| contextId: 0, defId: 0 |}111|] = 11|>
// }
// 
// E.value1;
// E["value2"];
// E.value2;
// E[/*FIND ALL REFS*/111];

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "enum member",
  "name": "(enum member) E[111] = 11",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "enum member",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "enumName"
   },
   {
    "text": "[",
    "kind": "punctuation"
   },
   {
    "text": "111",
    "kind": "stringLiteral"
   },
   {
    "text": "]",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "11",
    "kind": "numericLiteral"
   }
  ]
 }
]