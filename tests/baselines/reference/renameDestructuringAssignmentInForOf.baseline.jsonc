// === /tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts ===
// interface I {
//     /*RENAME*/<|[|{| contextId: 0 |}property1RENAME|]: number;|>
//     property2: string;
// }
// var elems: I[];
// 
// var property1: number, p2: number;
// for (<|{ [|{| contextId: 1 |}property1RENAME|]: property1/*END SUFFIX*/ } of elems|>) {
//     property1++;
// }
// for (<|{ [|{| contextId: 2 |}property1RENAME|]: p2 } of elems|>) {
// }

[
  {
    "textSpan": {
      "start": 18,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts",
    "contextSpan": {
      "start": 18,
      "length": 18
    }
  },
  {
    "textSpan": {
      "start": 121,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts",
    "contextSpan": {
      "start": 119,
      "length": 22
    },
    "suffixText": ": property1"
  },
  {
    "textSpan": {
      "start": 171,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts",
    "contextSpan": {
      "start": 169,
      "length": 26
    }
  }
]

// === /tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts ===
// interface I {
//     <|[|{| contextId: 0 |}property1RENAME|]: number;|>
//     property2: string;
// }
// var elems: I[];
// 
// var property1: number, p2: number;
// for (<|{ [|{| contextId: 1 |}property1RENAME|]: property1/*END SUFFIX*/ } of elems|>) {
//     property1++;
// }
// for (<|{ /*RENAME*/[|{| contextId: 2 |}property1RENAME|]: p2 } of elems|>) {
// }

[
  {
    "textSpan": {
      "start": 18,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts",
    "contextSpan": {
      "start": 18,
      "length": 18
    }
  },
  {
    "textSpan": {
      "start": 121,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts",
    "contextSpan": {
      "start": 119,
      "length": 22
    },
    "suffixText": ": property1"
  },
  {
    "textSpan": {
      "start": 171,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts",
    "contextSpan": {
      "start": 169,
      "length": 26
    }
  }
]

// === /tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts ===
// interface I {
//     property1: number;
//     property2: string;
// }
// var elems: I[];
// 
// var /*RENAME*/<|[|{| contextId: 0 |}property1RENAME|]: number|>, p2: number;
// for (<|{ /*START PREFIX*/property1: [|{| contextId: 1 |}property1RENAME|] } of elems|>) {
//     [|property1RENAME|]++;
// }
// for ({ property1: p2 } of elems) {
// }

[
  {
    "textSpan": {
      "start": 83,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts",
    "contextSpan": {
      "start": 83,
      "length": 17
    }
  },
  {
    "textSpan": {
      "start": 121,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts",
    "contextSpan": {
      "start": 119,
      "length": 22
    },
    "prefixText": "property1: "
  },
  {
    "textSpan": {
      "start": 149,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts"
  }
]

// === /tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts ===
// interface I {
//     property1: number;
//     property2: string;
// }
// var elems: I[];
// 
// var <|[|{| contextId: 0 |}property1RENAME|]: number|>, p2: number;
// for (<|{ /*START PREFIX*/property1: /*RENAME*/[|{| contextId: 1 |}property1RENAME|] } of elems|>) {
//     [|property1RENAME|]++;
// }
// for ({ property1: p2 } of elems) {
// }

[
  {
    "textSpan": {
      "start": 83,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts",
    "contextSpan": {
      "start": 83,
      "length": 17
    }
  },
  {
    "textSpan": {
      "start": 121,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts",
    "contextSpan": {
      "start": 119,
      "length": 22
    },
    "prefixText": "property1: "
  },
  {
    "textSpan": {
      "start": 149,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts"
  }
]

// === /tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts ===
// interface I {
//     property1: number;
//     property2: string;
// }
// var elems: I[];
// 
// var <|[|{| contextId: 0 |}property1RENAME|]: number|>, p2: number;
// for (<|{ /*START PREFIX*/property1: [|{| contextId: 1 |}property1RENAME|] } of elems|>) {
//     /*RENAME*/[|property1RENAME|]++;
// }
// for ({ property1: p2 } of elems) {
// }

[
  {
    "textSpan": {
      "start": 83,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts",
    "contextSpan": {
      "start": 83,
      "length": 17
    }
  },
  {
    "textSpan": {
      "start": 121,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts",
    "contextSpan": {
      "start": 119,
      "length": 22
    },
    "prefixText": "property1: "
  },
  {
    "textSpan": {
      "start": 149,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentInForOf.ts"
  }
]