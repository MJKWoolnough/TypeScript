// === findAllReferences ===
// === /a.ts ===
// <|export const /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}x|] = 0;|>

// === /c.ts ===
// export { x } from "./b";
// <|import { [|{| contextId: 1, defId: 1, isWriteAccess: true |}x|] } from "./a";|>
// [|{| defId: 1 |}x|];

// === Definitions ===
// === /a.ts ===
// <|export const /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}x|] = 0;|>

// === /c.ts ===
// export { x } from "./b";
// <|import { [|{| contextId: 1, defId: 1 |}x|] } from "./a";|>
// x;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const x: 0",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const x: 0\nimport x",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   }
  ]
 }
]

// === /b.ts ===
// <|export const /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}x|] = 0;|>

// === /c.ts ===
// <|export { [|{| contextId: 1, defId: 1, isWriteAccess: true |}x|] } from "./b";|>
// import { x } from "./a";
// x;

// === /d.ts ===
// <|import { [|{| contextId: 2, defId: 2, isWriteAccess: true |}x|] } from "./c";|>

// === Definitions ===
// === /b.ts ===
// <|export const /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}x|] = 0;|>

// === /c.ts ===
// <|export { [|{| contextId: 1, defId: 1 |}x|] } from "./b";|>
// import { x } from "./a";
// x;

// === /d.ts ===
// <|import { [|{| contextId: 2, defId: 2 |}x|] } from "./c";|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const x: 0",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const x: 0\nexport x",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "export",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const x: 0\nimport x",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   }
  ]
 }
]

// === /c.ts ===
// <|export { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}x|] } from "./b";|>
// import { x } from "./a";
// x;

// === /d.ts ===
// <|import { [|{| contextId: 1, defId: 1, isWriteAccess: true |}x|] } from "./c";|>

// === /b.ts ===
// <|export const [|{| contextId: 2, defId: 2, isWriteAccess: true |}x|] = 0;|>

// === Definitions ===
// === /c.ts ===
// <|export { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}x|] } from "./b";|>
// import { x } from "./a";
// x;

// === /d.ts ===
// <|import { [|{| contextId: 1, defId: 1 |}x|] } from "./c";|>

// === /b.ts ===
// <|export const [|{| contextId: 2, defId: 2 |}x|] = 0;|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const x: 0\nexport x",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "export",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const x: 0\nimport x",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const x: 0",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   }
  ]
 }
]

// === /c.ts ===
// export { x } from "./b";
// <|import { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}x|] } from "./a";|>
// [|{| defId: 0 |}x|];

// === /a.ts ===
// <|export const [|{| contextId: 1, defId: 1, isWriteAccess: true |}x|] = 0;|>

// === Definitions ===
// === /c.ts ===
// export { x } from "./b";
// <|import { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}x|] } from "./a";|>
// x;

// === /a.ts ===
// <|export const [|{| contextId: 1, defId: 1 |}x|] = 0;|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const x: 0\nimport x",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const x: 0",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   }
  ]
 }
]

// === /c.ts ===
// export { x } from "./b";
// <|import { [|{| contextId: 0, defId: 0, isWriteAccess: true |}x|] } from "./a";|>
// /*FIND ALL REFS*/[|{| defId: 0 |}x|];

// === /a.ts ===
// <|export const [|{| contextId: 1, defId: 1, isWriteAccess: true |}x|] = 0;|>

// === Definitions ===
// === /c.ts ===
// export { x } from "./b";
// <|import { [|{| contextId: 0, defId: 0 |}x|] } from "./a";|>
// /*FIND ALL REFS*/x;

// === /a.ts ===
// <|export const [|{| contextId: 1, defId: 1 |}x|] = 0;|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const x: 0\nimport x",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const x: 0",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   }
  ]
 }
]

// === /d.ts ===
// <|import { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}x|] } from "./c";|>

// === /c.ts ===
// <|export { [|{| contextId: 1, defId: 1, isWriteAccess: true |}x|] } from "./b";|>
// import { x } from "./a";
// x;

// === /b.ts ===
// <|export const [|{| contextId: 2, defId: 2, isWriteAccess: true |}x|] = 0;|>

// === Definitions ===
// === /d.ts ===
// <|import { /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}x|] } from "./c";|>

// === /c.ts ===
// <|export { [|{| contextId: 1, defId: 1 |}x|] } from "./b";|>
// import { x } from "./a";
// x;

// === /b.ts ===
// <|export const [|{| contextId: 2, defId: 2 |}x|] = 0;|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const x: 0\nimport x",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) const x: 0\nexport x",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "export",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const x: 0",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   }
  ]
 }
]

// === findRenameLocations ===
// === /a.ts ===
// <|export const /*RENAME*/[|{| contextId: 0 |}xRENAME|] = 0;|>

// === /c.ts ===
// export { x } from "./b";
// <|import { [|{| contextId: 1 |}xRENAME|] } from "./a";|>
// [|xRENAME|];



// === /c.ts ===
// export { x } from "./b";
// <|import { /*START PREFIX*/x as /*RENAME*/[|{| contextId: 0 |}xRENAME|] } from "./a";|>
// [|xRENAME|];



// === /c.ts ===
// export { x } from "./b";
// <|import { /*START PREFIX*/x as [|{| contextId: 0 |}xRENAME|] } from "./a";|>
// /*RENAME*/[|xRENAME|];



// === /b.ts ===
// <|export const /*RENAME*/[|{| contextId: 0 |}xRENAME|] = 0;|>

// === /c.ts ===
// <|export { [|{| contextId: 1 |}xRENAME|] as x/*END SUFFIX*/ } from "./b";|>
// import { x } from "./a";
// x;



// === /c.ts ===
// <|export { /*START PREFIX*/x as /*RENAME*/[|{| contextId: 0 |}xRENAME|] } from "./b";|>
// import { x } from "./a";
// x;

// === /d.ts ===
// <|import { [|{| contextId: 1 |}xRENAME|] } from "./c";|>



// === /d.ts ===
// <|import { /*START PREFIX*/x as /*RENAME*/[|{| contextId: 0 |}xRENAME|] } from "./c";|>

