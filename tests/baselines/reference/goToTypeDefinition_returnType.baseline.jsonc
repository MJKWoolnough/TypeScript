// === /tests/cases/fourslash/goToTypeDefinition_returnType.ts ===
// <|interface [|{| contextId: 0, kind: "interface", name: "I" |}I|] { x: number; }|>
// interface J { y: number; }
// 
// function f0(): I { return { x: 0 }; }
// 
// type T = (i: I) => I;
// const f1: T = i => ({ x: i.x + 1 });
// 
// const f2 = (i: I): I => ({ x: i.x + 1 });
// 
// const f3 = (i: I) => ({ x: i.x + 1 });
// 
// const f4 = (i: I) => i;
// 
// const f5 = (i: I): I | J => ({ x: i.x + 1 });
// 
// const f6 = (i: I, j: J, b: boolean) => b ? i : j;
// 
// const f7 = (i: I) => {};
// 
// function f8(i: I): I;
// function f8(j: J): J;
// function f8(ij: any): any { return ij; }
// 
// /*GOTO TYPE*/f0();
// f1();
// f2();
// f3();
// f4();
// f5();
// f6();
// f7();
// f8();

[
  {
    "fileName": "/tests/cases/fourslash/goToTypeDefinition_returnType.ts",
    "textSpan": {
      "start": 10,
      "length": 1
    },
    "kind": "interface",
    "name": "I",
    "containerName": "",
    "contextSpan": {
      "start": 0,
      "length": 26
    },
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  }
]

// === /tests/cases/fourslash/goToTypeDefinition_returnType.ts ===
// interface I { x: number; }
// interface J { y: number; }
// 
// function f0(): I { return { x: 0 }; }
// 
// type T = [|{| name: "__type" |}(i: I) => I|];
// const f1: T = i => ({ x: i.x + 1 });
// 
// const f2 = (i: I): I => ({ x: i.x + 1 });
// 
// const f3 = (i: I) => ({ x: i.x + 1 });
// 
// const f4 = (i: I) => i;
// 
// const f5 = (i: I): I | J => ({ x: i.x + 1 });
// 
// const f6 = (i: I, j: J, b: boolean) => b ? i : j;
// 
// const f7 = (i: I) => {};
// 
// function f8(i: I): I;
// function f8(j: J): J;
// function f8(ij: any): any { return ij; }
// 
// f0();
// /*GOTO TYPE*/f1();
// f2();
// f3();
// f4();
// f5();
// f6();
// f7();
// f8();

[
  {
    "fileName": "/tests/cases/fourslash/goToTypeDefinition_returnType.ts",
    "textSpan": {
      "start": 103,
      "length": 11
    },
    "kind": "",
    "name": "__type",
    "containerName": "",
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  }
]

// === /tests/cases/fourslash/goToTypeDefinition_returnType.ts ===
// <|interface [|{| contextId: 0, kind: "interface", name: "I" |}I|] { x: number; }|>
// interface J { y: number; }
// 
// function f0(): I { return { x: 0 }; }
// 
// type T = (i: I) => I;
// const f1: T = i => ({ x: i.x + 1 });
// 
// const f2 = (i: I): I => ({ x: i.x + 1 });
// 
// const f3 = (i: I) => ({ x: i.x + 1 });
// 
// const f4 = (i: I) => i;
// 
// const f5 = (i: I): I | J => ({ x: i.x + 1 });
// 
// const f6 = (i: I, j: J, b: boolean) => b ? i : j;
// 
// const f7 = (i: I) => {};
// 
// function f8(i: I): I;
// function f8(j: J): J;
// function f8(ij: any): any { return ij; }
// 
// f0();
// f1();
// /*GOTO TYPE*/f2();
// f3();
// f4();
// f5();
// f6();
// f7();
// f8();

[
  {
    "fileName": "/tests/cases/fourslash/goToTypeDefinition_returnType.ts",
    "textSpan": {
      "start": 10,
      "length": 1
    },
    "kind": "interface",
    "name": "I",
    "containerName": "",
    "contextSpan": {
      "start": 0,
      "length": 26
    },
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  }
]

// === /tests/cases/fourslash/goToTypeDefinition_returnType.ts ===
// interface I { x: number; }
// interface J { y: number; }
// 
// function f0(): I { return { x: 0 }; }
// 
// type T = (i: I) => I;
// const f1: T = i => ({ x: i.x + 1 });
// 
// const f2 = (i: I): I => ({ x: i.x + 1 });
// 
// const f3 = (i: I) => ([|{| name: "__object", isLocal: true |}{ x: i.x + 1 }|]);
// 
// const f4 = (i: I) => i;
// 
// const f5 = (i: I): I | J => ({ x: i.x + 1 });
// 
// const f6 = (i: I, j: J, b: boolean) => b ? i : j;
// 
// const f7 = (i: I) => {};
// 
// function f8(i: I): I;
// function f8(j: J): J;
// function f8(ij: any): any { return ij; }
// 
// f0();
// f1();
// f2();
// /*GOTO TYPE*/f3();
// f4();
// f5();
// f6();
// f7();
// f8();

[
  {
    "fileName": "/tests/cases/fourslash/goToTypeDefinition_returnType.ts",
    "textSpan": {
      "start": 219,
      "length": 14
    },
    "kind": "",
    "name": "__object",
    "containerName": "",
    "isLocal": true,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  }
]

// === /tests/cases/fourslash/goToTypeDefinition_returnType.ts ===
// <|interface [|{| contextId: 0, kind: "interface", name: "I" |}I|] { x: number; }|>
// interface J { y: number; }
// 
// function f0(): I { return { x: 0 }; }
// 
// type T = (i: I) => I;
// const f1: T = i => ({ x: i.x + 1 });
// 
// const f2 = (i: I): I => ({ x: i.x + 1 });
// 
// const f3 = (i: I) => ({ x: i.x + 1 });
// 
// const f4 = (i: I) => i;
// 
// const f5 = (i: I): I | J => ({ x: i.x + 1 });
// 
// const f6 = (i: I, j: J, b: boolean) => b ? i : j;
// 
// const f7 = (i: I) => {};
// 
// function f8(i: I): I;
// function f8(j: J): J;
// function f8(ij: any): any { return ij; }
// 
// f0();
// f1();
// f2();
// f3();
// /*GOTO TYPE*/f4();
// f5();
// f6();
// f7();
// f8();

[
  {
    "fileName": "/tests/cases/fourslash/goToTypeDefinition_returnType.ts",
    "textSpan": {
      "start": 10,
      "length": 1
    },
    "kind": "interface",
    "name": "I",
    "containerName": "",
    "contextSpan": {
      "start": 0,
      "length": 26
    },
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  }
]

// === /tests/cases/fourslash/goToTypeDefinition_returnType.ts ===
// <|interface [|{| contextId: 0, kind: "interface", name: "I" |}I|] { x: number; }|>
// <|interface [|{| contextId: 1, kind: "interface", name: "J" |}J|] { y: number; }|>
// 
// function f0(): I { return { x: 0 }; }
// 
// type T = (i: I) => I;
// const f1: T = i => ({ x: i.x + 1 });
// 
// const f2 = (i: I): I => ({ x: i.x + 1 });
// 
// const f3 = (i: I) => ({ x: i.x + 1 });
// 
// const f4 = (i: I) => i;
// 
// const f5 = (i: I): I | J => ({ x: i.x + 1 });
// 
// const f6 = (i: I, j: J, b: boolean) => b ? i : j;
// 
// const f7 = (i: I) => {};
// 
// function f8(i: I): I;
// function f8(j: J): J;
// function f8(ij: any): any { return ij; }
// 
// f0();
// f1();
// f2();
// f3();
// f4();
// /*GOTO TYPE*/f5();
// f6();
// f7();
// f8();

[
  {
    "fileName": "/tests/cases/fourslash/goToTypeDefinition_returnType.ts",
    "textSpan": {
      "start": 10,
      "length": 1
    },
    "kind": "interface",
    "name": "I",
    "containerName": "",
    "contextSpan": {
      "start": 0,
      "length": 26
    },
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  },
  {
    "fileName": "/tests/cases/fourslash/goToTypeDefinition_returnType.ts",
    "textSpan": {
      "start": 37,
      "length": 1
    },
    "kind": "interface",
    "name": "J",
    "containerName": "",
    "contextSpan": {
      "start": 27,
      "length": 26
    },
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  }
]

// === /tests/cases/fourslash/goToTypeDefinition_returnType.ts ===
// <|interface [|{| contextId: 0, kind: "interface", name: "I" |}I|] { x: number; }|>
// <|interface [|{| contextId: 1, kind: "interface", name: "J" |}J|] { y: number; }|>
// 
// function f0(): I { return { x: 0 }; }
// 
// type T = (i: I) => I;
// const f1: T = i => ({ x: i.x + 1 });
// 
// const f2 = (i: I): I => ({ x: i.x + 1 });
// 
// const f3 = (i: I) => ({ x: i.x + 1 });
// 
// const f4 = (i: I) => i;
// 
// const f5 = (i: I): I | J => ({ x: i.x + 1 });
// 
// const f6 = (i: I, j: J, b: boolean) => b ? i : j;
// 
// const f7 = (i: I) => {};
// 
// function f8(i: I): I;
// function f8(j: J): J;
// function f8(ij: any): any { return ij; }
// 
// f0();
// f1();
// f2();
// f3();
// f4();
// f5();
// /*GOTO TYPE*/f6();
// f7();
// f8();

[
  {
    "fileName": "/tests/cases/fourslash/goToTypeDefinition_returnType.ts",
    "textSpan": {
      "start": 10,
      "length": 1
    },
    "kind": "interface",
    "name": "I",
    "containerName": "",
    "contextSpan": {
      "start": 0,
      "length": 26
    },
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  },
  {
    "fileName": "/tests/cases/fourslash/goToTypeDefinition_returnType.ts",
    "textSpan": {
      "start": 37,
      "length": 1
    },
    "kind": "interface",
    "name": "J",
    "containerName": "",
    "contextSpan": {
      "start": 27,
      "length": 26
    },
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  }
]

// === /tests/cases/fourslash/goToTypeDefinition_returnType.ts ===
// interface I { x: number; }
// interface J { y: number; }
// 
// function f0(): I { return { x: 0 }; }
// 
// type T = (i: I) => I;
// const f1: T = i => ({ x: i.x + 1 });
// 
// const f2 = (i: I): I => ({ x: i.x + 1 });
// 
// const f3 = (i: I) => ({ x: i.x + 1 });
// 
// const f4 = (i: I) => i;
// 
// const f5 = (i: I): I | J => ({ x: i.x + 1 });
// 
// const f6 = (i: I, j: J, b: boolean) => b ? i : j;
// 
// const [|{| contextId: 0, kind: "function", name: "f7" |}f7|] = <|(i: I) => {}|>;
// 
// function f8(i: I): I;
// function f8(j: J): J;
// function f8(ij: any): any { return ij; }
// 
// f0();
// f1();
// f2();
// f3();
// f4();
// f5();
// f6();
// /*GOTO TYPE*/f7();
// f8();

[
  {
    "fileName": "/tests/cases/fourslash/goToTypeDefinition_returnType.ts",
    "textSpan": {
      "start": 366,
      "length": 2
    },
    "kind": "function",
    "name": "f7",
    "containerName": "",
    "contextSpan": {
      "start": 371,
      "length": 12
    },
    "isLocal": false,
    "isAmbient": false
  }
]

// === /tests/cases/fourslash/goToTypeDefinition_returnType.ts ===
// interface I { x: number; }
// interface J { y: number; }
// 
// function f0(): I { return { x: 0 }; }
// 
// type T = (i: I) => I;
// const f1: T = i => ({ x: i.x + 1 });
// 
// const f2 = (i: I): I => ({ x: i.x + 1 });
// 
// const f3 = (i: I) => ({ x: i.x + 1 });
// 
// const f4 = (i: I) => i;
// 
// const f5 = (i: I): I | J => ({ x: i.x + 1 });
// 
// const f6 = (i: I, j: J, b: boolean) => b ? i : j;
// 
// const f7 = (i: I) => {};
// 
// function f8(i: I): I;
// function f8(j: J): J;
// <|function [|{| contextId: 0, kind: "function", name: "f8" |}f8|](ij: any): any { return ij; }|>
// 
// f0();
// f1();
// f2();
// f3();
// f4();
// f5();
// f6();
// f7();
// /*GOTO TYPE*/f8();

[
  {
    "fileName": "/tests/cases/fourslash/goToTypeDefinition_returnType.ts",
    "textSpan": {
      "start": 439,
      "length": 2
    },
    "kind": "function",
    "name": "f8",
    "containerName": "",
    "contextSpan": {
      "start": 430,
      "length": 40
    },
    "isLocal": false,
    "isAmbient": false
  }
]