// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// /*RENAME*/<|class [|{| contextId: 0 |}C1RENAME|] extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }|>
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;



// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// <|class [|{| contextId: 0 |}BaseRENAME|] {}|>
// interface Implemented1 {}
// class C1 /*RENAME*/extends [|BaseRENAME|] implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends [|BaseRENAME|] { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;



// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// class Base {}
// <|interface [|{| contextId: 0 |}Implemented1RENAME|] {}|>
// class C1 extends Base /*RENAME*/implements [|Implemented1RENAME|] {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;



// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     /*RENAME*/<|get [|{| contextId: 0 |}eRENAME|]() { return 1; }|>
//     <|set [|{| contextId: 1 |}eRENAME|](v) {}|>
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;



// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     <|get [|{| contextId: 0 |}eRENAME|]() { return 1; }|>
//     /*RENAME*/<|set [|{| contextId: 1 |}eRENAME|](v) {}|>
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;



// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// /*RENAME*/<|interface [|{| contextId: 0 |}I1RENAME|] extends Base { }|>
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;



// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// <|class [|{| contextId: 0 |}BaseRENAME|] {}|>
// interface Implemented1 {}
// class C1 extends [|BaseRENAME|] implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 /*RENAME*/extends [|BaseRENAME|] { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;



// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// /*RENAME*/<|type [|{| contextId: 0 |}TRENAME|] = { }|>
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;



// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// /*RENAME*/<|enum [|{| contextId: 0 |}ERENAME|] { }|>
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;



// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// /*RENAME*/<|namespace [|{| contextId: 0 |}NRENAME|] { }|>
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;



// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// /*RENAME*/<|module [|{| contextId: 0 |}MRENAME|] { }|>
// function fn() {}
// var x;
// let y;
// const z = 1;



// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// /*RENAME*/<|function [|{| contextId: 0 |}fnRENAME|]() {}|>
// var x;
// let y;
// const z = 1;



// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// /*RENAME*/<|var [|{| contextId: 0 |}xRENAME|];|>
// let y;
// const z = 1;



// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// /*RENAME*/<|let [|{| contextId: 0 |}yRENAME|];|>
// const z = 1;



// === /tests/cases/fourslash/renameDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// /*RENAME*/<|const [|{| contextId: 0 |}zRENAME|] = 1;|>

