// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// /*FIND ALL REFS*/<|interface [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}Foo|] {
// }|>
// 
// module Foo {
//     export interface Bar { }
// }
// 
// function Foo(): void {
// }
// 
// var f1: Foo.Bar;
// var f2: [|{| defId: 0 |}Foo|];
// Foo.bind(this);

// === Definitions ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// /*FIND ALL REFS*/interface Foo {
// }
// 
// module Foo {
//     export interface Bar { }
// }
// 
// <|function [|{| contextId: 0, defId: 0 |}Foo|](): void {
// }|>
// 
// var f1: Foo.Bar;
// var f2: Foo;
// Foo.bind(this);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "interface Foo\nnamespace Foo",
  "displayParts": [
   {
    "text": "interface",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// <|interface /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}Foo|] {
// }|>
// 
// module Foo {
//     export interface Bar { }
// }
// 
// function Foo(): void {
// }
// 
// var f1: Foo.Bar;
// var f2: [|{| defId: 0 |}Foo|];
// Foo.bind(this);

// === Definitions ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface /*FIND ALL REFS*/Foo {
// }
// 
// module Foo {
//     export interface Bar { }
// }
// 
// <|function [|{| contextId: 0, defId: 0 |}Foo|](): void {
// }|>
// 
// var f1: Foo.Bar;
// var f2: Foo;
// Foo.bind(this);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "interface Foo\nnamespace Foo",
  "displayParts": [
   {
    "text": "interface",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// /*FIND ALL REFS*/<|module [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}Foo|] {
//     export interface Bar { }
// }|>
// 
// function Foo(): void {
// }
// 
// var f1: [|{| defId: 0 |}Foo|].Bar;
// var f2: Foo;
// Foo.bind(this);

// === Definitions ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// /*FIND ALL REFS*/module Foo {
//     export interface Bar { }
// }
// 
// <|function [|{| contextId: 0, defId: 0 |}Foo|](): void {
// }|>
// 
// var f1: Foo.Bar;
// var f2: Foo;
// Foo.bind(this);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "namespace Foo",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// <|module /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}Foo|] {
//     export interface Bar { }
// }|>
// 
// function Foo(): void {
// }
// 
// var f1: [|{| defId: 0 |}Foo|].Bar;
// var f2: Foo;
// Foo.bind(this);

// === Definitions ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// module /*FIND ALL REFS*/Foo {
//     export interface Bar { }
// }
// 
// <|function [|{| contextId: 0, defId: 0 |}Foo|](): void {
// }|>
// 
// var f1: Foo.Bar;
// var f2: Foo;
// Foo.bind(this);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "namespace Foo",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// module Foo {
//     export interface Bar { }
// }
// 
// /*FIND ALL REFS*/<|function [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}Foo|](): void {
// }|>
// 
// var f1: Foo.Bar;
// var f2: Foo;
// [|{| defId: 0 |}Foo|].bind(this);

// === Definitions ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// module Foo {
//     export interface Bar { }
// }
// 
// /*FIND ALL REFS*/<|function [|{| contextId: 0, defId: 0 |}Foo|](): void {
// }|>
// 
// var f1: Foo.Bar;
// var f2: Foo;
// Foo.bind(this);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "namespace Foo\nfunction Foo(): void",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// module Foo {
//     export interface Bar { }
// }
// 
// <|function /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}Foo|](): void {
// }|>
// 
// var f1: Foo.Bar;
// var f2: Foo;
// [|{| defId: 0 |}Foo|].bind(this);

// === Definitions ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// module Foo {
//     export interface Bar { }
// }
// 
// <|function /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}Foo|](): void {
// }|>
// 
// var f1: Foo.Bar;
// var f2: Foo;
// Foo.bind(this);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "namespace Foo\nfunction Foo(): void",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// <|module [|{| contextId: 0, defId: 0, isWriteAccess: true |}Foo|] {
//     export interface Bar { }
// }|>
// 
// function Foo(): void {
// }
// 
// var f1: /*FIND ALL REFS*/[|{| defId: 0 |}Foo|].Bar;
// var f2: Foo;
// Foo.bind(this);

// === Definitions ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// module Foo {
//     export interface Bar { }
// }
// 
// <|function [|{| contextId: 0, defId: 0 |}Foo|](): void {
// }|>
// 
// var f1: /*FIND ALL REFS*/Foo.Bar;
// var f2: Foo;
// Foo.bind(this);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "namespace Foo",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// <|interface [|{| contextId: 0, defId: 0, isWriteAccess: true |}Foo|] {
// }|>
// 
// module Foo {
//     export interface Bar { }
// }
// 
// function Foo(): void {
// }
// 
// var f1: Foo.Bar;
// var f2: /*FIND ALL REFS*/[|{| defId: 0 |}Foo|];
// Foo.bind(this);

// === Definitions ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// module Foo {
//     export interface Bar { }
// }
// 
// <|function [|{| contextId: 0, defId: 0 |}Foo|](): void {
// }|>
// 
// var f1: Foo.Bar;
// var f2: /*FIND ALL REFS*/Foo;
// Foo.bind(this);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "interface Foo\nnamespace Foo",
  "displayParts": [
   {
    "text": "interface",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// module Foo {
//     export interface Bar { }
// }
// 
// <|function [|{| contextId: 0, defId: 0, isWriteAccess: true |}Foo|](): void {
// }|>
// 
// var f1: Foo.Bar;
// var f2: Foo;
// /*FIND ALL REFS*/[|{| defId: 0 |}Foo|].bind(this);

// === Definitions ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// module Foo {
//     export interface Bar { }
// }
// 
// <|function [|{| contextId: 0, defId: 0 |}Foo|](): void {
// }|>
// 
// var f1: Foo.Bar;
// var f2: Foo;
// /*FIND ALL REFS*/Foo.bind(this);

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "namespace Foo\nfunction Foo(): void",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Foo",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 }
]