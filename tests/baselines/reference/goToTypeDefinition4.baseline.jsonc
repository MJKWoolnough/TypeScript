// === goToType ===
// === /tests/cases/fourslash/bar.ts ===
// import { T } from "./foo";
// let x: /*GOTO TYPE*/T;

undefined

// === goToDefinition ===
// === /tests/cases/fourslash/foo.ts ===
// <|export type [|{| contextId: 0, kind: "const", name: "T", containerName: "\"/tests/cases/fourslash/foo\"" |}T|] = string;|>
// <|export const [|{| contextId: 1, kind: "const", name: "T", containerName: "\"/tests/cases/fourslash/foo\"" |}T|] = "";|>

// === /tests/cases/fourslash/bar.ts ===
// import { T } from "./foo";
// let x: /*GOTO DEF*/T;

// === TextSpan ===
// === /tests/cases/fourslash/bar.ts ===
// import { T } from "./foo";
// let x: /*GOTO DEF*/[|T|];

{
  "definitions": [
    {
      "fileName": "/tests/cases/fourslash/foo.ts",
      "textSpan": {
        "start": 12,
        "length": 1
      },
      "kind": "const",
      "name": "T",
      "containerName": "\"/tests/cases/fourslash/foo\"",
      "contextSpan": {
        "start": 0,
        "length": 23
      },
      "isLocal": false,
      "isAmbient": false,
      "unverified": false
    },
    {
      "fileName": "/tests/cases/fourslash/foo.ts",
      "textSpan": {
        "start": 37,
        "length": 1
      },
      "kind": "const",
      "name": "T",
      "containerName": "\"/tests/cases/fourslash/foo\"",
      "contextSpan": {
        "start": 24,
        "length": 20
      },
      "isLocal": false,
      "isAmbient": false,
      "unverified": false
    }
  ],
  "textSpan": {
    "start": 34,
    "length": 1
  }
}