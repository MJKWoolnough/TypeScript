// === /tests/cases/fourslash/findAllRefsMappedType_nonHomomorphic.ts ===
// function f(x: { [K in "m"]: number; }) {
//     x./*FIND ALL REFS*/[|{| defId: 0 |}m|];
//     x.[|{| defId: 0 |}m|]
// }

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsMappedType_nonHomomorphic.ts ===
// function f(x: { [K in "m"]: number; }) {
//     x./*FIND ALL REFS*/[|{| defId: 0 |}m|];
//     x.m
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) m: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "m",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsMappedType_nonHomomorphic.ts ===
// function f(x: { [K in "m"]: number; }) {
//     x.[|{| defId: 0 |}m|];
//     x./*FIND ALL REFS*/[|{| defId: 0 |}m|]
// }

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsMappedType_nonHomomorphic.ts ===
// function f(x: { [K in "m"]: number; }) {
//     x.m;
//     x./*FIND ALL REFS*/[|{| defId: 0 |}m|]
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) m: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "m",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]