// === /tests/cases/fourslash/referencesForModifiers.ts ===
// /*FIND ALL REFS*/<|declare abstract class [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}C1|] {
//     static a;
//     readonly b;
//     public c;
//     protected d;
//     private e;
// }|>
// const enum E {
// }
// async function fn() {}
// export default class C2 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForModifiers.ts ===
// /*FIND ALL REFS*/<|declare abstract class [|{| contextId: 0, defId: 0 |}C1|] {
//     static a;
//     readonly b;
//     public c;
//     protected d;
//     private e;
// }|>
// const enum E {
// }
// async function fn() {}
// export default class C2 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C1",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C1",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForModifiers.ts ===
// <|declare /*FIND ALL REFS*/abstract class [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}C1|] {
//     static a;
//     readonly b;
//     public c;
//     protected d;
//     private e;
// }|>
// const enum E {
// }
// async function fn() {}
// export default class C2 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForModifiers.ts ===
// <|declare /*FIND ALL REFS*/abstract class [|{| contextId: 0, defId: 0 |}C1|] {
//     static a;
//     readonly b;
//     public c;
//     protected d;
//     private e;
// }|>
// const enum E {
// }
// async function fn() {}
// export default class C2 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C1",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C1",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     /*FIND ALL REFS*/<|static [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}a|];|>
//     readonly b;
//     public c;
//     protected d;
//     private e;
// }
// const enum E {
// }
// async function fn() {}
// export default class C2 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     /*FIND ALL REFS*/<|static [|{| contextId: 0, defId: 0 |}a|];|>
//     readonly b;
//     public c;
//     protected d;
//     private e;
// }
// const enum E {
// }
// async function fn() {}
// export default class C2 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) C1.a: any",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C1",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "a",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "any",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     /*FIND ALL REFS*/<|readonly [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}b|];|>
//     public c;
//     protected d;
//     private e;
// }
// const enum E {
// }
// async function fn() {}
// export default class C2 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     /*FIND ALL REFS*/<|readonly [|{| contextId: 0, defId: 0 |}b|];|>
//     public c;
//     protected d;
//     private e;
// }
// const enum E {
// }
// async function fn() {}
// export default class C2 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) C1.b: any",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C1",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "b",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "any",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     readonly b;
//     /*FIND ALL REFS*/<|public [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}c|];|>
//     protected d;
//     private e;
// }
// const enum E {
// }
// async function fn() {}
// export default class C2 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     readonly b;
//     /*FIND ALL REFS*/<|public [|{| contextId: 0, defId: 0 |}c|];|>
//     protected d;
//     private e;
// }
// const enum E {
// }
// async function fn() {}
// export default class C2 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) C1.c: any",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C1",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "c",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "any",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     readonly b;
//     public c;
//     /*FIND ALL REFS*/<|protected [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}d|];|>
//     private e;
// }
// const enum E {
// }
// async function fn() {}
// export default class C2 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     readonly b;
//     public c;
//     /*FIND ALL REFS*/<|protected [|{| contextId: 0, defId: 0 |}d|];|>
//     private e;
// }
// const enum E {
// }
// async function fn() {}
// export default class C2 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) C1.d: any",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C1",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "d",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "any",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     readonly b;
//     public c;
//     protected d;
//     /*FIND ALL REFS*/<|private [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}e|];|>
// }
// const enum E {
// }
// async function fn() {}
// export default class C2 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     readonly b;
//     public c;
//     protected d;
//     /*FIND ALL REFS*/<|private [|{| contextId: 0, defId: 0 |}e|];|>
// }
// const enum E {
// }
// async function fn() {}
// export default class C2 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) C1.e: any",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C1",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "e",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "any",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     readonly b;
//     public c;
//     protected d;
//     private e;
// }
// /*FIND ALL REFS*/<|const enum [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}E|] {
// }|>
// async function fn() {}
// export default class C2 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     readonly b;
//     public c;
//     protected d;
//     private e;
// }
// /*FIND ALL REFS*/<|const enum [|{| contextId: 0, defId: 0 |}E|] {
// }|>
// async function fn() {}
// export default class C2 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "enum",
  "name": "const enum E",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "enum",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "enumName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     readonly b;
//     public c;
//     protected d;
//     private e;
// }
// const enum E {
// }
// /*FIND ALL REFS*/<|async function [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}fn|]() {}|>
// export default class C2 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     readonly b;
//     public c;
//     protected d;
//     private e;
// }
// const enum E {
// }
// /*FIND ALL REFS*/<|async function [|{| contextId: 0, defId: 0 |}fn|]() {}|>
// export default class C2 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "function fn(): Promise<void>",
  "displayParts": [
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "fn",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Promise",
    "kind": "interfaceName"
   },
   {
    "text": "<",
    "kind": "punctuation"
   },
   {
    "text": "void",
    "kind": "keyword"
   },
   {
    "text": ">",
    "kind": "punctuation"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     readonly b;
//     public c;
//     protected d;
//     private e;
// }
// const enum E {
// }
// async function fn() {}
// /*FIND ALL REFS*/<|export default class [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}C2|] {}|>

// === Definitions ===
// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     readonly b;
//     public c;
//     protected d;
//     private e;
// }
// const enum E {
// }
// async function fn() {}
// /*FIND ALL REFS*/<|export default class [|{| contextId: 0, defId: 0 |}C2|] {}|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C2",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C2",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     readonly b;
//     public c;
//     protected d;
//     private e;
// }
// const enum E {
// }
// async function fn() {}
// <|export /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}default|] class C2 {}|>

// === Definitions ===
// === /tests/cases/fourslash/referencesForModifiers.ts ===
// declare abstract class C1 {
//     static a;
//     readonly b;
//     public c;
//     protected d;
//     private e;
// }
// const enum E {
// }
// async function fn() {}
// <|export /*FIND ALL REFS*/default class [|{| contextId: 0, defId: 0 |}C2|] {}|>

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C2",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C2",
    "kind": "className"
   }
  ]
 }
]