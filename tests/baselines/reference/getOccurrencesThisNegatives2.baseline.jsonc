// === /tests/cases/fourslash/getOccurrencesThisNegatives2.ts ===
// this;
// this;
// 
// function f() {
//     this;
//     this;
//     () => this;
//     () => {
//         if (this) {
//             this;
//         }
//         else {
//             this.t/*OCCURENCES*/his;
//         }
//     }
//     function inside() {
//         this;
//         (function (_) {
//             this;
//         })(this);
//     }
// }
// 
// module m {
//     function f() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// }
// 
// class A {
//     public b = this.method1;
// 
//     public method1() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     private method2() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     public static staticB = this.staticMethod1;
// 
//     public static staticMethod1() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     private static staticMethod2() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// }
// 
// var x = {
//     f() {
//         this;
//     },
//     g() {
//         this;
//     }
// }

[]

// === /tests/cases/fourslash/getOccurrencesThisNegatives2.ts ===
// this;
// this;
// 
// function f() {
//     this;
//     this;
//     () => this;
//     () => {
//         if (this) {
//             this;
//         }
//         else {
//             this.this;
//         }
//     }
//     function inside() {
//         this;
//         (function (_) {
//             this;
//         })(this);
//     }
// }
// 
// module m {
//     function f() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this./*OCCURENCES*/this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// }
// 
// class A {
//     public b = this.method1;
// 
//     public method1() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     private method2() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     public static staticB = this.staticMethod1;
// 
//     public static staticMethod1() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     private static staticMethod2() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// }
// 
// var x = {
//     f() {
//         this;
//     },
//     g() {
//         this;
//     }
// }

[]

// === /tests/cases/fourslash/getOccurrencesThisNegatives2.ts ===
// this;
// this;
// 
// function f() {
//     this;
//     this;
//     () => this;
//     () => {
//         if (this) {
//             this;
//         }
//         else {
//             this.this;
//         }
//     }
//     function inside() {
//         this;
//         (function (_) {
//             this;
//         })(this);
//     }
// }
// 
// module m {
//     function f() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// }
// 
// class A {
//     public b = this.method1;
// 
//     public method1() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.thi/*OCCURENCES*/s;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     private method2() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     public static staticB = this.staticMethod1;
// 
//     public static staticMethod1() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     private static staticMethod2() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// }
// 
// var x = {
//     f() {
//         this;
//     },
//     g() {
//         this;
//     }
// }

[]

// === /tests/cases/fourslash/getOccurrencesThisNegatives2.ts ===
// this;
// this;
// 
// function f() {
//     this;
//     this;
//     () => this;
//     () => {
//         if (this) {
//             this;
//         }
//         else {
//             this.this;
//         }
//     }
//     function inside() {
//         this;
//         (function (_) {
//             this;
//         })(this);
//     }
// }
// 
// module m {
//     function f() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// }
// 
// class A {
//     public b = this.method1;
// 
//     public method1() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     private method2() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.t/*OCCURENCES*/his;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     public static staticB = this.staticMethod1;
// 
//     public static staticMethod1() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     private static staticMethod2() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// }
// 
// var x = {
//     f() {
//         this;
//     },
//     g() {
//         this;
//     }
// }

[]

// === /tests/cases/fourslash/getOccurrencesThisNegatives2.ts ===
// this;
// this;
// 
// function f() {
//     this;
//     this;
//     () => this;
//     () => {
//         if (this) {
//             this;
//         }
//         else {
//             this.this;
//         }
//     }
//     function inside() {
//         this;
//         (function (_) {
//             this;
//         })(this);
//     }
// }
// 
// module m {
//     function f() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// }
// 
// class A {
//     public b = this.method1;
// 
//     public method1() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     private method2() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     public static staticB = this.staticMethod1;
// 
//     public static staticMethod1() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.th/*OCCURENCES*/is;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     private static staticMethod2() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// }
// 
// var x = {
//     f() {
//         this;
//     },
//     g() {
//         this;
//     }
// }

[]

// === /tests/cases/fourslash/getOccurrencesThisNegatives2.ts ===
// this;
// this;
// 
// function f() {
//     this;
//     this;
//     () => this;
//     () => {
//         if (this) {
//             this;
//         }
//         else {
//             this.this;
//         }
//     }
//     function inside() {
//         this;
//         (function (_) {
//             this;
//         })(this);
//     }
// }
// 
// module m {
//     function f() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// }
// 
// class A {
//     public b = this.method1;
// 
//     public method1() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     private method2() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     public static staticB = this.staticMethod1;
// 
//     public static staticMethod1() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.this;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// 
//     private static staticMethod2() {
//         this;
//         this;
//         () => this;
//         () => {
//             if (this) {
//                 this;
//             }
//             else {
//                 this.th/*OCCURENCES*/is;
//             }
//         }
//         function inside() {
//             this;
//             (function (_) {
//                 this;
//             })(this);
//         }
//     }
// }
// 
// var x = {
//     f() {
//         this;
//     },
//     g() {
//         this;
//     }
// }

[]