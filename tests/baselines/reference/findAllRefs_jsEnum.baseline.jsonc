// === /a.js ===
// /** @enum {string} */
// /*FIND ALL REFS*/<|const [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}E|] = { A: "" };|>
// [|{| defId: 0 |}E|]["A"];
// /** @type {[|{| defId: 0 |}E|]} */
// const e = [|{| defId: 0 |}E|].A;

// === Definitions ===
// === /a.js ===
// /** @enum {string} */
// /*FIND ALL REFS*/<|const [|{| contextId: 0, defId: 0 |}E|] = { A: "" };|>
// E["A"];
// /** @type {E} */
// const e = E.A;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "type E = string\nconst E: {\n    A: string;\n}",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "localName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "    ",
    "kind": "space"
   },
   {
    "text": "A",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": ";",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]

// === /a.js ===
// /** @enum {string} */
// <|const /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}E|] = { A: "" };|>
// [|{| defId: 0 |}E|]["A"];
// /** @type {[|{| defId: 0 |}E|]} */
// const e = [|{| defId: 0 |}E|].A;

// === Definitions ===
// === /a.js ===
// /** @enum {string} */
// <|const /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}E|] = { A: "" };|>
// E["A"];
// /** @type {E} */
// const e = E.A;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "type E = string\nconst E: {\n    A: string;\n}",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "localName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "    ",
    "kind": "space"
   },
   {
    "text": "A",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": ";",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]

// === /a.js ===
// /** @enum {string} */
// <|const [|{| contextId: 0, defId: 0, isWriteAccess: true |}E|] = { A: "" };|>
// /*FIND ALL REFS*/[|{| defId: 0 |}E|]["A"];
// /** @type {[|{| defId: 0 |}E|]} */
// const e = [|{| defId: 0 |}E|].A;

// === Definitions ===
// === /a.js ===
// /** @enum {string} */
// <|const [|{| contextId: 0, defId: 0 |}E|] = { A: "" };|>
// /*FIND ALL REFS*/E["A"];
// /** @type {E} */
// const e = E.A;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "type E = string\nconst E: {\n    A: string;\n}",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "localName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "    ",
    "kind": "space"
   },
   {
    "text": "A",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": ";",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]

// === /a.js ===
// /** @enum {string} */
// <|const [|{| contextId: 0, defId: 0, isWriteAccess: true |}E|] = { A: "" };|>
// [|{| defId: 0 |}E|]["A"];
// /** @type {/*FIND ALL REFS*/[|{| defId: 0 |}E|]} */
// const e = [|{| defId: 0 |}E|].A;

// === Definitions ===
// === /a.js ===
// /** @enum {string} */
// <|const [|{| contextId: 0, defId: 0 |}E|] = { A: "" };|>
// E["A"];
// /** @type {/*FIND ALL REFS*/E} */
// const e = E.A;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "type E = string\nconst E: {\n    A: string;\n}",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "localName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "    ",
    "kind": "space"
   },
   {
    "text": "A",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": ";",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]

// === /a.js ===
// /** @enum {string} */
// <|const [|{| contextId: 0, defId: 0, isWriteAccess: true |}E|] = { A: "" };|>
// [|{| defId: 0 |}E|]["A"];
// /** @type {[|{| defId: 0 |}E|]} */
// const e = /*FIND ALL REFS*/[|{| defId: 0 |}E|].A;

// === Definitions ===
// === /a.js ===
// /** @enum {string} */
// <|const [|{| contextId: 0, defId: 0 |}E|] = { A: "" };|>
// E["A"];
// /** @type {E} */
// const e = /*FIND ALL REFS*/E.A;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "type E = string\nconst E: {\n    A: string;\n}",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "localName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "    ",
    "kind": "space"
   },
   {
    "text": "A",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": ";",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]