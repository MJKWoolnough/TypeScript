// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfClass.ts ===
// /*FIND ALL REFS*/<|class [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}C|] {
//     n: number;
//     constructor() {
//         this.n = 12;
//     }
// }|>
// let c = new [|{| defId: 0 |}C|]();

// === Definitions ===
// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfClass.ts ===
// /*FIND ALL REFS*/<|class [|{| contextId: 0, defId: 0 |}C|] {
//     n: number;
//     constructor() {
//         this.n = 12;
//     }
// }|>
// let c = new C();

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfClass.ts ===
// <|class /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}C|] {
//     n: number;
//     constructor() {
//         this.n = 12;
//     }
// }|>
// let c = new [|{| defId: 0 |}C|]();

// === Definitions ===
// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfClass.ts ===
// <|class /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}C|] {
//     n: number;
//     constructor() {
//         this.n = 12;
//     }
// }|>
// let c = new C();

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfClass.ts ===
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}C|] {
//     n: number;
//     constructor() {
//         this.n = 12;
//     }
// }|>
// let c = new /*FIND ALL REFS*/[|{| defId: 0 |}C|]();

// === Definitions ===
// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfClass.ts ===
// <|class [|{| contextId: 0, defId: 0 |}C|] {
//     n: number;
//     constructor() {
//         this.n = 12;
//     }
// }|>
// let c = new /*FIND ALL REFS*/C();

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C",
    "kind": "className"
   }
  ]
 }
]