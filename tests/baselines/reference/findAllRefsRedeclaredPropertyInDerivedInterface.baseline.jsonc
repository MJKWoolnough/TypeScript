// === /tests/cases/fourslash/findAllRefsRedeclaredPropertyInDerivedInterface.ts ===
// interface A {
//     <|readonly /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isDefinition: true |}x|]: number | string;|>
// }
// interface B extends A {
//     <|readonly [|{| contextId: 1, defId: 1 |}x|]: number;|>
// }
// const a: A = { <|[|{| contextId: 2, defId: 0, isWriteAccess: true |}x|]: 0|> };
// const b: B = { <|[|{| contextId: 3, defId: 1, isWriteAccess: true |}x|]: 0|> };

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsRedeclaredPropertyInDerivedInterface.ts ===
// interface A {
//     <|readonly /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}x|]: number | string;|>
// }
// interface B extends A {
//     <|readonly [|{| contextId: 1, defId: 1 |}x|]: number;|>
// }
// const a: A = { x: 0 };
// const b: B = { x: 0 };

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) A.x: string | number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "A",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "x",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "|",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) B.x: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "B",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "x",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsRedeclaredPropertyInDerivedInterface.ts ===
// interface A {
//     <|readonly [|{| contextId: 0, defId: 0 |}x|]: number | string;|>
// }
// interface B extends A {
//     <|readonly /*FIND ALL REFS*/[|{| contextId: 1, defId: 1, isDefinition: true |}x|]: number;|>
// }
// const a: A = { <|[|{| contextId: 2, defId: 0, isWriteAccess: true |}x|]: 0|> };
// const b: B = { <|[|{| contextId: 3, defId: 1, isWriteAccess: true |}x|]: 0|> };

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsRedeclaredPropertyInDerivedInterface.ts ===
// interface A {
//     <|readonly [|{| contextId: 0, defId: 0 |}x|]: number | string;|>
// }
// interface B extends A {
//     <|readonly /*FIND ALL REFS*/[|{| contextId: 1, defId: 1 |}x|]: number;|>
// }
// const a: A = { x: 0 };
// const b: B = { x: 0 };

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) A.x: string | number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "A",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "x",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "|",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) B.x: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "B",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "x",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsRedeclaredPropertyInDerivedInterface.ts ===
// interface A {
//     <|readonly [|{| contextId: 0, defId: 0 |}x|]: number | string;|>
// }
// interface B extends A {
//     <|readonly [|{| contextId: 1, defId: 1 |}x|]: number;|>
// }
// const a: A = { /*FIND ALL REFS*/<|[|{| contextId: 2, defId: 0, isWriteAccess: true, isDefinition: true |}x|]: 0|> };
// const b: B = { <|[|{| contextId: 3, defId: 1, isWriteAccess: true |}x|]: 0|> };

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsRedeclaredPropertyInDerivedInterface.ts ===
// interface A {
//     <|readonly [|{| contextId: 0, defId: 0 |}x|]: number | string;|>
// }
// interface B extends A {
//     <|readonly [|{| contextId: 1, defId: 1 |}x|]: number;|>
// }
// const a: A = { /*FIND ALL REFS*/x: 0 };
// const b: B = { x: 0 };

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) A.x: string | number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "A",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "x",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "|",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) B.x: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "B",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "x",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsRedeclaredPropertyInDerivedInterface.ts ===
// interface A {
//     <|readonly [|{| contextId: 0, defId: 0 |}x|]: number | string;|>
// }
// interface B extends A {
//     <|readonly [|{| contextId: 1, defId: 1 |}x|]: number;|>
// }
// const a: A = { <|[|{| contextId: 2, defId: 0, isWriteAccess: true |}x|]: 0|> };
// const b: B = { /*FIND ALL REFS*/<|[|{| contextId: 3, defId: 1, isWriteAccess: true, isDefinition: true |}x|]: 0|> };

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsRedeclaredPropertyInDerivedInterface.ts ===
// interface A {
//     <|readonly [|{| contextId: 0, defId: 0 |}x|]: number | string;|>
// }
// interface B extends A {
//     <|readonly [|{| contextId: 1, defId: 1 |}x|]: number;|>
// }
// const a: A = { x: 0 };
// const b: B = { /*FIND ALL REFS*/x: 0 };

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) A.x: string | number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "A",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "x",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "|",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) B.x: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "B",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "x",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]