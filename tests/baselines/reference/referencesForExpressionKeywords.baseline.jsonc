// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// /*FIND ALL REFS*/new [|{| defId: 0 |}C|]();
// void [|{| defId: 0 |}C|];
// typeof [|{| defId: 0 |}C|];
// delete [|{| defId: 0 |}C|].x;
// async function* f() {
//     yield [|{| defId: 0 |}C|];
//     await [|{| defId: 0 |}C|];
// }
// "x" in [|{| defId: 0 |}C|];
// undefined instanceof [|{| defId: 0 |}C|];
// undefined as [|{| defId: 0 |}C|];

// === Definitions ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0 |}C|] {
//     static x = 1;
// }|>
// /*FIND ALL REFS*/new C();
// void C;
// typeof C;
// delete C.x;
// async function* f() {
//     yield C;
//     await C;
// }
// "x" in C;
// undefined instanceof C;
// undefined as C;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// new [|{| defId: 0 |}C|]();
// /*FIND ALL REFS*/void [|{| defId: 0 |}C|];
// typeof [|{| defId: 0 |}C|];
// delete [|{| defId: 0 |}C|].x;
// async function* f() {
//     yield [|{| defId: 0 |}C|];
//     await [|{| defId: 0 |}C|];
// }
// "x" in [|{| defId: 0 |}C|];
// undefined instanceof [|{| defId: 0 |}C|];
// undefined as [|{| defId: 0 |}C|];

// === Definitions ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0 |}C|] {
//     static x = 1;
// }|>
// new C();
// /*FIND ALL REFS*/void C;
// typeof C;
// delete C.x;
// async function* f() {
//     yield C;
//     await C;
// }
// "x" in C;
// undefined instanceof C;
// undefined as C;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// new [|{| defId: 0 |}C|]();
// void [|{| defId: 0 |}C|];
// /*FIND ALL REFS*/typeof [|{| defId: 0 |}C|];
// delete [|{| defId: 0 |}C|].x;
// async function* f() {
//     yield [|{| defId: 0 |}C|];
//     await [|{| defId: 0 |}C|];
// }
// "x" in [|{| defId: 0 |}C|];
// undefined instanceof [|{| defId: 0 |}C|];
// undefined as [|{| defId: 0 |}C|];

// === Definitions ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0 |}C|] {
//     static x = 1;
// }|>
// new C();
// void C;
// /*FIND ALL REFS*/typeof C;
// delete C.x;
// async function* f() {
//     yield C;
//     await C;
// }
// "x" in C;
// undefined instanceof C;
// undefined as C;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// new [|{| defId: 0 |}C|]();
// void [|{| defId: 0 |}C|];
// typeof [|{| defId: 0 |}C|];
// delete [|{| defId: 0 |}C|].x;
// async function* f() {
//     /*FIND ALL REFS*/yield [|{| defId: 0 |}C|];
//     await [|{| defId: 0 |}C|];
// }
// "x" in [|{| defId: 0 |}C|];
// undefined instanceof [|{| defId: 0 |}C|];
// undefined as [|{| defId: 0 |}C|];

// === Definitions ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0 |}C|] {
//     static x = 1;
// }|>
// new C();
// void C;
// typeof C;
// delete C.x;
// async function* f() {
//     /*FIND ALL REFS*/yield C;
//     await C;
// }
// "x" in C;
// undefined instanceof C;
// undefined as C;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// new [|{| defId: 0 |}C|]();
// void [|{| defId: 0 |}C|];
// typeof [|{| defId: 0 |}C|];
// delete [|{| defId: 0 |}C|].x;
// async function* f() {
//     yield [|{| defId: 0 |}C|];
//     /*FIND ALL REFS*/await [|{| defId: 0 |}C|];
// }
// "x" in [|{| defId: 0 |}C|];
// undefined instanceof [|{| defId: 0 |}C|];
// undefined as [|{| defId: 0 |}C|];

// === Definitions ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0 |}C|] {
//     static x = 1;
// }|>
// new C();
// void C;
// typeof C;
// delete C.x;
// async function* f() {
//     yield C;
//     /*FIND ALL REFS*/await C;
// }
// "x" in C;
// undefined instanceof C;
// undefined as C;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// new [|{| defId: 0 |}C|]();
// void [|{| defId: 0 |}C|];
// typeof [|{| defId: 0 |}C|];
// delete [|{| defId: 0 |}C|].x;
// async function* f() {
//     yield [|{| defId: 0 |}C|];
//     await [|{| defId: 0 |}C|];
// }
// "x" /*FIND ALL REFS*/in [|{| defId: 0 |}C|];
// undefined instanceof [|{| defId: 0 |}C|];
// undefined as [|{| defId: 0 |}C|];

// === Definitions ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0 |}C|] {
//     static x = 1;
// }|>
// new C();
// void C;
// typeof C;
// delete C.x;
// async function* f() {
//     yield C;
//     await C;
// }
// "x" /*FIND ALL REFS*/in C;
// undefined instanceof C;
// undefined as C;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// new [|{| defId: 0 |}C|]();
// void [|{| defId: 0 |}C|];
// typeof [|{| defId: 0 |}C|];
// delete [|{| defId: 0 |}C|].x;
// async function* f() {
//     yield [|{| defId: 0 |}C|];
//     await [|{| defId: 0 |}C|];
// }
// "x" in [|{| defId: 0 |}C|];
// undefined /*FIND ALL REFS*/instanceof [|{| defId: 0 |}C|];
// undefined as [|{| defId: 0 |}C|];

// === Definitions ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0 |}C|] {
//     static x = 1;
// }|>
// new C();
// void C;
// typeof C;
// delete C.x;
// async function* f() {
//     yield C;
//     await C;
// }
// "x" in C;
// undefined /*FIND ALL REFS*/instanceof C;
// undefined as C;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// new [|{| defId: 0 |}C|]();
// void [|{| defId: 0 |}C|];
// typeof [|{| defId: 0 |}C|];
// delete [|{| defId: 0 |}C|].x;
// async function* f() {
//     yield [|{| defId: 0 |}C|];
//     await [|{| defId: 0 |}C|];
// }
// "x" in [|{| defId: 0 |}C|];
// undefined instanceof [|{| defId: 0 |}C|];
// undefined /*FIND ALL REFS*/as [|{| defId: 0 |}C|];

// === Definitions ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0 |}C|] {
//     static x = 1;
// }|>
// new C();
// void C;
// typeof C;
// delete C.x;
// async function* f() {
//     yield C;
//     await C;
// }
// "x" in C;
// undefined instanceof C;
// undefined /*FIND ALL REFS*/as C;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// class C {
//     <|static [|{| contextId: 0, defId: 0, isWriteAccess: true |}x|] = 1;|>
// }
// new C();
// void C;
// typeof C;
// /*FIND ALL REFS*/delete C.[|{| defId: 0 |}x|];
// async function* f() {
//     yield C;
//     await C;
// }
// "x" in C;
// undefined instanceof C;
// undefined as C;

// === Definitions ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// class C {
//     <|static [|{| contextId: 0, defId: 0 |}x|] = 1;|>
// }
// new C();
// void C;
// typeof C;
// /*FIND ALL REFS*/delete C.x;
// async function* f() {
//     yield C;
//     await C;
// }
// "x" in C;
// undefined instanceof C;
// undefined as C;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) C.x: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "x",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]