// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfComputedProperty.ts ===
// let o = { /*FIND ALL REFS*/["foo"]: 12 };
// let y = o.foo;
// let z = o['foo'];

[]

// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfComputedProperty.ts ===
// let o = { <|["/*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}foo|]"]: 12|> };
// let y = o.[|{| defId: 0 |}foo|];
// let z = o['[|{| defId: 0 |}foo|]'];

// === Definitions ===
// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfComputedProperty.ts ===
// let o = { <|["/*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}foo|]"]: 12|> };
// let y = o.foo;
// let z = o['foo'];

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) [\"foo\"]: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "[\"foo\"]",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfComputedProperty.ts ===
// let o = { <|["[|{| contextId: 0, defId: 0, isWriteAccess: true |}foo|]"]: 12|> };
// let y = o./*FIND ALL REFS*/[|{| defId: 0 |}foo|];
// let z = o['[|{| defId: 0 |}foo|]'];

// === Definitions ===
// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfComputedProperty.ts ===
// let o = { <|["[|{| contextId: 0, defId: 0 |}foo|]"]: 12|> };
// let y = o./*FIND ALL REFS*/foo;
// let z = o['foo'];

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) [\"foo\"]: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "[\"foo\"]",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfComputedProperty.ts ===
// let o = { <|["[|{| contextId: 0, defId: 0, isWriteAccess: true |}foo|]"]: 12|> };
// let y = o.[|{| defId: 0 |}foo|];
// let z = o['/*FIND ALL REFS*/[|{| defId: 0 |}foo|]'];

// === Definitions ===
// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfComputedProperty.ts ===
// let o = { <|["[|{| contextId: 0, defId: 0 |}foo|]"]: 12|> };
// let y = o.foo;
// let z = o['/*FIND ALL REFS*/foo'];

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) [\"foo\"]: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "[\"foo\"]",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]