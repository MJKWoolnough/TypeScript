// === /tests/cases/fourslash/referencesForContextuallyTypedObjectLiteralProperties.ts ===
// interface IFoo { /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isDefinition: true |}xy|]: number;|> }
// 
// // Assignment
// var a1: IFoo = { <|[|{| contextId: 1, defId: 0, isWriteAccess: true |}xy|]: 0|> };
// var a2: IFoo = { <|[|{| contextId: 2, defId: 0, isWriteAccess: true |}xy|]: 0|> };
// 
// // Function call
// function consumer(f: IFoo) { }
// consumer({ <|[|{| contextId: 3, defId: 0, isWriteAccess: true |}xy|]: 1|> });
// 
// // Type cast
// var c = <IFoo>{ <|[|{| contextId: 4, defId: 0, isWriteAccess: true |}xy|]: 0|> };
// 
// // Array literal
// var ar: IFoo[] = [{ <|[|{| contextId: 5, defId: 0, isWriteAccess: true |}xy|]: 1|> }, { <|[|{| contextId: 6, defId: 0, isWriteAccess: true |}xy|]: 2|> }];
// 
// // Nested object literal
// var ob: { ifoo: IFoo } = { ifoo: { <|[|{| contextId: 7, defId: 0, isWriteAccess: true |}xy|]: 0|> } };
// 
// // Widened type
// var w: IFoo = { <|[|{| contextId: 8, defId: 0, isWriteAccess: true |}xy|]: undefined|> };
// 
// // Untped -- should not be included
// var u = { xy: 0 };

// === Definitions ===
// === /tests/cases/fourslash/referencesForContextuallyTypedObjectLiteralProperties.ts ===
// interface IFoo { /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}xy|]: number;|> }
// 
// // Assignment
// var a1: IFoo = { xy: 0 };
// var a2: IFoo = { xy: 0 };
// 
// // Function call
// function consumer(f: IFoo) { }
// consumer({ xy: 1 });
// 
// // Type cast
// var c = <IFoo>{ xy: 0 };
// 
// // Array literal
// var ar: IFoo[] = [{ xy: 1 }, { xy: 2 }];
// 
// // Nested object literal
// var ob: { ifoo: IFoo } = { ifoo: { xy: 0 } };
// 
// // Widened type
// var w: IFoo = { xy: undefined };
// 
// // Untped -- should not be included
// var u = { xy: 0 };

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) IFoo.xy: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "IFoo",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "xy",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]