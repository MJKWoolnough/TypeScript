// === /tests/cases/fourslash/renameDestructuringClassProperty.ts ===
// class A {
//     /*RENAME*/<|[|{| contextId: 0 |}fooRENAME|]: string;|>
// }
// class B {
//     syntax1(a: A): void {
//         <|let { [|{| contextId: 1 |}fooRENAME|]: foo/*END SUFFIX*/ } = a;|>
//     }
//     syntax2(a: A): void {
//         <|let { [|{| contextId: 2 |}fooRENAME|]: foo } = a;|>
//     }
//     syntax11(a: A): void {
//         <|let { [|{| contextId: 3 |}fooRENAME|]: foo/*END SUFFIX*/ } = a;|>
//         foo = "newString";
//     }
// }



// === /tests/cases/fourslash/renameDestructuringClassProperty.ts ===
// class A {
//     <|[|{| contextId: 0 |}fooRENAME|]: string;|>
// }
// class B {
//     syntax1(a: A): void {
//         <|let { [|{| contextId: 1 |}fooRENAME|]: foo/*END SUFFIX*/ } = a;|>
//     }
//     syntax2(a: A): void {
//         <|let { /*RENAME*/[|{| contextId: 2 |}fooRENAME|]: foo } = a;|>
//     }
//     syntax11(a: A): void {
//         <|let { [|{| contextId: 3 |}fooRENAME|]: foo/*END SUFFIX*/ } = a;|>
//         foo = "newString";
//     }
// }



// === /tests/cases/fourslash/renameDestructuringClassProperty.ts ===
// class A {
//     foo: string;
// }
// class B {
//     syntax1(a: A): void {
//         <|let { /*START PREFIX*/foo: /*RENAME*/[|{| contextId: 0 |}fooRENAME|] } = a;|>
//     }
//     syntax2(a: A): void {
//         let { foo: foo } = a;
//     }
//     syntax11(a: A): void {
//         let { foo } = a;
//         foo = "newString";
//     }
// }



// === /tests/cases/fourslash/renameDestructuringClassProperty.ts ===
// class A {
//     foo: string;
// }
// class B {
//     syntax1(a: A): void {
//         let { foo } = a;
//     }
//     syntax2(a: A): void {
//         let { foo: foo } = a;
//     }
//     syntax11(a: A): void {
//         <|let { /*START PREFIX*/foo: /*RENAME*/[|{| contextId: 0 |}fooRENAME|] } = a;|>
//         [|fooRENAME|] = "newString";
//     }
// }



// === /tests/cases/fourslash/renameDestructuringClassProperty.ts ===
// class A {
//     foo: string;
// }
// class B {
//     syntax1(a: A): void {
//         let { foo } = a;
//     }
//     syntax2(a: A): void {
//         let { foo: foo } = a;
//     }
//     syntax11(a: A): void {
//         <|let { /*START PREFIX*/foo: [|{| contextId: 0 |}fooRENAME|] } = a;|>
//         /*RENAME*/[|fooRENAME|] = "newString";
//     }
// }

