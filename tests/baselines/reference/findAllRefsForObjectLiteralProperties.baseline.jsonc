// === /tests/cases/fourslash/findAllRefsForObjectLiteralProperties.ts ===
// var x = {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}property|]: {}|>
// };
// 
// x.[|{| defId: 0 |}property|];
// 
// <|let {[|{| contextId: 1, defId: 0 |}property|]: pVar} = x;|>

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsForObjectLiteralProperties.ts ===
// var x = {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}property|]: {}|>
// };
// 
// x.property;
// 
// let {property: pVar} = x;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) property: {}",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "property",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsForObjectLiteralProperties.ts ===
// var x = {
//     <|[|{| contextId: 0, defId: 0, isWriteAccess: true |}property|]: {}|>
// };
// 
// x./*FIND ALL REFS*/[|{| defId: 0 |}property|];
// 
// <|let {[|{| contextId: 1, defId: 0 |}property|]: pVar} = x;|>

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsForObjectLiteralProperties.ts ===
// var x = {
//     <|[|{| contextId: 0, defId: 0 |}property|]: {}|>
// };
// 
// x./*FIND ALL REFS*/property;
// 
// let {property: pVar} = x;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) property: {}",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "property",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsForObjectLiteralProperties.ts ===
// var x = {
//     property: {}
// };
// 
// x.property;
// 
// /*FIND ALL REFS*/let {property: pVar} = x;

[]

// === /tests/cases/fourslash/findAllRefsForObjectLiteralProperties.ts ===
// var x = {
//     <|[|{| contextId: 0, defId: 0, isWriteAccess: true |}property|]: {}|>
// };
// 
// x.[|{| defId: 0 |}property|];
// 
// <|let {/*FIND ALL REFS*/[|{| contextId: 1, defId: 0 |}property|]: pVar} = x;|>

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsForObjectLiteralProperties.ts ===
// var x = {
//     <|[|{| contextId: 0, defId: 0 |}property|]: {}|>
// };
// 
// x.property;
// 
// let {/*FIND ALL REFS*/property: pVar} = x;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) property: {}",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "property",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]