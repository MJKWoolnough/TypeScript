// === /node_modules/foo/index.d.ts ===
// /*FIND ALL REFS*/<|export type [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}T|] = number;|>

// === /a.ts ===
// import * as foo from "foo";
// declare module "foo" {
//     export const x: [|{| defId: 0 |}T|];
// }

// === Definitions ===
// === /node_modules/foo/index.d.ts ===
// /*FIND ALL REFS*/<|export type [|{| contextId: 0, defId: 0, kind: "type", name: "type T = number", displayParts: [{"text":"type","kind":"keyword"},{"text":" ","kind":"space"},{"text":"T","kind":"aliasName"},{"text":" ","kind":"space"},{"text":"=","kind":"operator"},{"text":" ","kind":"space"},{"text":"number","kind":"keyword"}] |}T|] = number;|>

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/node_modules/foo/index.d.ts",
      "kind": "type",
      "name": "type T = number",
      "textSpan": {
        "start": 12,
        "length": 1
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "aliasName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 23
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 12,
          "length": 1
        },
        "fileName": "/node_modules/foo/index.d.ts",
        "contextSpan": {
          "start": 0,
          "length": 23
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 71,
          "length": 1
        },
        "fileName": "/a.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /node_modules/foo/index.d.ts ===
// <|export type /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}T|] = number;|>

// === /a.ts ===
// import * as foo from "foo";
// declare module "foo" {
//     export const x: [|{| defId: 0 |}T|];
// }

// === Definitions ===
// === /node_modules/foo/index.d.ts ===
// <|export type /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, kind: "type", name: "type T = number", displayParts: [{"text":"type","kind":"keyword"},{"text":" ","kind":"space"},{"text":"T","kind":"aliasName"},{"text":" ","kind":"space"},{"text":"=","kind":"operator"},{"text":" ","kind":"space"},{"text":"number","kind":"keyword"}] |}T|] = number;|>

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/node_modules/foo/index.d.ts",
      "kind": "type",
      "name": "type T = number",
      "textSpan": {
        "start": 12,
        "length": 1
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "aliasName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 23
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 12,
          "length": 1
        },
        "fileName": "/node_modules/foo/index.d.ts",
        "contextSpan": {
          "start": 0,
          "length": 23
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 71,
          "length": 1
        },
        "fileName": "/a.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /node_modules/foo/index.d.ts ===
// <|export type [|{| contextId: 0, defId: 0, isWriteAccess: true |}T|] = number;|>

// === /a.ts ===
// import * as foo from "foo";
// declare module "foo" {
//     export const x: /*FIND ALL REFS*/[|{| defId: 0 |}T|];
// }

// === Definitions ===
// === /node_modules/foo/index.d.ts ===
// <|export type [|{| contextId: 0, defId: 0, kind: "type", name: "type T = number", displayParts: [{"text":"type","kind":"keyword"},{"text":" ","kind":"space"},{"text":"T","kind":"aliasName"},{"text":" ","kind":"space"},{"text":"=","kind":"operator"},{"text":" ","kind":"space"},{"text":"number","kind":"keyword"}] |}T|] = number;|>

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/node_modules/foo/index.d.ts",
      "kind": "type",
      "name": "type T = number",
      "textSpan": {
        "start": 12,
        "length": 1
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "aliasName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 23
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 12,
          "length": 1
        },
        "fileName": "/node_modules/foo/index.d.ts",
        "contextSpan": {
          "start": 0,
          "length": 23
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 71,
          "length": 1
        },
        "fileName": "/a.ts",
        "isWriteAccess": false
      }
    ]
  }
]