// === /tests/cases/fourslash/getOccurrencesSuper.ts ===
// class SuperType {
//     superMethod() {
//     }
// 
//     static superStaticMethod() {
//         return 10;
//     }
// }
// 
// class SubType extends SuperType {
//     public  prop1 = /*OCCURENCES*/[|super|].superMethod;
//     private prop2 = [|super|].superMethod;
// 
//     constructor() {
//         [|super|]();
//     }
// 
//     public method1() {
//         return [|super|].superMethod();
//     }
// 
//     private method2() {
//         return [|super|].superMethod();
//     }
// 
//     public method3() {
//         var x = () => [|super|].superMethod();
// 
//         // Bad but still gets highlighted
//         function f() {
//             [|super|].superMethod();
//         }
//     }
// 
//     // Bad but still gets highlighted.
//     public static statProp1 = super.superStaticMethod;
// 
//     public static staticMethod1() {
//         return super.superStaticMethod();
//     }
// 
//     private static staticMethod2() {
//         return super.superStaticMethod();
//     }
// 
//     // Are not actually 'super' keywords.
//     super = 10;
//     static super = 20;
// }



// === /tests/cases/fourslash/getOccurrencesSuper.ts ===
// class SuperType {
//     superMethod() {
//     }
// 
//     static superStaticMethod() {
//         return 10;
//     }
// }
// 
// class SubType extends SuperType {
//     public  prop1 = [|super|].superMethod;
//     private prop2 = /*OCCURENCES*/[|super|].superMethod;
// 
//     constructor() {
//         [|super|]();
//     }
// 
//     public method1() {
//         return [|super|].superMethod();
//     }
// 
//     private method2() {
//         return [|super|].superMethod();
//     }
// 
//     public method3() {
//         var x = () => [|super|].superMethod();
// 
//         // Bad but still gets highlighted
//         function f() {
//             [|super|].superMethod();
//         }
//     }
// 
//     // Bad but still gets highlighted.
//     public static statProp1 = super.superStaticMethod;
// 
//     public static staticMethod1() {
//         return super.superStaticMethod();
//     }
// 
//     private static staticMethod2() {
//         return super.superStaticMethod();
//     }
// 
//     // Are not actually 'super' keywords.
//     super = 10;
//     static super = 20;
// }



// === /tests/cases/fourslash/getOccurrencesSuper.ts ===
// class SuperType {
//     superMethod() {
//     }
// 
//     static superStaticMethod() {
//         return 10;
//     }
// }
// 
// class SubType extends SuperType {
//     public  prop1 = [|super|].superMethod;
//     private prop2 = [|super|].superMethod;
// 
//     constructor() {
//         /*OCCURENCES*/[|super|]();
//     }
// 
//     public method1() {
//         return [|super|].superMethod();
//     }
// 
//     private method2() {
//         return [|super|].superMethod();
//     }
// 
//     public method3() {
//         var x = () => [|super|].superMethod();
// 
//         // Bad but still gets highlighted
//         function f() {
//             [|super|].superMethod();
//         }
//     }
// 
//     // Bad but still gets highlighted.
//     public static statProp1 = super.superStaticMethod;
// 
//     public static staticMethod1() {
//         return super.superStaticMethod();
//     }
// 
//     private static staticMethod2() {
//         return super.superStaticMethod();
//     }
// 
//     // Are not actually 'super' keywords.
//     super = 10;
//     static super = 20;
// }



// === /tests/cases/fourslash/getOccurrencesSuper.ts ===
// class SuperType {
//     superMethod() {
//     }
// 
//     static superStaticMethod() {
//         return 10;
//     }
// }
// 
// class SubType extends SuperType {
//     public  prop1 = [|super|].superMethod;
//     private prop2 = [|super|].superMethod;
// 
//     constructor() {
//         [|super|]();
//     }
// 
//     public method1() {
//         return /*OCCURENCES*/[|super|].superMethod();
//     }
// 
//     private method2() {
//         return [|super|].superMethod();
//     }
// 
//     public method3() {
//         var x = () => [|super|].superMethod();
// 
//         // Bad but still gets highlighted
//         function f() {
//             [|super|].superMethod();
//         }
//     }
// 
//     // Bad but still gets highlighted.
//     public static statProp1 = super.superStaticMethod;
// 
//     public static staticMethod1() {
//         return super.superStaticMethod();
//     }
// 
//     private static staticMethod2() {
//         return super.superStaticMethod();
//     }
// 
//     // Are not actually 'super' keywords.
//     super = 10;
//     static super = 20;
// }



// === /tests/cases/fourslash/getOccurrencesSuper.ts ===
// class SuperType {
//     superMethod() {
//     }
// 
//     static superStaticMethod() {
//         return 10;
//     }
// }
// 
// class SubType extends SuperType {
//     public  prop1 = [|super|].superMethod;
//     private prop2 = [|super|].superMethod;
// 
//     constructor() {
//         [|super|]();
//     }
// 
//     public method1() {
//         return [|super|].superMethod();
//     }
// 
//     private method2() {
//         return /*OCCURENCES*/[|super|].superMethod();
//     }
// 
//     public method3() {
//         var x = () => [|super|].superMethod();
// 
//         // Bad but still gets highlighted
//         function f() {
//             [|super|].superMethod();
//         }
//     }
// 
//     // Bad but still gets highlighted.
//     public static statProp1 = super.superStaticMethod;
// 
//     public static staticMethod1() {
//         return super.superStaticMethod();
//     }
// 
//     private static staticMethod2() {
//         return super.superStaticMethod();
//     }
// 
//     // Are not actually 'super' keywords.
//     super = 10;
//     static super = 20;
// }



// === /tests/cases/fourslash/getOccurrencesSuper.ts ===
// class SuperType {
//     superMethod() {
//     }
// 
//     static superStaticMethod() {
//         return 10;
//     }
// }
// 
// class SubType extends SuperType {
//     public  prop1 = [|super|].superMethod;
//     private prop2 = [|super|].superMethod;
// 
//     constructor() {
//         [|super|]();
//     }
// 
//     public method1() {
//         return [|super|].superMethod();
//     }
// 
//     private method2() {
//         return [|super|].superMethod();
//     }
// 
//     public method3() {
//         var x = () => /*OCCURENCES*/[|super|].superMethod();
// 
//         // Bad but still gets highlighted
//         function f() {
//             [|super|].superMethod();
//         }
//     }
// 
//     // Bad but still gets highlighted.
//     public static statProp1 = super.superStaticMethod;
// 
//     public static staticMethod1() {
//         return super.superStaticMethod();
//     }
// 
//     private static staticMethod2() {
//         return super.superStaticMethod();
//     }
// 
//     // Are not actually 'super' keywords.
//     super = 10;
//     static super = 20;
// }



// === /tests/cases/fourslash/getOccurrencesSuper.ts ===
// class SuperType {
//     superMethod() {
//     }
// 
//     static superStaticMethod() {
//         return 10;
//     }
// }
// 
// class SubType extends SuperType {
//     public  prop1 = [|super|].superMethod;
//     private prop2 = [|super|].superMethod;
// 
//     constructor() {
//         [|super|]();
//     }
// 
//     public method1() {
//         return [|super|].superMethod();
//     }
// 
//     private method2() {
//         return [|super|].superMethod();
//     }
// 
//     public method3() {
//         var x = () => [|super|].superMethod();
// 
//         // Bad but still gets highlighted
//         function f() {
//             /*OCCURENCES*/[|super|].superMethod();
//         }
//     }
// 
//     // Bad but still gets highlighted.
//     public static statProp1 = super.superStaticMethod;
// 
//     public static staticMethod1() {
//         return super.superStaticMethod();
//     }
// 
//     private static staticMethod2() {
//         return super.superStaticMethod();
//     }
// 
//     // Are not actually 'super' keywords.
//     super = 10;
//     static super = 20;
// }

