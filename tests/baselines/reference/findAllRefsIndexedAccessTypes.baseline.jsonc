// === /tests/cases/fourslash/findAllRefsIndexedAccessTypes.ts ===
// interface I {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isDefinition: true |}0|]: number;|>
//     s: string;
// }
// interface J {
//     a: I[[|{| defId: 0 |}0|]],
//     b: I["s"],
// }

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsIndexedAccessTypes.ts ===
// interface I {
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}0|]: number;|>
//     s: string;
// }
// interface J {
//     a: I[0],
//     b: I["s"],
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) I[0]: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "I",
    "kind": "interfaceName"
   },
   {
    "text": "[",
    "kind": "punctuation"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   },
   {
    "text": "]",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsIndexedAccessTypes.ts ===
// interface I {
//     0: number;
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isDefinition: true |}s|]: string;|>
// }
// interface J {
//     a: I[0],
//     b: I["[|{| defId: 0 |}s|]"],
// }

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsIndexedAccessTypes.ts ===
// interface I {
//     0: number;
//     /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}s|]: string;|>
// }
// interface J {
//     a: I[0],
//     b: I["s"],
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) I.s: string",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "I",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "s",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsIndexedAccessTypes.ts ===
// interface I {
//     <|[|{| contextId: 0, defId: 0 |}0|]: number;|>
//     s: string;
// }
// interface J {
//     a: I[/*FIND ALL REFS*/[|{| defId: 0 |}0|]],
//     b: I["s"],
// }

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsIndexedAccessTypes.ts ===
// interface I {
//     <|[|{| contextId: 0, defId: 0 |}0|]: number;|>
//     s: string;
// }
// interface J {
//     a: I[/*FIND ALL REFS*/0],
//     b: I["s"],
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) I[0]: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "I",
    "kind": "interfaceName"
   },
   {
    "text": "[",
    "kind": "punctuation"
   },
   {
    "text": "0",
    "kind": "stringLiteral"
   },
   {
    "text": "]",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/findAllRefsIndexedAccessTypes.ts ===
// interface I {
//     0: number;
//     <|[|{| contextId: 0, defId: 0 |}s|]: string;|>
// }
// interface J {
//     a: I[0],
//     b: I["/*FIND ALL REFS*/[|{| defId: 0 |}s|]"],
// }

// === Definitions ===
// === /tests/cases/fourslash/findAllRefsIndexedAccessTypes.ts ===
// interface I {
//     0: number;
//     <|[|{| contextId: 0, defId: 0 |}s|]: string;|>
// }
// interface J {
//     a: I[0],
//     b: I["/*FIND ALL REFS*/s"],
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) I.s: string",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "I",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "s",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   }
  ]
 }
]