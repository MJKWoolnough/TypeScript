// === goToDefinition ===
// === /tests/cases/fourslash/a.js ===
// /**
//  * Doc comment
//  * <|@typedef [|{| contextId: 0, kind: "type", name: "Product" |}Product|]
//  * @property {string} title
//  |>*/
// /**
//  * @type {/*GOTO DEF*/Product}
//  */
// const product = null;

// === TextSpan ===
// === /tests/cases/fourslash/a.js ===
// /**
//  * Doc comment
//  * @typedef Product
//  * @property {string} title
//  */
// /**
//  * @type {/*GOTO DEF*/[|Product|]}
//  */
// const product = null;



// === occurences ===
// === /tests/cases/fourslash/a.js ===
// /**
//  * Doc comment
//  * <|@typedef /*OCCURENCES*/[|{| contextId: 0, isWriteAccess: true |}Product|]
//  * @property {string} title
//  |>*/
// /**
//  * @type {[|Product|]}
//  */
// const product = null;



// === /tests/cases/fourslash/a.js ===
// /**
//  * Doc comment
//  * <|@typedef [|{| contextId: 0, isWriteAccess: true |}Product|]
//  * @property {string} title
//  |>*/
// /**
//  * @type {/*OCCURENCES*/[|Product|]}
//  */
// const product = null;



// === documentHighlights ===
// === /tests/cases/fourslash/a.js ===
// /**
//  * Doc comment
//  * <|@typedef /*HIGHLIGHTS*/[|{| contextId: 0, kind: "writtenReference" |}Product|]
//  * @property {string} title
//  |>*/
// /**
//  * @type {[|{| kind: "reference" |}Product|]}
//  */
// const product = null;



// === /tests/cases/fourslash/a.js ===
// /**
//  * Doc comment
//  * <|@typedef [|{| contextId: 0, kind: "writtenReference" |}Product|]
//  * @property {string} title
//  |>*/
// /**
//  * @type {/*HIGHLIGHTS*/[|{| kind: "reference" |}Product|]}
//  */
// const product = null;



// === findAllReferences ===
// === /tests/cases/fourslash/a.js ===
// /**
//  * Doc comment
//  * <|@typedef [|{| contextId: 0, defId: 0, isWriteAccess: true |}Product|]
//  * @property {string} title
//  |>*/
// /**
//  * @type {/*FIND ALL REFS*/[|{| defId: 0 |}Product|]}
//  */
// const product = null;

// === Definitions ===
// === /tests/cases/fourslash/a.js ===
// /**
//  * Doc comment
//  * <|@typedef [|{| contextId: 0, defId: 0 |}Product|]
//  * @property {string} title
//  |>*/
// /**
//  * @type {/*FIND ALL REFS*/Product}
//  */
// const product = null;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type Product = {\n    title: string;\n}",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Product",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "    ",
    "kind": "space"
   },
   {
    "text": "title",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": ";",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]

// === /tests/cases/fourslash/a.js ===
// /**
//  * Doc comment
//  * <|@typedef /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}Product|]
//  * @property {string} title
//  |>*/
// /**
//  * @type {[|{| defId: 0 |}Product|]}
//  */
// const product = null;

// === Definitions ===
// === /tests/cases/fourslash/a.js ===
// /**
//  * Doc comment
//  * <|@typedef /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}Product|]
//  * @property {string} title
//  |>*/
// /**
//  * @type {Product}
//  */
// const product = null;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type Product = {\n    title: string;\n}",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Product",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "    ",
    "kind": "space"
   },
   {
    "text": "title",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": ";",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]

// === findRenameLocations ===
// === /tests/cases/fourslash/a.js ===
// /**
//  * Doc comment
//  * <|@typedef /*RENAME*/[|{| contextId: 0 |}ProductRENAME|]
//  * @property {string} title
//  |>*/
// /**
//  * @type {[|ProductRENAME|]}
//  */
// const product = null;



// === /tests/cases/fourslash/a.js ===
// /**
//  * Doc comment
//  * <|@typedef [|{| contextId: 0 |}ProductRENAME|]
//  * @property {string} title
//  |>*/
// /**
//  * @type {/*RENAME*/[|ProductRENAME|]}
//  */
// const product = null;

