// === findAllReferences ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// <|declare namespace /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}N|] {
//     export var x: number;
// }|>
// declare module "mod" {
//     <|export = [|{| contextId: 1, defId: 0 |}N|];|>
// }
// declare module "a" {
//     <|import * as [|{| contextId: 2, defId: 1, isWriteAccess: true |}N|] from "mod";|>
//     <|export { [|{| contextId: 3, defId: 1, isWriteAccess: true |}N|] };|> // Renaming N here would rename
// }
// declare module "b" {
//     <|import { [|{| contextId: 4, defId: 2, isWriteAccess: true |}N|] } from "a";|>
//     export const y: typeof [|{| defId: 2 |}N|].x;
// }

// === Definitions ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// <|declare namespace /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}N|] {
//     export var x: number;
// }|>
// declare module "mod" {
//     export = N;
// }
// declare module "a" {
//     <|import * as [|{| contextId: 1, defId: 1 |}N|] from "mod";|>
//     export { N }; // Renaming N here would rename
// }
// declare module "b" {
//     <|import { [|{| contextId: 2, defId: 2 |}N|] } from "a";|>
//     export const y: typeof N.x;
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "module",
  "name": "namespace N",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "moduleName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) namespace N\nimport N",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) namespace N\nimport N",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   }
  ]
 }
]

// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// <|declare namespace [|{| contextId: 0, defId: 1, isWriteAccess: true |}N|] {
//     export var x: number;
// }|>
// declare module "mod" {
//     <|export = [|{| contextId: 1, defId: 1 |}N|];|>
// }
// declare module "a" {
//     <|import * as /*FIND ALL REFS*/[|{| contextId: 2, defId: 0, isWriteAccess: true, isDefinition: true |}N|] from "mod";|>
//     <|export { [|{| contextId: 3, defId: 0, isWriteAccess: true |}N|] };|> // Renaming N here would rename
// }
// declare module "b" {
//     <|import { [|{| contextId: 4, defId: 2, isWriteAccess: true |}N|] } from "a";|>
//     export const y: typeof [|{| defId: 2 |}N|].x;
// }

// === Definitions ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// <|declare namespace [|{| contextId: 0, defId: 1 |}N|] {
//     export var x: number;
// }|>
// declare module "mod" {
//     export = N;
// }
// declare module "a" {
//     <|import * as /*FIND ALL REFS*/[|{| contextId: 1, defId: 0 |}N|] from "mod";|>
//     export { N }; // Renaming N here would rename
// }
// declare module "b" {
//     <|import { [|{| contextId: 2, defId: 2 |}N|] } from "a";|>
//     export const y: typeof N.x;
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) namespace N\nimport N",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "module",
  "name": "namespace N",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "moduleName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) namespace N\nimport N",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   }
  ]
 }
]

// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// <|declare namespace [|{| contextId: 0, defId: 2, isWriteAccess: true |}N|] {
//     export var x: number;
// }|>
// declare module "mod" {
//     <|export = [|{| contextId: 1, defId: 2 |}N|];|>
// }
// declare module "a" {
//     <|import * as [|{| contextId: 2, defId: 1, isWriteAccess: true |}N|] from "mod";|>
//     <|export { [|{| contextId: 3, defId: 1, isWriteAccess: true |}N|] };|> // Renaming N here would rename
// }
// declare module "b" {
//     <|import { /*FIND ALL REFS*/[|{| contextId: 4, defId: 0, isWriteAccess: true, isDefinition: true |}N|] } from "a";|>
//     export const y: typeof [|{| defId: 0 |}N|].x;
// }

// === Definitions ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// <|declare namespace [|{| contextId: 0, defId: 2 |}N|] {
//     export var x: number;
// }|>
// declare module "mod" {
//     export = N;
// }
// declare module "a" {
//     <|import * as [|{| contextId: 1, defId: 1 |}N|] from "mod";|>
//     export { N }; // Renaming N here would rename
// }
// declare module "b" {
//     <|import { /*FIND ALL REFS*/[|{| contextId: 2, defId: 0 |}N|] } from "a";|>
//     export const y: typeof N.x;
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) namespace N\nimport N",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 1,
  "containerKind": "",
  "containerName": "",
  "kind": "alias",
  "name": "(alias) namespace N\nimport N",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "alias",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "import",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "aliasName"
   }
  ]
 },
 {
  "defId": 2,
  "containerKind": "",
  "containerName": "",
  "kind": "module",
  "name": "namespace N",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "moduleName"
   }
  ]
 }
]

// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// declare namespace N {
//     <|export var /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}x|]: number;|>
// }
// declare module "mod" {
//     export = N;
// }
// declare module "a" {
//     import * as N from "mod";
//     export { N }; // Renaming N here would rename
// }
// declare module "b" {
//     import { N } from "a";
//     export const y: typeof N.[|{| defId: 0 |}x|];
// }

// === Definitions ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// declare namespace N {
//     <|export var /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}x|]: number;|>
// }
// declare module "mod" {
//     export = N;
// }
// declare module "a" {
//     import * as N from "mod";
//     export { N }; // Renaming N here would rename
// }
// declare module "b" {
//     import { N } from "a";
//     export const y: typeof N.x;
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "var",
  "name": "var N.x: number",
  "displayParts": [
   {
    "text": "var",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "x",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === findRenameLocations ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// <|declare namespace /*RENAME*/[|{| contextId: 0 |}NRENAME|] {
//     export var x: number;
// }|>
// declare module "mod" {
//     <|export = [|{| contextId: 1 |}NRENAME|];|>
// }
// declare module "a" {
//     <|import * as [|{| contextId: 2 |}NRENAME|] from "mod";|>
//     <|export { [|{| contextId: 3 |}NRENAME|] as N/*END SUFFIX*/ };|> // Renaming N here would rename
// }
// declare module "b" {
//     import { N } from "a";
//     export const y: typeof N.x;
// }



// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// <|declare namespace [|{| contextId: 0 |}NRENAME|] {
//     export var x: number;
// }|>
// declare module "mod" {
//     <|export = /*RENAME*/[|{| contextId: 1 |}NRENAME|];|>
// }
// declare module "a" {
//     <|import * as [|{| contextId: 2 |}NRENAME|] from "mod";|>
//     <|export { [|{| contextId: 3 |}NRENAME|] as N/*END SUFFIX*/ };|> // Renaming N here would rename
// }
// declare module "b" {
//     import { N } from "a";
//     export const y: typeof N.x;
// }



// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// declare namespace N {
//     export var x: number;
// }
// declare module "mod" {
//     export = N;
// }
// declare module "a" {
//     <|import * as /*RENAME*/[|{| contextId: 0 |}NRENAME|] from "mod";|>
//     <|export { [|{| contextId: 1 |}NRENAME|] as N/*END SUFFIX*/ };|> // Renaming N here would rename
// }
// declare module "b" {
//     import { N } from "a";
//     export const y: typeof N.x;
// }



// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// declare namespace N {
//     export var x: number;
// }
// declare module "mod" {
//     export = N;
// }
// declare module "a" {
//     import * as N from "mod";
//     <|export { /*START PREFIX*/N as /*RENAME*/[|{| contextId: 0 |}NRENAME|] };|> // Renaming N here would rename
// }
// declare module "b" {
//     <|import { [|{| contextId: 1 |}NRENAME|] } from "a";|>
//     export const y: typeof [|NRENAME|].x;
// }



// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// declare namespace N {
//     export var x: number;
// }
// declare module "mod" {
//     export = N;
// }
// declare module "a" {
//     import * as N from "mod";
//     export { N }; // Renaming N here would rename
// }
// declare module "b" {
//     <|import { /*START PREFIX*/N as /*RENAME*/[|{| contextId: 0 |}NRENAME|] } from "a";|>
//     export const y: typeof [|NRENAME|].x;
// }



// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// declare namespace N {
//     export var x: number;
// }
// declare module "mod" {
//     export = N;
// }
// declare module "a" {
//     import * as N from "mod";
//     export { N }; // Renaming N here would rename
// }
// declare module "b" {
//     <|import { /*START PREFIX*/N as [|{| contextId: 0 |}NRENAME|] } from "a";|>
//     export const y: typeof /*RENAME*/[|NRENAME|].x;
// }



// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// declare namespace N {
//     <|export var /*RENAME*/[|{| contextId: 0 |}xRENAME|]: number;|>
// }
// declare module "mod" {
//     export = N;
// }
// declare module "a" {
//     import * as N from "mod";
//     export { N }; // Renaming N here would rename
// }
// declare module "b" {
//     import { N } from "a";
//     export const y: typeof N.[|xRENAME|];
// }



// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// declare namespace N {
//     <|export var [|{| contextId: 0 |}xRENAME|]: number;|>
// }
// declare module "mod" {
//     export = N;
// }
// declare module "a" {
//     import * as N from "mod";
//     export { N }; // Renaming N here would rename
// }
// declare module "b" {
//     import { N } from "a";
//     export const y: typeof N./*RENAME*/[|xRENAME|];
// }

