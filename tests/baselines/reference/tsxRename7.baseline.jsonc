// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     /*RENAME*/<|[|{| contextId: 0 |}propxRENAME|]: number|>
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt <|[|{| contextId: 1 |}propxRENAME|]={100}|> propString />;
// let opt2 = <Opt <|[|{| contextId: 2 |}propxRENAME|]={100}|> optional/>;
// let opt3 = <Opt wrong />;



// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     <|[|{| contextId: 0 |}propxRENAME|]: number|>
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt /*RENAME*/<|[|{| contextId: 1 |}propxRENAME|]={100}|> propString />;
// let opt2 = <Opt <|[|{| contextId: 2 |}propxRENAME|]={100}|> optional/>;
// let opt3 = <Opt wrong />;



// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     <|[|{| contextId: 0 |}propxRENAME|]: number|>
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt <|[|{| contextId: 1 |}propxRENAME|]={100}|> propString />;
// let opt2 = <Opt /*RENAME*/<|[|{| contextId: 2 |}propxRENAME|]={100}|> optional/>;
// let opt3 = <Opt wrong />;

