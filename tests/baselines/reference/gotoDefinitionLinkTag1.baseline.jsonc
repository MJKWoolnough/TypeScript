// === /tests/cases/fourslash/foo.ts ===
// <|interface [|{| contextId: 0, kind: "interface", name: "Foo" |}Foo|] {
//     foo: string
// }|>
// namespace NS {
//     export interface Bar {
//         baz: Foo
//     }
// }
// /** {@link /*GOTO DEF POS*/Foo} foooo*/
// const a = ""
// /** {@link NS.Bar} ns.bar*/
// const b = ""
// /** {@link Foo f1}*/
// const c = ""
// /** {@link NS.Bar ns.bar}*/
// const d = ""
// /** {@link d }dd*/
// const e = ""
// /** @param x {@link Foo} */
// function foo(x) { }

[
  {
    "fileName": "/tests/cases/fourslash/foo.ts",
    "textSpan": {
      "start": 10,
      "length": 3
    },
    "kind": "interface",
    "name": "Foo",
    "containerName": "",
    "contextSpan": {
      "start": 0,
      "length": 33
    },
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  }
]

// === /tests/cases/fourslash/foo.ts ===
// interface Foo {
//     foo: string
// }
// namespace NS {
//     <|export interface [|{| contextId: 0, kind: "interface", name: "Bar", containerName: "NS" |}Bar|] {
//         baz: Foo
//     }|>
// }
// /** {@link Foo} foooo*/
// const a = ""
// /** {@link NS./*GOTO DEF POS*/Bar} ns.bar*/
// const b = ""
// /** {@link Foo f1}*/
// const c = ""
// /** {@link NS.Bar ns.bar}*/
// const d = ""
// /** {@link d }dd*/
// const e = ""
// /** @param x {@link Foo} */
// function foo(x) { }

[
  {
    "fileName": "/tests/cases/fourslash/foo.ts",
    "textSpan": {
      "start": 70,
      "length": 3
    },
    "kind": "interface",
    "name": "Bar",
    "containerName": "NS",
    "contextSpan": {
      "start": 53,
      "length": 45
    },
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  }
]

// === /tests/cases/fourslash/foo.ts ===
// <|interface [|{| contextId: 0, kind: "interface", name: "Foo" |}Foo|] {
//     foo: string
// }|>
// namespace NS {
//     export interface Bar {
//         baz: Foo
//     }
// }
// /** {@link Foo} foooo*/
// const a = ""
// /** {@link NS.Bar} ns.bar*/
// const b = ""
// /** {@link /*GOTO DEF POS*/Foo f1}*/
// const c = ""
// /** {@link NS.Bar ns.bar}*/
// const d = ""
// /** {@link d }dd*/
// const e = ""
// /** @param x {@link Foo} */
// function foo(x) { }

[
  {
    "fileName": "/tests/cases/fourslash/foo.ts",
    "textSpan": {
      "start": 10,
      "length": 3
    },
    "kind": "interface",
    "name": "Foo",
    "containerName": "",
    "contextSpan": {
      "start": 0,
      "length": 33
    },
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  }
]

// === /tests/cases/fourslash/foo.ts ===
// interface Foo {
//     foo: string
// }
// namespace NS {
//     <|export interface [|{| contextId: 0, kind: "interface", name: "Bar", containerName: "NS" |}Bar|] {
//         baz: Foo
//     }|>
// }
// /** {@link Foo} foooo*/
// const a = ""
// /** {@link NS.Bar} ns.bar*/
// const b = ""
// /** {@link Foo f1}*/
// const c = ""
// /** {@link NS./*GOTO DEF POS*/Bar ns.bar}*/
// const d = ""
// /** {@link d }dd*/
// const e = ""
// /** @param x {@link Foo} */
// function foo(x) { }

[
  {
    "fileName": "/tests/cases/fourslash/foo.ts",
    "textSpan": {
      "start": 70,
      "length": 3
    },
    "kind": "interface",
    "name": "Bar",
    "containerName": "NS",
    "contextSpan": {
      "start": 53,
      "length": 45
    },
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  }
]

// === /tests/cases/fourslash/foo.ts ===
// interface Foo {
//     foo: string
// }
// namespace NS {
//     export interface Bar {
//         baz: Foo
//     }
// }
// /** {@link Foo} foooo*/
// const a = ""
// /** {@link NS.Bar} ns.bar*/
// const b = ""
// /** {@link Foo f1}*/
// const c = ""
// /** {@link NS.Bar ns.bar}*/
// <|const [|{| contextId: 0, kind: "const", name: "d" |}d|] = ""|>
// /** {@link /*GOTO DEF POS*/d }dd*/
// const e = ""
// /** @param x {@link Foo} */
// function foo(x) { }

[
  {
    "fileName": "/tests/cases/fourslash/foo.ts",
    "textSpan": {
      "start": 247,
      "length": 1
    },
    "kind": "const",
    "name": "d",
    "containerName": "",
    "contextSpan": {
      "start": 241,
      "length": 12
    },
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  }
]

// === /tests/cases/fourslash/foo.ts ===
// <|interface [|{| contextId: 0, kind: "interface", name: "Foo" |}Foo|] {
//     foo: string
// }|>
// namespace NS {
//     export interface Bar {
//         baz: Foo
//     }
// }
// /** {@link Foo} foooo*/
// const a = ""
// /** {@link NS.Bar} ns.bar*/
// const b = ""
// /** {@link Foo f1}*/
// const c = ""
// /** {@link NS.Bar ns.bar}*/
// const d = ""
// /** {@link d }dd*/
// const e = ""
// /** @param x {@link /*GOTO DEF POS*/Foo} */
// function foo(x) { }

[
  {
    "fileName": "/tests/cases/fourslash/foo.ts",
    "textSpan": {
      "start": 10,
      "length": 3
    },
    "kind": "interface",
    "name": "Foo",
    "containerName": "",
    "contextSpan": {
      "start": 0,
      "length": 33
    },
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  }
]

// === /tests/cases/fourslash/foo.ts ===
// <|interface [|{| contextId: 0, kind: "interface", name: "Foo" |}Foo|] {
//     foo: string
// }|>
// namespace NS {
//     export interface Bar {
//         baz: Foo
//     }
// }
// /** {@link Foo} foooo*/
// const a = ""
// /** {@link NS.Bar} ns.bar*/
// const b = ""
// /** {@link Foo f1}*/
// const c = ""
// /** {@link NS.Bar ns.bar}*/
// const d = ""
// /** {@link d }dd*/
// const e = ""
// /** @param x {@link Foo} */
// function foo(x) { }

// === /tests/cases/fourslash/bar.ts ===
// /** {@link /*GOTO DEF POS*/Foo }dd*/
// const f = ""

[
  {
    "fileName": "/tests/cases/fourslash/foo.ts",
    "textSpan": {
      "start": 10,
      "length": 3
    },
    "kind": "interface",
    "name": "Foo",
    "containerName": "",
    "contextSpan": {
      "start": 0,
      "length": 33
    },
    "isLocal": false,
    "isAmbient": false,
    "unverified": false,
    "failedAliasResolution": false
  }
]