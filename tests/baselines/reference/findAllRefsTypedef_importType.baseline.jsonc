// === /a.js ===
// module.exports = 0;
// /** /*FIND ALL REFS*/@typedef {number} Foo */
// const dummy = 0;

undefined

// === /a.js ===
// module.exports = 0;
// /** <|@typedef {number} /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}Foo|]|> */
// const dummy = 0;

// === /b.js ===
// /** @type {import('./a').[|{| defId: 0 |}Foo|]} */
// const x = 0;

// === Definitions ===
// === /a.js ===
// module.exports = 0;
// /** <|@typedef {number} /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, kind: "type", name: "type Foo = number", displayParts: [{"text":"type","kind":"keyword"},{"text":" ","kind":"space"},{"text":"Foo","kind":"aliasName"},{"text":" ","kind":"space"},{"text":"=","kind":"operator"},{"text":" ","kind":"space"},{"text":"number","kind":"keyword"}] |}Foo|]|> */
// const dummy = 0;

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.js",
      "kind": "type",
      "name": "type Foo = number",
      "textSpan": {
        "start": 42,
        "length": 3
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "Foo",
          "kind": "aliasName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 24,
        "length": 21
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 42,
          "length": 3
        },
        "fileName": "/a.js",
        "contextSpan": {
          "start": 24,
          "length": 21
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 25,
          "length": 3
        },
        "fileName": "/b.js",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /a.js ===
// module.exports = 0;
// /** <|@typedef {number} [|{| contextId: 0, defId: 0, isWriteAccess: true |}Foo|]|> */
// const dummy = 0;

// === /b.js ===
// /** @type {import('./a')./*FIND ALL REFS*/[|{| defId: 0 |}Foo|]} */
// const x = 0;

// === Definitions ===
// === /a.js ===
// module.exports = 0;
// /** <|@typedef {number} [|{| contextId: 0, defId: 0, kind: "type", name: "type Foo = number", displayParts: [{"text":"type","kind":"keyword"},{"text":" ","kind":"space"},{"text":"Foo","kind":"aliasName"},{"text":" ","kind":"space"},{"text":"=","kind":"operator"},{"text":" ","kind":"space"},{"text":"number","kind":"keyword"}] |}Foo|]|> */
// const dummy = 0;

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.js",
      "kind": "type",
      "name": "type Foo = number",
      "textSpan": {
        "start": 42,
        "length": 3
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "Foo",
          "kind": "aliasName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 24,
        "length": 21
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 42,
          "length": 3
        },
        "fileName": "/a.js",
        "contextSpan": {
          "start": 24,
          "length": 21
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 25,
          "length": 3
        },
        "fileName": "/b.js",
        "isWriteAccess": false
      }
    ]
  }
]