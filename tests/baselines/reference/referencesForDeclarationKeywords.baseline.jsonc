// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// /*FIND ALL REFS*/<|class [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}C1|] extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }|>
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// /*FIND ALL REFS*/<|class [|{| contextId: 0, defId: 0 |}C1|] extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }|>
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class C1",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C1",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}Base|] {}|>
// interface Implemented1 {}
// class C1 /*FIND ALL REFS*/extends [|{| defId: 0 |}Base|] implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends [|{| defId: 0 |}Base|] { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0 |}Base|] {}|>
// interface Implemented1 {}
// class C1 /*FIND ALL REFS*/extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class Base",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Base",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// <|interface [|{| contextId: 0, defId: 0, isWriteAccess: true |}Implemented1|] {}|>
// class C1 extends Base /*FIND ALL REFS*/implements [|{| defId: 0 |}Implemented1|] {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// <|interface [|{| contextId: 0, defId: 0 |}Implemented1|] {}|>
// class C1 extends Base /*FIND ALL REFS*/implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "interface",
  "name": "interface Implemented1",
  "displayParts": [
   {
    "text": "interface",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Implemented1",
    "kind": "interfaceName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 /*FIND ALL REFS*/implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

[]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     /*FIND ALL REFS*/<|get [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}e|]() { return 1; }|>
//     <|set [|{| contextId: 1, defId: 0, isWriteAccess: true, isDefinition: true |}e|](v) {}|>
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     /*FIND ALL REFS*/<|get [|{| contextId: 0, defId: 0 |}e|]() { return 1; }|>
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) C1.e: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C1",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "e",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     <|get [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}e|]() { return 1; }|>
//     /*FIND ALL REFS*/<|set [|{| contextId: 1, defId: 0, isWriteAccess: true, isDefinition: true |}e|](v) {}|>
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     <|get [|{| contextId: 0, defId: 0 |}e|]() { return 1; }|>
//     /*FIND ALL REFS*/set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) C1.e: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "C1",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "e",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// /*FIND ALL REFS*/<|interface [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}I1|] extends Base { }|>
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// /*FIND ALL REFS*/<|interface [|{| contextId: 0, defId: 0 |}I1|] extends Base { }|>
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "interface",
  "name": "interface I1",
  "displayParts": [
   {
    "text": "interface",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "I1",
    "kind": "interfaceName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}Base|] {}|>
// interface Implemented1 {}
// class C1 extends [|{| defId: 0 |}Base|] implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 /*FIND ALL REFS*/extends [|{| defId: 0 |}Base|] { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// <|class [|{| contextId: 0, defId: 0 |}Base|] {}|>
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 /*FIND ALL REFS*/extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class Base",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Base",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 /*FIND ALL REFS*/extends Implemented2, Implemented3 {}

[]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// /*FIND ALL REFS*/<|type [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}T|] = { }|>
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// /*FIND ALL REFS*/<|type [|{| contextId: 0, defId: 0 |}T|] = { }|>
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "type",
  "name": "type T = {}",
  "displayParts": [
   {
    "text": "type",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "T",
    "kind": "aliasName"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "=",
    "kind": "operator"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// /*FIND ALL REFS*/<|enum [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}E|] { }|>
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// /*FIND ALL REFS*/<|enum [|{| contextId: 0, defId: 0 |}E|] { }|>
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "enum",
  "name": "enum E",
  "displayParts": [
   {
    "text": "enum",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "E",
    "kind": "enumName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// /*FIND ALL REFS*/<|namespace [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}N|] { }|>
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// /*FIND ALL REFS*/<|namespace [|{| contextId: 0, defId: 0 |}N|] { }|>
// module M { }
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "module",
  "name": "namespace N",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "N",
    "kind": "moduleName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// /*FIND ALL REFS*/<|module [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}M|] { }|>
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// /*FIND ALL REFS*/<|module [|{| contextId: 0, defId: 0 |}M|] { }|>
// function fn() {}
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "module",
  "name": "namespace M",
  "displayParts": [
   {
    "text": "namespace",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "M",
    "kind": "moduleName"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// /*FIND ALL REFS*/<|function [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}fn|]() {}|>
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// /*FIND ALL REFS*/<|function [|{| contextId: 0, defId: 0 |}fn|]() {}|>
// var x;
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "function fn(): void",
  "displayParts": [
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "fn",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "void",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// /*FIND ALL REFS*/<|var [|{| contextId: 0, defId: 0, isDefinition: true |}x|];|>
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// /*FIND ALL REFS*/<|var [|{| contextId: 0, defId: 0 |}x|];|>
// let y;
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "var",
  "name": "var x: any",
  "displayParts": [
   {
    "text": "var",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "x",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "any",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// /*FIND ALL REFS*/<|let [|{| contextId: 0, defId: 0, isDefinition: true |}y|];|>
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// /*FIND ALL REFS*/<|let [|{| contextId: 0, defId: 0 |}y|];|>
// const z = 1;
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "let",
  "name": "let y: any",
  "displayParts": [
   {
    "text": "let",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "y",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "any",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// /*FIND ALL REFS*/<|const [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}z|] = 1;|>
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions ===
// === /tests/cases/fourslash/referencesForDeclarationKeywords.ts ===
// class Base {}
// interface Implemented1 {}
// class C1 extends Base implements Implemented1 {
//     get e() { return 1; }
//     set e(v) {}
// }
// interface I1 extends Base { }
// type T = { }
// enum E { }
// namespace N { }
// module M { }
// function fn() {}
// var x;
// let y;
// /*FIND ALL REFS*/<|const [|{| contextId: 0, defId: 0 |}z|] = 1;|>
// interface Implemented2 {}
// interface Implemented3 {}
// class C2 implements Implemented2, Implemented3 {}
// interface I2 extends Implemented2, Implemented3 {}

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "const",
  "name": "const z: 1",
  "displayParts": [
   {
    "text": "const",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "z",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "1",
    "kind": "stringLiteral"
   }
  ]
 }
]