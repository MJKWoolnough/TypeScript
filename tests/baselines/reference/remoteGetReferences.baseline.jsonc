// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: /*FIND ALL REFS*/[|{| defId: 0 |}remotefooCls|];
// 
// //Arguments
// remoteclsTest = new [|{| defId: 0 |}remotefooCls|](remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// [|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class [|{| contextId: 0, defId: 0 |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class remotefooCls",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: [|{| defId: 0 |}remotefooCls|];
// 
// //Arguments
// remoteclsTest = new /*FIND ALL REFS*/[|{| defId: 0 |}remotefooCls|](remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// [|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class [|{| contextId: 0, defId: 0 |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class remotefooCls",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls(/*FIND ALL REFS*/[|{| defId: 0 |}remoteglobalVar|]);
// remotefoo([|{| defId: 0 |}remoteglobalVar|]);
// 
// //Increments
// remotefooCls.remoteclsSVar++;
// remotemodTest.remotemodVar++;
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = [|{| defId: 0 |}remoteglobalVar|] + [|{| defId: 0 |}remoteglobalVar|];
// 
// //ETC - Other cases
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0 |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "var",
  "name": "var remoteglobalVar: number",
  "displayParts": [
   {
    "text": "var",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remoteglobalVar",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls([|{| defId: 0 |}remoteglobalVar|]);
// remotefoo(/*FIND ALL REFS*/[|{| defId: 0 |}remoteglobalVar|]);
// 
// //Increments
// remotefooCls.remoteclsSVar++;
// remotemodTest.remotemodVar++;
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = [|{| defId: 0 |}remoteglobalVar|] + [|{| defId: 0 |}remoteglobalVar|];
// 
// //ETC - Other cases
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0 |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "var",
  "name": "var remoteglobalVar: number",
  "displayParts": [
   {
    "text": "var",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remoteglobalVar",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: [|{| defId: 0 |}remotefooCls|];
// 
// //Arguments
// remoteclsTest = new [|{| defId: 0 |}remotefooCls|](remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// /*FIND ALL REFS*/[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class [|{| contextId: 0, defId: 0 |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class remotefooCls",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls(remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// remotefooCls./*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	<|static [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteclsSVar|] = 1;|>
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	<|static [|{| contextId: 0, defId: 0 |}remoteclsSVar|] = 1;|>
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) remotefooCls.remoteclsSVar: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "remoteclsSVar",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls([|{| defId: 0 |}remoteglobalVar|]);
// remotefoo([|{| defId: 0 |}remoteglobalVar|]);
// 
// //Increments
// remotefooCls.remoteclsSVar++;
// remotemodTest.remotemodVar++;
// /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = [|{| defId: 0 |}remoteglobalVar|] + [|{| defId: 0 |}remoteglobalVar|];
// 
// //ETC - Other cases
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0 |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "var",
  "name": "var remoteglobalVar: number",
  "displayParts": [
   {
    "text": "var",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remoteglobalVar",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls([|{| defId: 0 |}remoteglobalVar|]);
// remotefoo([|{| defId: 0 |}remoteglobalVar|]);
// 
// //Increments
// remotefooCls.remoteclsSVar++;
// remotemodTest.remotemodVar++;
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = /*FIND ALL REFS*/[|{| defId: 0 |}remoteglobalVar|] + [|{| defId: 0 |}remoteglobalVar|];
// 
// //ETC - Other cases
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0 |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "var",
  "name": "var remoteglobalVar: number",
  "displayParts": [
   {
    "text": "var",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remoteglobalVar",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls([|{| defId: 0 |}remoteglobalVar|]);
// remotefoo([|{| defId: 0 |}remoteglobalVar|]);
// 
// //Increments
// remotefooCls.remoteclsSVar++;
// remotemodTest.remotemodVar++;
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = [|{| defId: 0 |}remoteglobalVar|] + /*FIND ALL REFS*/[|{| defId: 0 |}remoteglobalVar|];
// 
// //ETC - Other cases
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0 |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "var",
  "name": "var remoteglobalVar: number",
  "displayParts": [
   {
    "text": "var",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remoteglobalVar",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls([|{| defId: 0 |}remoteglobalVar|]);
// remotefoo([|{| defId: 0 |}remoteglobalVar|]);
// 
// //Increments
// remotefooCls.remoteclsSVar++;
// remotemodTest.remotemodVar++;
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = [|{| defId: 0 |}remoteglobalVar|] + [|{| defId: 0 |}remoteglobalVar|];
// 
// //ETC - Other cases
// /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0 |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "var",
  "name": "var remoteglobalVar: number",
  "displayParts": [
   {
    "text": "var",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remoteglobalVar",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls([|{| defId: 0 |}remoteglobalVar|]);
// remotefoo([|{| defId: 0 |}remoteglobalVar|]);
// 
// //Increments
// remotefooCls.remoteclsSVar++;
// remotemodTest.remotemodVar++;
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = [|{| defId: 0 |}remoteglobalVar|] + [|{| defId: 0 |}remoteglobalVar|];
// 
// //ETC - Other cases
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// /*FIND ALL REFS*/<|var [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// /*FIND ALL REFS*/<|var [|{| contextId: 0, defId: 0 |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "var",
  "name": "var remoteglobalVar: number",
  "displayParts": [
   {
    "text": "var",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remoteglobalVar",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls([|{| defId: 0 |}remoteglobalVar|]);
// remotefoo([|{| defId: 0 |}remoteglobalVar|]);
// 
// //Increments
// remotefooCls.remoteclsSVar++;
// remotemodTest.remotemodVar++;
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = [|{| defId: 0 |}remoteglobalVar|] + [|{| defId: 0 |}remoteglobalVar|];
// 
// //ETC - Other cases
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "var",
  "name": "var remoteglobalVar: number",
  "displayParts": [
   {
    "text": "var",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remoteglobalVar",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: [|{| defId: 0 |}remotefooCls|];
// 
// //Arguments
// remoteclsTest = new [|{| defId: 0 |}remotefooCls|](remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// [|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// /*FIND ALL REFS*/<|class [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// /*FIND ALL REFS*/<|class [|{| contextId: 0, defId: 0 |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class remotefooCls",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: [|{| defId: 0 |}remotefooCls|];
// 
// //Arguments
// remoteclsTest = new [|{| defId: 0 |}remotefooCls|](remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// [|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class remotefooCls",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	/*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}remoteclsVar|] = 1;|>
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.[|{| defId: 0, isWriteAccess: true |}remoteclsVar|]++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	/*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}remoteclsVar|] = 1;|>
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) remotefooCls.remoteclsVar: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "remoteclsVar",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls(remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	/*FIND ALL REFS*/<|static [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}remoteclsSVar|] = 1;|>
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	/*FIND ALL REFS*/<|static [|{| contextId: 0, defId: 0 |}remoteclsSVar|] = 1;|>
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) remotefooCls.remoteclsSVar: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "remoteclsSVar",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls(remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	<|static /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}remoteclsSVar|] = 1;|>
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	<|static /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}remoteclsSVar|] = 1;|>
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) remotefooCls.remoteclsSVar: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "remoteclsSVar",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls([|{| defId: 0 |}remoteglobalVar|]);
// remotefoo([|{| defId: 0 |}remoteglobalVar|]);
// 
// //Increments
// remotefooCls.remoteclsSVar++;
// remotemodTest.remotemodVar++;
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = [|{| defId: 0 |}remoteglobalVar|] + [|{| defId: 0 |}remoteglobalVar|];
// 
// //ETC - Other cases
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		/*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0 |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		/*FIND ALL REFS*/remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "var",
  "name": "var remoteglobalVar: number",
  "displayParts": [
   {
    "text": "var",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remoteglobalVar",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	<|[|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteclsVar|] = 1;|>
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this./*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true |}remoteclsVar|]++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	<|[|{| contextId: 0, defId: 0 |}remoteclsVar|] = 1;|>
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this./*FIND ALL REFS*/remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) remotefooCls.remoteclsVar: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "remoteclsVar",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: [|{| defId: 0 |}remotefooCls|];
// 
// //Arguments
// remoteclsTest = new [|{| defId: 0 |}remotefooCls|](remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// [|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		/*FIND ALL REFS*/[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class [|{| contextId: 0, defId: 0 |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		/*FIND ALL REFS*/remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class remotefooCls",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls(remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	<|static [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteclsSVar|] = 1;|>
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls./*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	<|static [|{| contextId: 0, defId: 0 |}remoteclsSVar|] = 1;|>
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls./*FIND ALL REFS*/remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) remotefooCls.remoteclsSVar: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "remoteclsSVar",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: [|{| defId: 0 |}remotefooCls|];
// 
// //Arguments
// remoteclsTest = new [|{| defId: 0 |}remotefooCls|](remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// [|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	/*FIND ALL REFS*/[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class [|{| contextId: 0, defId: 0 |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	/*FIND ALL REFS*/remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class remotefooCls",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls(remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	<|static [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteclsSVar|] = 1;|>
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls./*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	<|static [|{| contextId: 0, defId: 0 |}remoteclsSVar|] = 1;|>
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls./*FIND ALL REFS*/remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) remotefooCls.remoteclsSVar: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "remoteclsSVar",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls([|{| defId: 0 |}remoteglobalVar|]);
// remotefoo([|{| defId: 0 |}remoteglobalVar|]);
// 
// //Increments
// remotefooCls.remoteclsSVar++;
// remotemodTest.remotemodVar++;
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = [|{| defId: 0 |}remoteglobalVar|] + [|{| defId: 0 |}remoteglobalVar|];
// 
// //ETC - Other cases
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	/*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0 |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	/*FIND ALL REFS*/remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "var",
  "name": "var remoteglobalVar: number",
  "displayParts": [
   {
    "text": "var",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remoteglobalVar",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls([|{| defId: 0 |}remoteglobalVar|]);
// remotefoo([|{| defId: 0 |}remoteglobalVar|]);
// 
// //Increments
// remotefooCls.remoteclsSVar++;
// remotemodTest.remotemodVar++;
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = [|{| defId: 0 |}remoteglobalVar|] + [|{| defId: 0 |}remoteglobalVar|];
// 
// //ETC - Other cases
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	/*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0 |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	/*FIND ALL REFS*/remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "var",
  "name": "var remoteglobalVar: number",
  "displayParts": [
   {
    "text": "var",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remoteglobalVar",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: [|{| defId: 0 |}remotefooCls|];
// 
// //Arguments
// remoteclsTest = new [|{| defId: 0 |}remotefooCls|](remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// [|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	/*FIND ALL REFS*/[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class [|{| contextId: 0, defId: 0 |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	/*FIND ALL REFS*/remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class remotefooCls",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls(remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	<|static [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteclsSVar|] = 1;|>
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls./*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	<|static [|{| contextId: 0, defId: 0 |}remoteclsSVar|] = 1;|>
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls./*FIND ALL REFS*/remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) remotefooCls.remoteclsSVar: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "remoteclsSVar",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls([|{| defId: 0 |}remoteglobalVar|]);
// remotefoo([|{| defId: 0 |}remoteglobalVar|]);
// 
// //Increments
// remotefooCls.remoteclsSVar++;
// remotemodTest.remotemodVar++;
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = [|{| defId: 0 |}remoteglobalVar|] + [|{| defId: 0 |}remoteglobalVar|];
// 
// //ETC - Other cases
// [|{| defId: 0, isWriteAccess: true |}remoteglobalVar|] = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		/*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true |}remoteglobalVar|]++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// <|var [|{| contextId: 0, defId: 0 |}remoteglobalVar|]: number = 2;|>
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		/*FIND ALL REFS*/remoteglobalVar++;
// 		remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "var",
  "name": "var remoteglobalVar: number",
  "displayParts": [
   {
    "text": "var",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remoteglobalVar",
    "kind": "localName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: [|{| defId: 0 |}remotefooCls|];
// 
// //Arguments
// remoteclsTest = new [|{| defId: 0 |}remotefooCls|](remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// [|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class [|{| contextId: 0, defId: 0, isWriteAccess: true |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		/*FIND ALL REFS*/[|{| defId: 0 |}remotefooCls|].remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// <|class [|{| contextId: 0, defId: 0 |}remotefooCls|] {
// 	//Declare
// 	remoteclsVar = 1;
// 	static remoteclsSVar = 1;
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }|>
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		/*FIND ALL REFS*/remotefooCls.remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "class",
  "name": "class remotefooCls",
  "displayParts": [
   {
    "text": "class",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   }
  ]
 }
]

// === /tests/cases/fourslash/remoteGetReferences_1.ts ===
// // Comment Refence Test: globalVar
// var globalVar: number = 2;
// 
// class fooCls {
//     static clsSVar = 1;
//     //Declare
//     clsVar = 1;
// 
//     constructor (public clsParam: number) {
//         //Increments
//         globalVar++;
//         this.clsVar++;
//         fooCls.clsSVar++;
//         this.clsParam++;
//         modTest.modVar++;
//     }
// }
// 
// function foo(x: number) {
//     //Declare
//     var fnVar = 1;
// 
//     //Increments
//     fooCls.clsSVar++;
//     globalVar++;
//     modTest.modVar++;
//     fnVar++;
// 
//     //Return
//     return x++;
// }
// 
// module modTest {
//     //Declare
//     export var modVar:number;
// 
//     //Increments
//     globalVar++;
//     fooCls.clsSVar++;
//     modVar++;
// 
//     class testCls {
//         static boo = foo;
//     }
// 
//     function testFn(){
//         static boo = foo;
// 
//         //Increments
//         globalVar++;
//         fooCls.clsSVar++;
//         modVar++;
//     }
// 
//     module testMod {
//         var boo = foo;
//     }
// }
// 
// //Type test
// var clsTest: fooCls;
// 
// //Arguments
// clsTest = new fooCls(globalVar);
// foo(globalVar);
// 
// //Increments
// fooCls.clsSVar++;
// modTest.modVar++;
// globalVar = globalVar + globalVar;
// 
// //ETC - Other cases
// globalVar = 3;
// foo = foo + 1;
// err = err++;
// 
// //Shadowed fn Parameter
// function shdw(globalVar: number) {
//     //Increments
//     globalVar++;
//     return globalVar;
// }
// 
// //Remotes
// //Type test
// var remoteclsTest: remotefooCls;
// 
// //Arguments
// remoteclsTest = new remotefooCls(remoteglobalVar);
// remotefoo(remoteglobalVar);
// 
// //Increments
// remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// remotemodTest.remotemodVar++;
// remoteglobalVar = remoteglobalVar + remoteglobalVar;
// 
// //ETC - Other cases
// remoteglobalVar = 3;
// 
// //Find References misses method param
// var
// 
// 
// 
//  array = ["f", "o", "o"];
// 
// array.forEach(
// 
// 
// function(str) {
// 
// 
// 
//    return str + " ";
// 
// });

// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	<|static [|{| contextId: 0, defId: 0, isWriteAccess: true |}remoteclsSVar|] = 1;|>
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls./*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true |}remoteclsSVar|]++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions ===
// === /tests/cases/fourslash/remoteGetReferences_2.ts ===
// var remoteglobalVar: number = 2;
// 
// class remotefooCls {
// 	//Declare
// 	remoteclsVar = 1;
// 	<|static [|{| contextId: 0, defId: 0 |}remoteclsSVar|] = 1;|>
// 
// 	constructor(public remoteclsParam: number) {
// 		//Increments
// 		remoteglobalVar++;
// 		this.remoteclsVar++;
// 		remotefooCls.remoteclsSVar++;
// 		this.remoteclsParam++;
// 		remotemodTest.remotemodVar++;
// 	}
// }
// 
// function remotefoo(remotex: number) {
// 	//Declare
// 	var remotefnVar = 1;
// 
// 	//Increments
// 	remotefooCls.remoteclsSVar++;
// 	remoteglobalVar++;
// 	remotemodTest.remotemodVar++;
// 	remotefnVar++;
// 
// 	//Return
// 	return remotex++;
// }
// 
// module remotemodTest {
// 	//Declare
// 	export var remotemodVar: number;
// 
// 	//Increments
// 	remoteglobalVar++;
// 	remotefooCls.remoteclsSVar++;
// 	remotemodVar++;
// 
// 	class remotetestCls {
// 		static remoteboo = remotefoo;
// 	}
// 
// 	function remotetestFn(){
//         static remoteboo = remotefoo;
// 
// 		//Increments
// 		remoteglobalVar++;
// 		remotefooCls./*FIND ALL REFS*/remoteclsSVar++;
// 		remotemodVar++;
//     }
// 
// 	module remotetestMod {
// 		var remoteboo = remotefoo;
// 	}
// }

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) remotefooCls.remoteclsSVar: number",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "remotefooCls",
    "kind": "className"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "remoteclsSVar",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "number",
    "kind": "keyword"
   }
  ]
 }
]