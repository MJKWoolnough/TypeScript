// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//         /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}div|]: {
//             name?: string;
//             isOpen?: boolean;
//         };|>
//         span: { n: string; };
//     }
// }
// var x = <|<[|{| contextId: 1, defId: 0 |}div|] />|>;

// === Definitions ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//         /*FIND ALL REFS*/<|[|{| contextId: 0, defId: 0 |}div|]: {
//             name?: string;
//             isOpen?: boolean;
//         };|>
//         span: { n: string; };
//     }
// }
// var x = <div />;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) JSX.IntrinsicElements.div: {\n    name?: string;\n    isOpen?: boolean;\n}",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "JSX",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "IntrinsicElements",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "div",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "    ",
    "kind": "space"
   },
   {
    "text": "name",
    "kind": "propertyName"
   },
   {
    "text": "?",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": ";",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "    ",
    "kind": "space"
   },
   {
    "text": "isOpen",
    "kind": "propertyName"
   },
   {
    "text": "?",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "boolean",
    "kind": "keyword"
   },
   {
    "text": ";",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//         div: {
//             name?: string;
//             isOpen?: boolean;
//         };
//         span: { n: string; };
//     }
// }
// var x = /*FIND ALL REFS*/<div />;

[]

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//         <|[|{| contextId: 0, defId: 0, isWriteAccess: true |}div|]: {
//             name?: string;
//             isOpen?: boolean;
//         };|>
//         span: { n: string; };
//     }
// }
// var x = <|</*FIND ALL REFS*/[|{| contextId: 1, defId: 0 |}div|] />|>;

// === Definitions ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//         <|[|{| contextId: 0, defId: 0 |}div|]: {
//             name?: string;
//             isOpen?: boolean;
//         };|>
//         span: { n: string; };
//     }
// }
// var x = </*FIND ALL REFS*/div />;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "property",
  "name": "(property) JSX.IntrinsicElements.div: {\n    name?: string;\n    isOpen?: boolean;\n}",
  "displayParts": [
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "property",
    "kind": "text"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "JSX",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "IntrinsicElements",
    "kind": "interfaceName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "div",
    "kind": "propertyName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "{",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "    ",
    "kind": "space"
   },
   {
    "text": "name",
    "kind": "propertyName"
   },
   {
    "text": "?",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "string",
    "kind": "keyword"
   },
   {
    "text": ";",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "    ",
    "kind": "space"
   },
   {
    "text": "isOpen",
    "kind": "propertyName"
   },
   {
    "text": "?",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "boolean",
    "kind": "keyword"
   },
   {
    "text": ";",
    "kind": "punctuation"
   },
   {
    "text": "\n",
    "kind": "lineBreak"
   },
   {
    "text": "}",
    "kind": "punctuation"
   }
  ]
 }
]