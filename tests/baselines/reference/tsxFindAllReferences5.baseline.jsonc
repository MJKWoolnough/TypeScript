// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// /*FIND ALL REFS*/<|declare function [|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <|<[|{| contextId: 1, defId: 0 |}Opt|] />|>;
// let opt1 = <|<[|{| contextId: 2, defId: 0 |}Opt|] propx={100} propString />|>;
// let opt2 = <|<[|{| contextId: 3, defId: 0 |}Opt|] propx={100} optional/>|>;
// let opt3 = <|<[|{| contextId: 4, defId: 0 |}Opt|] wrong />|>;
// let opt4 = <|<[|{| contextId: 5, defId: 0 |}Opt|] propx={100} propString="hi" />|>;

// === Definitions ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// /*FIND ALL REFS*/<|declare function [|{| contextId: 0, defId: 0 |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
// let opt4 = <Opt propx={100} propString="hi" />;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "function Opt(attributes: OptionPropBag): JSX.Element",
  "displayParts": [
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Opt",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "attributes",
    "kind": "parameterName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "OptionPropBag",
    "kind": "interfaceName"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "JSX",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "Element",
    "kind": "text"
   }
  ]
 }
]

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// <|declare function /*FIND ALL REFS*/[|{| contextId: 0, defId: 0, isWriteAccess: true, isDefinition: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <|<[|{| contextId: 1, defId: 0 |}Opt|] />|>;
// let opt1 = <|<[|{| contextId: 2, defId: 0 |}Opt|] propx={100} propString />|>;
// let opt2 = <|<[|{| contextId: 3, defId: 0 |}Opt|] propx={100} optional/>|>;
// let opt3 = <|<[|{| contextId: 4, defId: 0 |}Opt|] wrong />|>;
// let opt4 = <|<[|{| contextId: 5, defId: 0 |}Opt|] propx={100} propString="hi" />|>;

// === Definitions ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// <|declare function /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
// let opt4 = <Opt propx={100} propString="hi" />;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "function Opt(attributes: OptionPropBag): JSX.Element",
  "displayParts": [
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Opt",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "attributes",
    "kind": "parameterName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "OptionPropBag",
    "kind": "interfaceName"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "JSX",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "Element",
    "kind": "text"
   }
  ]
 }
]

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = /*FIND ALL REFS*/<Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
// let opt4 = <Opt propx={100} propString="hi" />;

[]

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| contextId: 0, defId: 0, isWriteAccess: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <|</*FIND ALL REFS*/[|{| contextId: 1, defId: 0 |}Opt|] />|>;
// let opt1 = <|<[|{| contextId: 2, defId: 0 |}Opt|] propx={100} propString />|>;
// let opt2 = <|<[|{| contextId: 3, defId: 0 |}Opt|] propx={100} optional/>|>;
// let opt3 = <|<[|{| contextId: 4, defId: 0 |}Opt|] wrong />|>;
// let opt4 = <|<[|{| contextId: 5, defId: 0 |}Opt|] propx={100} propString="hi" />|>;

// === Definitions ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| contextId: 0, defId: 0 |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = </*FIND ALL REFS*/Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
// let opt4 = <Opt propx={100} propString="hi" />;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "function Opt(attributes: OptionPropBag): JSX.Element",
  "displayParts": [
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Opt",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "attributes",
    "kind": "parameterName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "OptionPropBag",
    "kind": "interfaceName"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "JSX",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "Element",
    "kind": "text"
   }
  ]
 }
]

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = /*FIND ALL REFS*/<Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
// let opt4 = <Opt propx={100} propString="hi" />;

[]

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| contextId: 0, defId: 0, isWriteAccess: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <|<[|{| contextId: 1, defId: 0 |}Opt|] />|>;
// let opt1 = <|</*FIND ALL REFS*/[|{| contextId: 2, defId: 0 |}Opt|] propx={100} propString />|>;
// let opt2 = <|<[|{| contextId: 3, defId: 0 |}Opt|] propx={100} optional/>|>;
// let opt3 = <|<[|{| contextId: 4, defId: 0 |}Opt|] wrong />|>;
// let opt4 = <|<[|{| contextId: 5, defId: 0 |}Opt|] propx={100} propString="hi" />|>;

// === Definitions ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| contextId: 0, defId: 0 |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <Opt />;
// let opt1 = </*FIND ALL REFS*/Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
// let opt4 = <Opt propx={100} propString="hi" />;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "function Opt(attributes: OptionPropBag): JSX.Element",
  "displayParts": [
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Opt",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "attributes",
    "kind": "parameterName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "OptionPropBag",
    "kind": "interfaceName"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "JSX",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "Element",
    "kind": "text"
   }
  ]
 }
]

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = /*FIND ALL REFS*/<Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
// let opt4 = <Opt propx={100} propString="hi" />;

[]

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| contextId: 0, defId: 0, isWriteAccess: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <|<[|{| contextId: 1, defId: 0 |}Opt|] />|>;
// let opt1 = <|<[|{| contextId: 2, defId: 0 |}Opt|] propx={100} propString />|>;
// let opt2 = <|</*FIND ALL REFS*/[|{| contextId: 3, defId: 0 |}Opt|] propx={100} optional/>|>;
// let opt3 = <|<[|{| contextId: 4, defId: 0 |}Opt|] wrong />|>;
// let opt4 = <|<[|{| contextId: 5, defId: 0 |}Opt|] propx={100} propString="hi" />|>;

// === Definitions ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| contextId: 0, defId: 0 |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = </*FIND ALL REFS*/Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
// let opt4 = <Opt propx={100} propString="hi" />;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "function Opt(attributes: OptionPropBag): JSX.Element",
  "displayParts": [
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Opt",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "attributes",
    "kind": "parameterName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "OptionPropBag",
    "kind": "interfaceName"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "JSX",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "Element",
    "kind": "text"
   }
  ]
 }
]

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = /*FIND ALL REFS*/<Opt wrong />;
// let opt4 = <Opt propx={100} propString="hi" />;

[]

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| contextId: 0, defId: 0, isWriteAccess: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <|<[|{| contextId: 1, defId: 0 |}Opt|] />|>;
// let opt1 = <|<[|{| contextId: 2, defId: 0 |}Opt|] propx={100} propString />|>;
// let opt2 = <|<[|{| contextId: 3, defId: 0 |}Opt|] propx={100} optional/>|>;
// let opt3 = <|</*FIND ALL REFS*/[|{| contextId: 4, defId: 0 |}Opt|] wrong />|>;
// let opt4 = <|<[|{| contextId: 5, defId: 0 |}Opt|] propx={100} propString="hi" />|>;

// === Definitions ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| contextId: 0, defId: 0 |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = </*FIND ALL REFS*/Opt wrong />;
// let opt4 = <Opt propx={100} propString="hi" />;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "function Opt(attributes: OptionPropBag): JSX.Element",
  "displayParts": [
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Opt",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "attributes",
    "kind": "parameterName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "OptionPropBag",
    "kind": "interfaceName"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "JSX",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "Element",
    "kind": "text"
   }
  ]
 }
]

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
// let opt4 = /*FIND ALL REFS*/<Opt propx={100} propString="hi" />;

[]

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| contextId: 0, defId: 0, isWriteAccess: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <|<[|{| contextId: 1, defId: 0 |}Opt|] />|>;
// let opt1 = <|<[|{| contextId: 2, defId: 0 |}Opt|] propx={100} propString />|>;
// let opt2 = <|<[|{| contextId: 3, defId: 0 |}Opt|] propx={100} optional/>|>;
// let opt3 = <|<[|{| contextId: 4, defId: 0 |}Opt|] wrong />|>;
// let opt4 = <|</*FIND ALL REFS*/[|{| contextId: 5, defId: 0 |}Opt|] propx={100} propString="hi" />|>;

// === Definitions ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| contextId: 0, defId: 0 |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
// let opt4 = </*FIND ALL REFS*/Opt propx={100} propString="hi" />;

// === Definitions Details ===
[
 {
  "defId": 0,
  "containerKind": "",
  "containerName": "",
  "kind": "function",
  "name": "function Opt(attributes: OptionPropBag): JSX.Element",
  "displayParts": [
   {
    "text": "function",
    "kind": "keyword"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "Opt",
    "kind": "functionName"
   },
   {
    "text": "(",
    "kind": "punctuation"
   },
   {
    "text": "attributes",
    "kind": "parameterName"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "OptionPropBag",
    "kind": "interfaceName"
   },
   {
    "text": ")",
    "kind": "punctuation"
   },
   {
    "text": ":",
    "kind": "punctuation"
   },
   {
    "text": " ",
    "kind": "space"
   },
   {
    "text": "JSX",
    "kind": "moduleName"
   },
   {
    "text": ".",
    "kind": "punctuation"
   },
   {
    "text": "Element",
    "kind": "text"
   }
  ]
 }
]